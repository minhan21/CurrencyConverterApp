787de24f374d64aacda656c376e6229c
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));
var _slicedToArray2 = _interopRequireDefault(require("@babel/runtime/helpers/slicedToArray"));
var _defineProperty2 = _interopRequireDefault(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = configureFonts;
exports.fontConfig = void 0;
var _reactNative = require("react-native");
var _tokens = require("./themes/v3/tokens");
var fontConfig = {
  web: {
    regular: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '400'
    },
    medium: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '500'
    },
    light: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '300'
    },
    thin: {
      fontFamily: 'Roboto, "Helvetica Neue", Helvetica, Arial, sans-serif',
      fontWeight: '100'
    }
  },
  ios: {
    regular: {
      fontFamily: 'System',
      fontWeight: '400'
    },
    medium: {
      fontFamily: 'System',
      fontWeight: '500'
    },
    light: {
      fontFamily: 'System',
      fontWeight: '300'
    },
    thin: {
      fontFamily: 'System',
      fontWeight: '100'
    }
  },
  default: {
    regular: {
      fontFamily: 'sans-serif',
      fontWeight: 'normal'
    },
    medium: {
      fontFamily: 'sans-serif-medium',
      fontWeight: 'normal'
    },
    light: {
      fontFamily: 'sans-serif-light',
      fontWeight: 'normal'
    },
    thin: {
      fontFamily: 'sans-serif-thin',
      fontWeight: 'normal'
    }
  }
};
exports.fontConfig = fontConfig;
function configureV2Fonts(config) {
  var fonts = _reactNative.Platform.select(_objectSpread(_objectSpread({}, fontConfig), config));
  return fonts;
}
function configureV3Fonts(config) {
  if (!config) {
    return _tokens.typescale;
  }
  var isFlatConfig = Object.keys(config).every(function (key) {
    return typeof config[key] !== 'object';
  });
  if (isFlatConfig) {
    return Object.fromEntries(Object.entries(_tokens.typescale).map(function (_ref) {
      var _ref3 = (0, _slicedToArray2.default)(_ref, 2),
        variantName = _ref3[0],
        variantProperties = _ref3[1];
      return [variantName, _objectSpread(_objectSpread({}, variantProperties), config)];
    }));
  }
  return Object.assign.apply(Object, [{}, _tokens.typescale].concat((0, _toConsumableArray2.default)(Object.entries(config).map(function (_ref2) {
    var _ref4 = (0, _slicedToArray2.default)(_ref2, 2),
      variantName = _ref4[0],
      variantProperties = _ref4[1];
    return (0, _defineProperty2.default)({}, variantName, _objectSpread(_objectSpread({}, _tokens.typescale[variantName]), variantProperties));
  }))));
}
function configureFonts(params) {
  var _ref6 = params || {},
    _ref6$isV = _ref6.isV3,
    isV3 = _ref6$isV === void 0 ? true : _ref6$isV,
    config = _ref6.config;
  if (isV3) {
    return configureV3Fonts(config);
  }
  return configureV2Fonts(config);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfcmVhY3ROYXRpdmUiLCJyZXF1aXJlIiwiX3Rva2VucyIsImZvbnRDb25maWciLCJ3ZWIiLCJyZWd1bGFyIiwiZm9udEZhbWlseSIsImZvbnRXZWlnaHQiLCJtZWRpdW0iLCJsaWdodCIsInRoaW4iLCJpb3MiLCJkZWZhdWx0IiwiZXhwb3J0cyIsImNvbmZpZ3VyZVYyRm9udHMiLCJjb25maWciLCJmb250cyIsIlBsYXRmb3JtIiwic2VsZWN0IiwiX29iamVjdFNwcmVhZCIsImNvbmZpZ3VyZVYzRm9udHMiLCJ0eXBlc2NhbGUiLCJpc0ZsYXRDb25maWciLCJPYmplY3QiLCJrZXlzIiwiZXZlcnkiLCJrZXkiLCJmcm9tRW50cmllcyIsImVudHJpZXMiLCJtYXAiLCJfcmVmIiwiX3JlZjMiLCJfc2xpY2VkVG9BcnJheTIiLCJ2YXJpYW50TmFtZSIsInZhcmlhbnRQcm9wZXJ0aWVzIiwiYXNzaWduIiwiYXBwbHkiLCJjb25jYXQiLCJfdG9Db25zdW1hYmxlQXJyYXkyIiwiX3JlZjIiLCJfcmVmNCIsIl9kZWZpbmVQcm9wZXJ0eTIiLCJjb25maWd1cmVGb250cyIsInBhcmFtcyIsIl9yZWY2IiwiX3JlZjYkaXNWIiwiaXNWMyJdLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9zdHlsZXMvZm9udHMudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsWUFBQSxHQUFBQyxPQUFBO0FBRUEsSUFBQUMsT0FBQSxHQUFBRCxPQUFBO0FBR08sSUFBTUUsVUFBVSxHQUFHO0VBQ3hCQyxHQUFHLEVBQUU7SUFDSEMsT0FBTyxFQUFFO01BQ1BDLFVBQVUsRUFBRSx3REFBd0Q7TUFDcEVDLFVBQVUsRUFBRTtJQUNkLENBQUM7SUFDREMsTUFBTSxFQUFFO01BQ05GLFVBQVUsRUFBRSx3REFBd0Q7TUFDcEVDLFVBQVUsRUFBRTtJQUNkLENBQUM7SUFDREUsS0FBSyxFQUFFO01BQ0xILFVBQVUsRUFBRSx3REFBd0Q7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