7c05cb0d4cda445737e32ed234b458b1
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
var _asyncToGenerator2 = _interopRequireDefault2(require("@babel/runtime/helpers/asyncToGenerator"));
var _classCallCheck2 = _interopRequireDefault2(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault2(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault2(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _getPrototypeOf2 = _interopRequireDefault2(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault2(require("@babel/runtime/helpers/inherits"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.ELEVATION_LEVELS_MAP = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _MenuItem = _interopRequireDefault(require("./MenuItem"));
var _constants = require("../../constants");
var _theming = require("../../core/theming");
var _types = require("../../types");
var _addEventListener = require("../../utils/addEventListener");
var _BackHandler = require("../../utils/BackHandler/BackHandler");
var _Portal = _interopRequireDefault(require("../Portal/Portal"));
var _Surface = _interopRequireDefault(require("../Surface"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var SCREEN_INDENT = 8;
var ANIMATION_DURATION = 250;
var EASING = _reactNative.Easing.bezier(0.4, 0, 0.2, 1);
var WINDOW_LAYOUT = _reactNative.Dimensions.get('window');
var DEFAULT_ELEVATION = 2;
var ELEVATION_LEVELS_MAP = Object.values(_types.ElevationLevels);
exports.ELEVATION_LEVELS_MAP = ELEVATION_LEVELS_MAP;
var Menu = function (_React$Component) {
  function Menu() {
    var _this;
    (0, _classCallCheck2.default)(this, Menu);
    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }
    _this = _callSuper(this, Menu, [].concat(args));
    _this.state = {
      rendered: _this.props.visible,
      top: 0,
      left: 0,
      menuLayout: {
        width: 0,
        height: 0
      },
      anchorLayout: {
        width: 0,
        height: 0
      },
      opacityAnimation: new _reactNative.Animated.Value(0),
      scaleAnimation: new _reactNative.Animated.ValueXY({
        x: 0,
        y: 0
      }),
      windowLayout: {
        width: WINDOW_LAYOUT.width,
        height: WINDOW_LAYOUT.height
      }
    };
    _this.anchor = null;
    _this.menu = null;
    _this.keyboardHeight = 0;
    _this.isCoordinate = function (anchor) {
      return !React.isValidElement(anchor) && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.x) === 'number' && typeof (anchor === null || anchor === void 0 ? void 0 : anchor.y) === 'number';
    };
    _this.measureMenuLayout = function () {
      return new Promise(function (resolve) {
        if (_this.menu) {
          _this.menu.measureInWindow(function (x, y, width, height) {
            resolve({
              x: x,
              y: y,
              width: width,
              height: height
            });
          });
        }
      });
    };
    _this.measureAnchorLayout = function () {
      return new Promise(function (resolve) {
        var anchor = _this.props.anchor;
        if (_this.isCoordinate(anchor)) {
          resolve({
            x: anchor.x,
            y: anchor.y,
            width: 0,
            height: 0
          });
          return;
        }
        if (_this.anchor) {
          _this.anchor.measureInWindow(function (x, y, width, height) {
            resolve({
              x: x,
              y: y,
              width: width,
              height: height
            });
          });
        }
      });
    };
    _this.updateVisibility = (0, _asyncToGenerator2.default)(function* () {
      yield Promise.resolve();
      if (_this.props.visible) {
        _this.show();
      } else {
        _this.hide();
      }
    });
    _this.isBrowser = function () {
      return _reactNative.Platform.OS === 'web' && 'document' in global;
    };
    _this.focusFirstDOMNode = function (el) {
      if (el && _this.isBrowser()) {
        var node = (0, _reactNative.findNodeHandle)(el);
        var focusableNode = node.querySelector('button, [href], input, select, textarea, [tabindex]:not([tabindex="-1"])');
        focusableNode === null || focusableNode === void 0 ? void 0 : focusableNode.focus();
      }
    };
    _this.handleDismiss = function () {
      if (_this.props.visible) {
        var _this$props$onDismiss, _this$props;
        (_this$props$onDismiss = (_this$props = _this.props).onDismiss) === null || _this$props$onDismiss === void 0 ? void 0 : _this$props$onDismiss.call(_this$props);
      }
      return true;
    };
    _this.handleKeypress = function (e) {
      if (e.key === 'Escape') {
        var _this$props$onDismiss2, _this$props2;
        (_this$props$onDismiss2 = (_this$props2 = _this.props).onDismiss) === null || _this$props$onDismiss2 === void 0 ? void 0 : _this$props$onDismiss2.call(_this$props2);
      }
    };
    _this.attachListeners = function () {
      _this.backHandlerSubscription = (0, _addEventListener.addEventListener)(_BackHandler.BackHandler, 'hardwareBackPress', _this.handleDismiss);
      _this.dimensionsSubscription = (0, _addEventListener.addEventListener)(_reactNative.Dimensions, 'change', _this.handleDismiss);
      _this.isBrowser() && document.addEventListener('keyup', _this.handleKeypress);
    };
    _this.removeListeners = function () {
      var _this$backHandlerSubs, _this$dimensionsSubsc;
      (_this$backHandlerSubs = _this.backHandlerSubscription) === null || _this$backHandlerSubs === void 0 ? void 0 : _this$backHandlerSubs.remove();
      (_this$dimensionsSubsc = _this.dimensionsSubscription) === null || _this$dimensionsSubsc === void 0 ? void 0 : _this$dimensionsSubsc.remove();
      _this.isBrowser() && document.removeEventListener('keyup', _this.handleKeypress);
    };
    _this.show = (0, _asyncToGenerator2.default)(function* () {
      var windowLayout = _reactNative.Dimensions.get('window');
      var _yield$Promise$all = yield Promise.all([_this.measureMenuLayout(), _this.measureAnchorLayout()]),
        _yield$Promise$all2 = (0, _slicedToArray2.default)(_yield$Promise$all, 2),
        menuLayout = _yield$Promise$all2[0],
        anchorLayout = _yield$Promise$all2[1];
      if (!windowLayout.width || !windowLayout.height || !menuLayout.width || !menuLayout.height || !anchorLayout.width && !_this.isCoordinate(_this.props.anchor) || !anchorLayout.height && !_this.isCoordinate(_this.props.anchor)) {
        requestAnimationFrame(_this.show);
        return;
      }
      _this.setState(function () {
        return {
          left: anchorLayout.x,
          top: anchorLayout.y,
          anchorLayout: {
            height: anchorLayout.height,
            width: anchorLayout.width
          },
          menuLayout: {
            width: menuLayout.width,
            height: menuLayout.height
          },
          windowLayout: {
            height: windowLayout.height - _this.keyboardHeight,
            width: windowLayout.width
          }
        };
      }, function () {
        _this.attachListeners();
        var animation = _this.props.theme.animation;
        _reactNative.Animated.parallel([_reactNative.Animated.timing(_this.state.scaleAnimation, {
          toValue: {
            x: menuLayout.width,
            y: menuLayout.height
          },
          duration: ANIMATION_DURATION * animation.scale,
          easing: EASING,
          useNativeDriver: true
        }), _reactNative.Animated.timing(_this.state.opacityAnimation, {
          toValue: 1,
          duration: ANIMATION_DURATION * animation.scale,
          easing: EASING,
          useNativeDriver: true
        })]).start(function (_ref) {
          var finished = _ref.finished;
          if (finished) {
            _this.focusFirstDOMNode(_this.menu);
          }
        });
      });
    });
    _this.hide = function () {
      _this.removeListeners();
      var animation = _this.props.theme.animation;
      _reactNative.Animated.timing(_this.state.opacityAnimation, {
        toValue: 0,
        duration: ANIMATION_DURATION * animation.scale,
        easing: EASING,
        useNativeDriver: true
      }).start(function (_ref2) {
        var finished = _ref2.finished;
        if (finished) {
          _this.setState({
            menuLayout: {
              width: 0,
              height: 0
            },
            rendered: false
          });
          _this.state.scaleAnimation.setValue({
            x: 0,
            y: 0
          });
          _this.focusFirstDOMNode(_this.anchor);
        }
      });
    };
    _this.keyboardDidShow = function (e) {
      var keyboardHeight = e.endCoordinates.height;
      _this.keyboardHeight = keyboardHeight;
    };
    _this.keyboardDidHide = function () {
      _this.keyboardHeight = 0;
    };
    return _this;
  }
  (0, _inherits2.default)(Menu, _React$Component);
  return (0, _createClass2.default)(Menu, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.keyboardDidShowListener = _reactNative.Keyboard.addListener('keyboardDidShow', this.keyboardDidShow);
      this.keyboardDidHideListener = _reactNative.Keyboard.addListener('keyboardDidHide', this.keyboardDidHide);
    }
  }, {
    key: "componentDidUpdate",
    value: function componentDidUpdate(prevProps) {
      if (prevProps.visible !== this.props.visible) {
        this.updateVisibility();
      }
    }
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      var _this$keyboardDidShow, _this$keyboardDidHide;
      this.removeListeners();
      (_this$keyboardDidShow = this.keyboardDidShowListener) === null || _this$keyboardDidShow === void 0 ? void 0 : _this$keyboardDidShow.remove();
      (_this$keyboardDidHide = this.keyboardDidHideListener) === null || _this$keyboardDidHide === void 0 ? void 0 : _this$keyboardDidHide.remove();
    }
  }, {
    key: "render",
    value: function render() {
      var _this2 = this;
      var _this$props3 = this.props,
        visible = _this$props3.visible,
        anchor = _this$props3.anchor,
        anchorPosition = _this$props3.anchorPosition,
        contentStyle = _this$props3.contentStyle,
        style = _this$props3.style,
        _this$props3$elevatio = _this$props3.elevation,
        elevation = _this$props3$elevatio === void 0 ? DEFAULT_ELEVATION : _this$props3$elevatio,
        children = _this$props3.children,
        theme = _this$props3.theme,
        statusBarHeight = _this$props3.statusBarHeight,
        onDismiss = _this$props3.onDismiss,
        overlayAccessibilityLabel = _this$props3.overlayAccessibilityLabel,
        keyboardShouldPersistTaps = _this$props3.keyboardShouldPersistTaps,
        testID = _this$props3.testID;
      var _this$state = this.state,
        rendered = _this$state.rendered,
        menuLayout = _this$state.menuLayout,
        anchorLayout = _this$state.anchorLayout,
        opacityAnimation = _this$state.opacityAnimation,
        scaleAnimation = _this$state.scaleAnimation,
        windowLayout = _this$state.windowLayout;
      var _this$state2 = this.state,
        left = _this$state2.left,
        top = _this$state2.top;
      if (!this.isCoordinate(this.anchor) && anchorPosition === 'bottom') {
        top += anchorLayout.height;
      }
      var additionalVerticalValue = _reactNative.Platform.select({
        android: statusBarHeight,
        default: 0
      });
      var scaleTransforms = [{
        scaleX: scaleAnimation.x.interpolate({
          inputRange: [0, menuLayout.width],
          outputRange: [0, 1]
        })
      }, {
        scaleY: scaleAnimation.y.interpolate({
          inputRange: [0, menuLayout.height],
          outputRange: [0, 1]
        })
      }];
      var positionTransforms = [];
      if (left <= windowLayout.width - menuLayout.width - SCREEN_INDENT) {
        positionTransforms.push({
          translateX: scaleAnimation.x.interpolate({
            inputRange: [0, menuLayout.width],
            outputRange: [-(menuLayout.width / 2), 0]
          })
        });
        if (left < SCREEN_INDENT) {
          left = SCREEN_INDENT;
        }
      } else {
        positionTransforms.push({
          translateX: scaleAnimation.x.interpolate({
            inputRange: [0, menuLayout.width],
            outputRange: [menuLayout.width / 2, 0]
          })
        });
        left += anchorLayout.width - menuLayout.width;
        var right = left + menuLayout.width;
        if (right > windowLayout.width - SCREEN_INDENT) {
          left = windowLayout.width - SCREEN_INDENT - menuLayout.width;
        }
      }
      var scrollableMenuHeight = 0;
      if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {
        scrollableMenuHeight = windowLayout.height - top - SCREEN_INDENT - additionalVerticalValue;
      } else if (top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top >= windowLayout.height - top && top <= menuLayout.height - anchorLayout.height + SCREEN_INDENT - additionalVerticalValue) {
        scrollableMenuHeight = top + anchorLayout.height - SCREEN_INDENT + additionalVerticalValue;
      }
      scrollableMenuHeight = scrollableMenuHeight > windowLayout.height - 2 * SCREEN_INDENT ? windowLayout.height - 2 * SCREEN_INDENT : scrollableMenuHeight;
      if (top <= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue || top >= windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue && top <= windowLayout.height - top) {
        positionTransforms.push({
          translateY: scaleAnimation.y.interpolate({
            inputRange: [0, menuLayout.height],
            outputRange: [-((scrollableMenuHeight || menuLayout.height) / 2), 0]
          })
        });
        if (top < SCREEN_INDENT) {
          top = SCREEN_INDENT;
        }
      } else {
        positionTransforms.push({
          translateY: scaleAnimation.y.interpolate({
            inputRange: [0, menuLayout.height],
            outputRange: [(scrollableMenuHeight || menuLayout.height) / 2, 0]
          })
        });
        top += anchorLayout.height - (scrollableMenuHeight || menuLayout.height);
        var bottom = top + (scrollableMenuHeight || menuLayout.height) + additionalVerticalValue;
        if (bottom > windowLayout.height - SCREEN_INDENT) {
          top = scrollableMenuHeight === windowLayout.height - 2 * SCREEN_INDENT ? -SCREEN_INDENT * 2 : windowLayout.height - menuLayout.height - SCREEN_INDENT - additionalVerticalValue;
        }
      }
      var shadowMenuContainerStyle = _objectSpread(_objectSpread({
        opacity: opacityAnimation,
        transform: scaleTransforms,
        borderRadius: theme.roundness
      }, !theme.isV3 && {
        elevation: 8
      }), scrollableMenuHeight ? {
        height: scrollableMenuHeight
      } : {});
      var positionStyle = _objectSpread({
        top: this.isCoordinate(anchor) ? top : top + additionalVerticalValue
      }, _reactNative.I18nManager.getConstants().isRTL ? {
        right: left
      } : {
        left: left
      });
      var pointerEvents = visible ? 'box-none' : 'none';
      return React.createElement(_reactNative.View, {
        ref: function ref(_ref5) {
          _this2.anchor = _ref5;
        },
        collapsable: false
      }, this.isCoordinate(anchor) ? null : anchor, rendered ? React.createElement(_Portal.default, null, React.createElement(_reactNative.Pressable, {
        accessibilityLabel: overlayAccessibilityLabel,
        accessibilityRole: "button",
        onPress: onDismiss,
        style: styles.pressableOverlay
      }), React.createElement(_reactNative.View, {
        ref: function ref(_ref6) {
          _this2.menu = _ref6;
        },
        collapsable: false,
        accessibilityViewIsModal: visible,
        style: [styles.wrapper, positionStyle, style],
        pointerEvents: pointerEvents,
        onAccessibilityEscape: onDismiss,
        testID: `${testID}-view`
      }, React.createElement(_reactNative.Animated.View, {
        pointerEvents: pointerEvents,
        style: {
          transform: positionTransforms
        }
      }, React.createElement(_Surface.default, _extends({
        pointerEvents: pointerEvents,
        style: [styles.shadowMenuContainer, shadowMenuContainerStyle, theme.isV3 && {
          backgroundColor: theme.colors.elevation[ELEVATION_LEVELS_MAP[elevation]]
        }, contentStyle]
      }, theme.isV3 && {
        elevation: elevation
      }, {
        testID: `${testID}-surface`,
        theme: theme
      }), scrollableMenuHeight && React.createElement(_reactNative.ScrollView, {
        keyboardShouldPersistTaps: keyboardShouldPersistTaps
      }, children) || React.createElement(React.Fragment, null, children))))) : null);
    }
  }], [{
    key: "getDerivedStateFromProps",
    value: function getDerivedStateFromProps(nextProps, prevState) {
      if (nextProps.visible && !prevState.rendered) {
        return {
          rendered: true
        };
      }
      return null;
    }
  }]);
}(React.Component);
Menu.Item = _MenuItem.default;
Menu.defaultProps = {
  statusBarHeight: _constants.APPROX_STATUSBAR_HEIGHT,
  overlayAccessibilityLabel: 'Close menu',
  testID: 'menu'
};
var styles = _reactNative.StyleSheet.create({
  wrapper: {
    position: 'absolute'
  },
  shadowMenuContainer: {
    opacity: 0,
    paddingVertical: 8
  },
  pressableOverlay: _objectSpread(_objectSpread(_objectSpread({}, _reactNative.StyleSheet.absoluteFillObject), _reactNative.Platform.OS === 'web' && {
    cursor: 'default'
  }), {}, {
    width: '100%'
  })
});
var _default = (0, _theming.withInternalTheme)(Menu);
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,