{"version":3,"names":["_react","_interopRequireWildcard","require","_propTypes","_interopRequireDefault","_reactNative","_ensureNativeModuleAvailable","_createIconSourceCache","_iconButton","_NativeRNVectorIcons","_jsxRuntime","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","DEFAULT_ICON_SIZE","exports","DEFAULT_ICON_COLOR","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","fontBasename","replace","fontReference","Platform","select","windows","android","web","IconNamePropType","PropTypes","oneOf","Icon","_PureComponent","_classCallCheck2","_inherits2","_createClass2","key","value","render","_this$props","props","name","size","color","style","children","_objectWithoutProperties2","glyph","String","fromCodePoint","styleDefaults","fontSize","styleOverrides","fontWeight","jsxs","Text","selectable","PureComponent","propTypes","allowFontScaling","bool","number","any","node","defaultProps","imageSourceCache","createIconSourceCache","resolveGlyph","getImageSourceSync","undefined","ensureNativeModuleAvailable","processedColor","processColor","cacheKey","imagePath","NativeIconAPI","getImageForFontSync","uri","scale","PixelRatio","setValue","error","setError","getImageSource","_x","_getImageSource","_asyncToGenerator2","getImageForFont","loadFont","_loadFont","file","OS","Error","loadFontWithFileName","_toConsumableArray2","split","hasIcon","getRawGlyphMap","getFontFamily","Button","createIconButtonComponent"],"sources":["create-icon-set.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { Platform, PixelRatio, processColor, Text } from 'react-native';\n\nimport ensureNativeModuleAvailable from './ensure-native-module-available';\nimport createIconSourceCache from './create-icon-source-cache';\nimport createIconButtonComponent from './icon-button';\nimport NativeIconAPI from './NativeRNVectorIcons';\n\nexport const DEFAULT_ICON_SIZE = 12;\nexport const DEFAULT_ICON_COLOR = 'black';\n\nexport default function createIconSet(\n  glyphMap,\n  fontFamily,\n  fontFile,\n  fontStyle\n) {\n  // Android doesn't care about actual fontFamily name, it will only look in fonts folder.\n  const fontBasename = fontFile\n    ? fontFile.replace(/\\.(otf|ttf)$/, '')\n    : fontFamily;\n\n  const fontReference = Platform.select({\n    windows: `/Assets/${fontFile}#${fontFamily}`,\n    android: fontBasename,\n    web: fontBasename,\n    default: fontFamily,\n  });\n\n  const IconNamePropType = PropTypes.oneOf(Object.keys(glyphMap));\n\n  class Icon extends PureComponent {\n    static propTypes = {\n      allowFontScaling: PropTypes.bool,\n      name: IconNamePropType,\n      size: PropTypes.number,\n      color: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n      children: PropTypes.node,\n      style: PropTypes.any, // eslint-disable-line react/forbid-prop-types\n    };\n\n    static defaultProps = {\n      size: DEFAULT_ICON_SIZE,\n      allowFontScaling: false,\n    };\n\n    render() {\n      const { name, size, color, style, children, ...props } = this.props;\n\n      let glyph = name ? glyphMap[name] || '?' : '';\n      if (typeof glyph === 'number') {\n        glyph = String.fromCodePoint(glyph);\n      }\n\n      const styleDefaults = {\n        fontSize: size,\n        color,\n      };\n\n      const styleOverrides = {\n        fontFamily: fontReference,\n        fontWeight: 'normal',\n        fontStyle: 'normal',\n      };\n\n      props.style = [styleDefaults, style, styleOverrides, fontStyle || {}];\n\n      return (\n        <Text selectable={false} {...props}>\n          {glyph}\n          {children}\n        </Text>\n      );\n    }\n  }\n\n  const imageSourceCache = createIconSourceCache();\n\n  function resolveGlyph(name) {\n    const glyph = glyphMap[name] || '?';\n    if (typeof glyph === 'number') {\n      return String.fromCodePoint(glyph);\n    }\n    return glyph;\n  }\n\n  function getImageSourceSync(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = NativeIconAPI.getImageForFontSync(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR\n  ) {\n    ensureNativeModuleAvailable();\n\n    const glyph = resolveGlyph(name);\n    const processedColor = processColor(color);\n    const cacheKey = `${glyph}:${size}:${processedColor}`;\n\n    if (imageSourceCache.has(cacheKey)) {\n      return imageSourceCache.get(cacheKey);\n    }\n    try {\n      const imagePath = await NativeIconAPI.getImageForFont(\n        fontReference,\n        glyph,\n        size,\n        processedColor\n      );\n      const value = { uri: imagePath, scale: PixelRatio.get() };\n      imageSourceCache.setValue(cacheKey, value);\n      return value;\n    } catch (error) {\n      imageSourceCache.setError(cacheKey, error);\n      throw error;\n    }\n  }\n\n  async function loadFont(file = fontFile) {\n    if (Platform.OS === 'ios') {\n      ensureNativeModuleAvailable();\n      if (!file) {\n        throw new Error('Unable to load font, because no file was specified. ');\n      }\n      await NativeIconAPI.loadFontWithFileName(...file.split('.'));\n    }\n  }\n\n  function hasIcon(name) {\n    return Object.prototype.hasOwnProperty.call(glyphMap, name);\n  }\n\n  function getRawGlyphMap() {\n    return glyphMap;\n  }\n\n  function getFontFamily() {\n    return fontReference;\n  }\n\n  Icon.Button = createIconButtonComponent(Icon);\n  Icon.getImageSource = getImageSource;\n  Icon.getImageSourceSync = getImageSourceSync;\n  Icon.loadFont = loadFont;\n  Icon.hasIcon = hasIcon;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.getFontFamily = getFontFamily;\n\n  return Icon;\n}\n"],"mappings":"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","ignoreList":[]}