f09e6dfcab05dc0c8c48255d059f17a3
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["icon", "label", "active", "disabled", "theme", "rippleColor", "style", "onPress", "background", "accessibilityLabel", "right", "labelMaxFontSizeMultiplier"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _theming = require("../../core/theming");
var _Icon = _interopRequireDefault(require("../Icon"));
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var DrawerItem = function DrawerItem(_ref) {
  var icon = _ref.icon,
    label = _ref.label,
    active = _ref.active,
    disabled = _ref.disabled,
    themeOverrides = _ref.theme,
    customRippleColor = _ref.rippleColor,
    style = _ref.style,
    onPress = _ref.onPress,
    background = _ref.background,
    accessibilityLabel = _ref.accessibilityLabel,
    right = _ref.right,
    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var roundness = theme.roundness,
    isV3 = theme.isV3;
  var backgroundColor = active ? isV3 ? theme.colors.secondaryContainer : (0, _color.default)(theme.colors.primary).alpha(0.12).rgb().string() : 'transparent';
  var contentColor = active ? isV3 ? theme.colors.onSecondaryContainer : theme.colors.primary : isV3 ? theme.colors.onSurfaceVariant : (0, _color.default)(theme.colors.text).alpha(0.68).rgb().string();
  var labelMargin = icon ? isV3 ? 12 : 32 : 0;
  var borderRadius = (isV3 ? 7 : 1) * roundness;
  var rippleColor = isV3 ? (0, _color.default)(contentColor).alpha(0.12).rgb().string() : undefined;
  var font = isV3 ? theme.fonts.labelLarge : theme.fonts.medium;
  return React.createElement(_reactNative.View, rest, React.createElement(_TouchableRipple.default, {
    borderless: true,
    disabled: disabled,
    background: background,
    onPress: onPress,
    style: [styles.container, {
      backgroundColor: backgroundColor,
      borderRadius: borderRadius
    }, isV3 && styles.v3Container, style],
    accessibilityRole: "button",
    accessibilityState: {
      selected: active
    },
    accessibilityLabel: accessibilityLabel,
    rippleColor: customRippleColor || rippleColor,
    theme: theme
  }, React.createElement(_reactNative.View, {
    style: [styles.wrapper, isV3 && styles.v3Wrapper]
  }, React.createElement(_reactNative.View, {
    style: styles.content
  }, icon ? React.createElement(_Icon.default, {
    source: icon,
    size: 24,
    color: contentColor
  }) : null, React.createElement(_Text.default, {
    variant: "labelLarge",
    selectable: false,
    numberOfLines: 1,
    style: [styles.label, _objectSpread({
      color: contentColor,
      marginLeft: labelMargin
    }, font)],
    maxFontSizeMultiplier: labelMaxFontSizeMultiplier
  }, label)), right === null || right === void 0 ? void 0 : right({
    color: contentColor
  }))));
};
DrawerItem.displayName = 'Drawer.Item';
var styles = _reactNative.StyleSheet.create({
  container: {
    marginHorizontal: 10,
    marginVertical: 4
  },
  v3Container: {
    justifyContent: 'center',
    height: 56,
    marginLeft: 12,
    marginRight: 12,
    marginVertical: 0
  },
  wrapper: {
    flexDirection: 'row',
    alignItems: 'center',
    padding: 8
  },
  v3Wrapper: {
    marginLeft: 16,
    marginRight: 24,
    padding: 0
  },
  content: {
    flex: 1,
    flexDirection: 'row',
    alignItems: 'center'
  },
  label: {
    marginRight: 32
  }
});
var _default = DrawerItem;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,