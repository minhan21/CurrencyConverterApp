3bc5539c48a3faaece97fdd1790e374b
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.RadioButtonItem = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _RadioButton = _interopRequireDefault(require("./RadioButton"));
var _RadioButtonAndroid = _interopRequireDefault(require("./RadioButtonAndroid"));
var _RadioButtonGroup = require("./RadioButtonGroup");
var _RadioButtonIOS = _interopRequireDefault(require("./RadioButtonIOS"));
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
var _Text = _interopRequireDefault(require("../Typography/Text"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var RadioButtonItem = function RadioButtonItem(_ref) {
  var value = _ref.value,
    label = _ref.label,
    style = _ref.style,
    labelStyle = _ref.labelStyle,
    _onPress = _ref.onPress,
    onLongPress = _ref.onLongPress,
    disabled = _ref.disabled,
    color = _ref.color,
    uncheckedColor = _ref.uncheckedColor,
    rippleColor = _ref.rippleColor,
    status = _ref.status,
    themeOverrides = _ref.theme,
    background = _ref.background,
    _ref$accessibilityLab = _ref.accessibilityLabel,
    accessibilityLabel = _ref$accessibilityLab === void 0 ? label : _ref$accessibilityLab,
    testID = _ref.testID,
    mode = _ref.mode,
    _ref$position = _ref.position,
    position = _ref$position === void 0 ? 'trailing' : _ref$position,
    _ref$labelVariant = _ref.labelVariant,
    labelVariant = _ref$labelVariant === void 0 ? 'bodyLarge' : _ref$labelVariant,
    labelMaxFontSizeMultiplier = _ref.labelMaxFontSizeMultiplier;
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var radioButtonProps = {
    value: value,
    disabled: disabled,
    status: status,
    color: color,
    theme: theme,
    uncheckedColor: uncheckedColor
  };
  var isLeading = position === 'leading';
  var radioButton;
  if (mode === 'android') {
    radioButton = React.createElement(_RadioButtonAndroid.default, radioButtonProps);
  } else if (mode === 'ios') {
    radioButton = React.createElement(_RadioButtonIOS.default, radioButtonProps);
  } else {
    radioButton = React.createElement(_RadioButton.default, radioButtonProps);
  }
  var textColor = theme.isV3 ? theme.colors.onSurface : theme.colors.text;
  var disabledTextColor = theme.isV3 ? theme.colors.onSurfaceDisabled : theme.colors.disabled;
  var textAlign = isLeading ? 'right' : 'left';
  var computedStyle = {
    color: disabled ? disabledTextColor : textColor,
    textAlign: textAlign
  };
  return React.createElement(_RadioButtonGroup.RadioButtonContext.Consumer, null, function (context) {
    var checked = (0, _utils.isChecked)({
      contextValue: context === null || context === void 0 ? void 0 : context.value,
      status: status,
      value: value
    }) === 'checked';
    return React.createElement(_TouchableRipple.default, {
      onPress: function onPress(event) {
        return (0, _utils.handlePress)({
          onPress: _onPress,
          onValueChange: context === null || context === void 0 ? void 0 : context.onValueChange,
          value: value,
          event: event
        });
      },
      onLongPress: onLongPress,
      accessibilityLabel: accessibilityLabel,
      accessibilityRole: "radio",
      accessibilityState: {
        checked: checked,
        disabled: disabled
      },
      testID: testID,
      disabled: disabled,
      background: background,
      theme: theme,
      rippleColor: rippleColor
    }, React.createElement(_reactNative.View, {
      style: [styles.container, style],
      pointerEvents: "none"
    }, isLeading && radioButton, React.createElement(_Text.default, {
      variant: labelVariant,
      style: [styles.label, !theme.isV3 && styles.font, computedStyle, labelStyle],
      maxFontSizeMultiplier: labelMaxFontSizeMultiplier
    }, label), !isLeading && radioButton));
  });
};
exports.RadioButtonItem = RadioButtonItem;
RadioButtonItem.displayName = 'RadioButton.Item';
var _default = RadioButtonItem;
exports.default = _default;
var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center',
    justifyContent: 'space-between',
    paddingVertical: 8,
    paddingHorizontal: 16
  },
  label: {
    flexShrink: 1,
    flexGrow: 1
  },
  font: {
    fontSize: 16
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,