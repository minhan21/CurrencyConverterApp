{"file":"/Users/antran/Desktop/CurrencyConverterApp/src/context/RateContext.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,8BAA8B;AAC9B,+CAA8E;AAO9E,MAAM,WAAW,GAAG,IAAA,qBAAa,EAA+B,SAAS,CAAC,CAAC;AAEpE,MAAM,YAAY,GAAsC,CAAC,EAC9D,QAAQ,GACT,EAAE,EAAE;IACH,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,GAAG,IAAA,gBAAQ,EAAyB,EAAE,CAAC,CAAC;IAE/D,OAAO,CACL,8BAAC,WAAW,CAAC,QAAQ,IAAC,KAAK,EAAE,EAAE,KAAK,EAAE,QAAQ,EAAE,IAC7C,QAAQ,CACY,CACxB,CAAC;AACJ,CAAC,CAAC;AAVW,QAAA,YAAY,gBAUvB;AAEK,MAAM,cAAc,GAAG,GAAG,EAAE;IACjC,MAAM,OAAO,GAAG,IAAA,kBAAU,EAAC,WAAW,CAAC,CAAC;IACxC,IAAI,OAAO,KAAK,SAAS,EAAE,CAAC;QAC1B,MAAM,IAAI,KAAK,CAAC,mDAAmD,CAAC,CAAC;IACvE,CAAC;IACD,OAAO,OAAO,CAAC;AACjB,CAAC,CAAC;AANW,QAAA,cAAc,kBAMzB","names":[],"sources":["/Users/antran/Desktop/CurrencyConverterApp/src/context/RateContext.tsx"],"sourcesContent":["// src/context/RateContext.tsx\nimport React, { createContext, useContext, useState, ReactNode } from 'react';\n\ninterface RateContextProps {\n  rates: Record<string, number>;\n  setRates: React.Dispatch<React.SetStateAction<Record<string, number>>>;\n}\n\nconst RateContext = createContext<RateContextProps | undefined>(undefined);\n\nexport const RateProvider: React.FC<{ children: ReactNode }> = ({\n  children,\n}) => {\n  const [rates, setRates] = useState<Record<string, number>>({});\n\n  return (\n    <RateContext.Provider value={{ rates, setRates }}>\n      {children}\n    </RateContext.Provider>\n  );\n};\n\nexport const useRateContext = () => {\n  const context = useContext(RateContext);\n  if (context === undefined) {\n    throw new Error('useRateContext must be used within a RateProvider');\n  }\n  return context;\n};\n"],"version":3}