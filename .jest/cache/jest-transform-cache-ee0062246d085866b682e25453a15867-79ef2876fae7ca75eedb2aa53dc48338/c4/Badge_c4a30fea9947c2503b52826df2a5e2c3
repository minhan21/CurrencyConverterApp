757ecf2a9ecaf61f3b2a868241e6b641
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["children", "size", "style", "theme", "visible"],
  _excluded2 = ["backgroundColor"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../core/theming");
var _colors = require("../styles/themes/v2/colors");
var _getContrastingColor = _interopRequireDefault(require("../utils/getContrastingColor"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var defaultSize = 20;
var Badge = function Badge(_ref) {
  var _theme$colors;
  var children = _ref.children,
    _ref$size = _ref.size,
    size = _ref$size === void 0 ? defaultSize : _ref$size,
    style = _ref.style,
    themeOverrides = _ref.theme,
    _ref$visible = _ref.visible,
    visible = _ref$visible === void 0 ? true : _ref$visible,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _React$useRef = React.useRef(new _reactNative.Animated.Value(visible ? 1 : 0)),
    opacity = _React$useRef.current;
  var _ref2 = (0, _reactNative.useWindowDimensions)(),
    fontScale = _ref2.fontScale;
  var isFirstRendering = React.useRef(true);
  var scale = theme.animation.scale;
  React.useEffect(function () {
    if (isFirstRendering.current) {
      isFirstRendering.current = false;
      return;
    }
    _reactNative.Animated.timing(opacity, {
      toValue: visible ? 1 : 0,
      duration: 150 * scale,
      useNativeDriver: true
    }).start();
  }, [visible, opacity, scale]);
  var _ref3 = _reactNative.StyleSheet.flatten(style) || {},
    _ref3$backgroundColor = _ref3.backgroundColor,
    backgroundColor = _ref3$backgroundColor === void 0 ? theme.isV3 ? theme.colors.error : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.notification : _ref3$backgroundColor,
    restStyle = (0, _objectWithoutProperties2.default)(_ref3, _excluded2);
  var textColor = theme.isV3 ? theme.colors.onError : (0, _getContrastingColor.default)(backgroundColor, _colors.white, _colors.black);
  var borderRadius = size / 2;
  var paddingHorizontal = theme.isV3 ? 3 : 4;
  return React.createElement(_reactNative.Animated.Text, _extends({
    numberOfLines: 1,
    style: [_objectSpread(_objectSpread({
      opacity: opacity,
      backgroundColor: backgroundColor,
      color: textColor,
      fontSize: size * 0.5
    }, !theme.isV3 && theme.fonts.regular), {}, {
      lineHeight: size / fontScale,
      height: size,
      minWidth: size,
      borderRadius: borderRadius,
      paddingHorizontal: paddingHorizontal
    }), styles.container, restStyle]
  }, rest), children);
};
var _default = Badge;
exports.default = _default;
var styles = _reactNative.StyleSheet.create({
  container: {
    alignSelf: 'flex-end',
    textAlign: 'center',
    textAlignVertical: 'center',
    overflow: 'hidden'
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX2NvbG9ycyIsIl9nZXRDb250cmFzdGluZ0NvbG9yIiwiX2ludGVyb3BSZXF1aXJlRGVmYXVsdCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiYXBwbHkiLCJkZWZhdWx0U2l6ZSIsIkJhZGdlIiwiX3JlZiIsIl90aGVtZSRjb2xvcnMiLCJjaGlsZHJlbiIsIl9yZWYkc2l6ZSIsInNpemUiLCJzdHlsZSIsInRoZW1lT3ZlcnJpZGVzIiwidGhlbWUiLCJfcmVmJHZpc2libGUiLCJ2aXNpYmxlIiwicmVzdCIsIl9vYmplY3RXaXRob3V0UHJvcGVydGllczIiLCJfZXhjbHVkZWQiLCJ1c2VJbnRlcm5hbFRoZW1lIiwiX1JlYWN0JHVzZVJlZiIsInVzZVJlZiIsIkFuaW1hdGVkIiwiVmFsdWUiLCJvcGFjaXR5IiwiY3VycmVudCIsIl9yZWYyIiwidXNlV2luZG93RGltZW5zaW9ucyIsImZvbnRTY2FsZSIsImlzRmlyc3RSZW5kZXJpbmciLCJzY2FsZSIsImFuaW1hdGlvbiIsInVzZUVmZmVjdCIsInRpbWluZyIsInRvVmFsdWUiLCJkdXJhdGlvbiIsInVzZU5hdGl2ZURyaXZlciIsInN0YXJ0IiwiX3JlZjMiLCJTdHlsZVNoZWV0IiwiZmxhdHRlbiIsIl9yZWYzJGJhY2tncm91bmRDb2xvciIsImJhY2tncm91bmRDb2xvciIsImlzVjMiLCJjb2xvcnMiLCJlcnJvciIsIm5vdGlmaWNhdGlvbiIsInJlc3RTdHlsZSIsIl9leGNsdWRlZDIiLCJ0ZXh0Q29sb3IiLCJvbkVycm9yIiwid2hpdGUiLCJibGFjayIsImJvcmRlclJhZGl1cyIsInBhZGRpbmdIb3Jpem9udGFsIiwiY3JlYXRlRWxlbWVudCIsIlRleHQiLCJudW1iZXJPZkxpbmVzIiwiX29iamVjdFNwcmVhZCIsImNvbG9yIiwiZm9udFNpemUiLCJmb250cyIsInJlZ3VsYXIiLCJsaW5lSGVpZ2h0IiwiaGVpZ2h0IiwibWluV2lkdGgiLCJzdHlsZXMiLCJjb250YWluZXIiLCJfZGVmYXVsdCIsImV4cG9ydHMiLCJjcmVhdGUiLCJhbGlnblNlbGYiLCJ0ZXh0QWxpZ24iLCJ0ZXh0QWxpZ25WZXJ0aWNhbCIsIm92ZXJmbG93Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQmFkZ2UudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBUUEsSUFBQUUsUUFBQSxHQUFBRixPQUFBO0FBQ0EsSUFBQUcsT0FBQSxHQUFBSCxPQUFBO0FBRUEsSUFBQUksb0JBQUEsR0FBQUMsc0JBQUEsQ0FBQUwsT0FBQTtBQUErRCxTQUFBSyx1QkFBQUMsR0FBQTtFQUFBLE9BQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFBQSxTQUFBRyx5QkFBQUMsV0FBQTtFQUFBLFdBQUFDLE9BQUE7RUFBQSxJQUFBQyxpQkFBQSxPQUFBRCxPQUFBO0VBQUEsSUFBQUUsZ0JB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