{"file":"/Users/antran/Desktop/CurrencyConverterApp/src/components/CurrencyConverter.tsx","mappings":"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","names":[],"sources":["/Users/antran/Desktop/CurrencyConverterApp/src/components/CurrencyConverter.tsx"],"sourcesContent":["// src/components/CurrencyConverter.tsx\nimport React, { useState, useMemo, useCallback } from 'react';\nimport { View, StyleSheet } from 'react-native';\nimport { TextInput, useTheme, Text } from 'react-native-paper';\nimport RNPickerSelect from 'react-native-picker-select';\nimport commonStyles from '../styles/commonStyles';\nimport { roundToTwoDecimals } from '../utils';\ninterface CurrencyConverterProps {\n  rates: Record<string, number>;\n}\n\nconst CurrencyConverter: React.FC<CurrencyConverterProps> = ({ rates }) => {\n  const [baseCurrency, setBaseCurrency] = useState<string>('USD');\n  const [targetCurrency, setTargetCurrency] = useState<string>('EUR');\n  const [amount, setAmount] = useState<string>('1');\n  const [convertedAmount, setConvertedAmount] = useState<string | null>(null);\n  const theme = useTheme();\n\n  const currencyItems = useMemo(\n    () =>\n      Object.keys(rates).map((currency) => ({\n        label: currency,\n        value: currency,\n      })),\n    [rates],\n  );\n\n  const handleConvert = useCallback(\n    (value: string) => {\n      setAmount(value);\n      if (rates[baseCurrency] && rates[targetCurrency]) {\n        const result =\n          (parseFloat(value) / rates[baseCurrency]) * rates[targetCurrency];\n        setConvertedAmount(roundToTwoDecimals(result).toString());\n      }\n    },\n    [baseCurrency, targetCurrency, rates],\n  );\n\n  return (\n    <View style={commonStyles.container}>\n      <RNPickerSelect\n        onValueChange={(value) => setBaseCurrency(value)}\n        items={currencyItems}\n        placeholder={{ label: 'Select base currency', value: null }}\n        style={pickerSelectStyles()}\n      />\n      <RNPickerSelect\n        onValueChange={(value) => setTargetCurrency(value)}\n        items={currencyItems}\n        placeholder={{ label: 'Select target currency', value: null }}\n        style={pickerSelectStyles()}\n      />\n      <TextInput\n        mode=\"outlined\"\n        label=\"Amount\"\n        value={amount}\n        keyboardType=\"numeric\"\n        onChangeText={handleConvert}\n        style={styles.input}\n      />\n      {convertedAmount && (\n        <Text style={styles.resultText}>\n          {amount} {baseCurrency} = {convertedAmount} {targetCurrency}\n        </Text>\n      )}\n    </View>\n  );\n};\n\nconst pickerSelectStyles = () => ({\n  inputIOS: {\n    fontSize: 16,\n    paddingVertical: 12,\n    paddingHorizontal: 10,\n    borderWidth: 1,\n    borderRadius: 4,\n    color: 'black',\n    paddingRight: 30,\n    marginVertical: 10,\n  },\n  inputAndroid: {\n    fontSize: 16,\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    borderWidth: 0.5,\n    borderRadius: 8,\n    color: 'black',\n    paddingRight: 30,\n    marginVertical: 10,\n  },\n});\n\nconst styles = StyleSheet.create({\n  input: {\n    marginVertical: 10,\n  },\n  resultText: {\n    fontSize: 18,\n    marginVertical: 20,\n  },\n});\n\nexport default React.memo(CurrencyConverter);\n"],"version":3}