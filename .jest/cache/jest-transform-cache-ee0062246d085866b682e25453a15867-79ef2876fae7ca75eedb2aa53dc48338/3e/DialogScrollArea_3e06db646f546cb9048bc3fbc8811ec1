88fad281a115a92671d2218f1df848e7
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../../core/theming");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var DialogScrollArea = function DialogScrollArea(props) {
  var theme = (0, _theming.useInternalTheme)(props.theme);
  var borderStyles = {
    borderColor: theme.isV3 ? theme.colors.surfaceVariant : 'rgba(0, 0, 0, .12)',
    borderTopWidth: theme.isV3 ? 1 : _reactNative.StyleSheet.hairlineWidth,
    borderBottomWidth: theme.isV3 ? 1 : _reactNative.StyleSheet.hairlineWidth
  };
  return React.createElement(_reactNative.View, _extends({}, props, {
    style: [styles.container, borderStyles, theme.isV3 && styles.v3Container, props.style]
  }), props.children);
};
DialogScrollArea.displayName = 'Dialog.ScrollArea';
var styles = _reactNative.StyleSheet.create({
  container: {
    paddingHorizontal: 24,
    flexGrow: 1,
    flexShrink: 1
  },
  v3Container: {
    marginBottom: 24
  }
});
var _default = DialogScrollArea;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsIkRpYWxvZ1Njcm9sbEFyZWEiLCJwcm9wcyIsInRoZW1lIiwidXNlSW50ZXJuYWxUaGVtZSIsImJvcmRlclN0eWxlcyIsImJvcmRlckNvbG9yIiwiaXNWMyIsImNvbG9ycyIsInN1cmZhY2VWYXJpYW50IiwiYm9yZGVyVG9wV2lkdGgiLCJTdHlsZVNoZWV0IiwiaGFpcmxpbmVXaWR0aCIsImJvcmRlckJvdHRvbVdpZHRoIiwiY3JlYXRlRWxlbWVudCIsIlZpZXciLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsInYzQ29udGFpbmVyIiwiY2hpbGRyZW4iLCJkaXNwbGF5TmFtZSIsImNyZWF0ZSIsInBhZGRpbmdIb3Jpem9udGFsIiwiZmxleEdyb3ciLCJmbGV4U2hyaW5rIiwibWFyZ2luQm90dG9tIiwiX2RlZmF1bHQiLCJleHBvcnRzIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvRGlhbG9nL0RpYWxvZ1Njcm9sbEFyZWEudHN4Il0sInNvdXJjZXNDb250ZW50Ijpb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