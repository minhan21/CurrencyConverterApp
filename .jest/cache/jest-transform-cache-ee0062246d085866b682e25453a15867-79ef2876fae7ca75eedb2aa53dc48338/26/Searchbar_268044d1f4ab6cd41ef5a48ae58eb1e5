3657333ac50c510a7acb4362759d0534
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["icon", "iconColor", "rippleColor", "onIconPress", "searchAccessibilityLabel", "clearIcon", "clearAccessibilityLabel", "onClearIconPress", "traileringIcon", "traileringIconColor", "traileringIconAccessibilityLabel", "traileringRippleColor", "onTraileringIconPress", "right", "mode", "showDivider", "inputStyle", "placeholder", "elevation", "style", "theme", "value", "loading", "testID"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _color = _interopRequireDefault(require("color"));
var _ActivityIndicator = _interopRequireDefault(require("./ActivityIndicator"));
var _Divider = _interopRequireDefault(require("./Divider"));
var _IconButton = _interopRequireDefault(require("./IconButton/IconButton"));
var _MaterialCommunityIcon = _interopRequireDefault(require("./MaterialCommunityIcon"));
var _Surface = _interopRequireDefault(require("./Surface"));
var _theming = require("../core/theming");
var _forwardRef = require("../utils/forwardRef");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var Searchbar = (0, _forwardRef.forwardRef)(function (_ref, ref) {
  var _theme$colors, _theme$colors2;
  var icon = _ref.icon,
    customIconColor = _ref.iconColor,
    customRippleColor = _ref.rippleColor,
    onIconPress = _ref.onIconPress,
    _ref$searchAccessibil = _ref.searchAccessibilityLabel,
    searchAccessibilityLabel = _ref$searchAccessibil === void 0 ? 'search' : _ref$searchAccessibil,
    clearIcon = _ref.clearIcon,
    _ref$clearAccessibili = _ref.clearAccessibilityLabel,
    clearAccessibilityLabel = _ref$clearAccessibili === void 0 ? 'clear' : _ref$clearAccessibili,
    onClearIconPress = _ref.onClearIconPress,
    traileringIcon = _ref.traileringIcon,
    traileringIconColor = _ref.traileringIconColor,
    traileringIconAccessibilityLabel = _ref.traileringIconAccessibilityLabel,
    customTraileringRippleColor = _ref.traileringRippleColor,
    onTraileringIconPress = _ref.onTraileringIconPress,
    right = _ref.right,
    _ref$mode = _ref.mode,
    mode = _ref$mode === void 0 ? 'bar' : _ref$mode,
    _ref$showDivider = _ref.showDivider,
    showDivider = _ref$showDivider === void 0 ? true : _ref$showDivider,
    inputStyle = _ref.inputStyle,
    placeholder = _ref.placeholder,
    _ref$elevation = _ref.elevation,
    elevation = _ref$elevation === void 0 ? 0 : _ref$elevation,
    style = _ref.style,
    themeOverrides = _ref.theme,
    value = _ref.value,
    _ref$loading = _ref.loading,
    loading = _ref$loading === void 0 ? false : _ref$loading,
    _ref$testID = _ref.testID,
    testID = _ref$testID === void 0 ? 'search-bar' : _ref$testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var root = React.useRef(null);
  React.useImperativeHandle(ref, function () {
    var input = root.current;
    if (input) {
      return {
        focus: function focus() {
          return input.focus();
        },
        clear: function clear() {
          return input.clear();
        },
        setNativeProps: function setNativeProps(args) {
          return input.setNativeProps(args);
        },
        isFocused: function isFocused() {
          return input.isFocused();
        },
        blur: function blur() {
          return input.blur();
        }
      };
    }
    var noop = function noop() {
      throw new Error('TextInput is not available');
    };
    return {
      focus: noop,
      clear: noop,
      setNativeProps: noop,
      isFocused: noop,
      blur: noop
    };
  });
  var handleClearPress = function handleClearPress(e) {
    var _root$current, _rest$onChangeText;
    (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.clear();
    (_rest$onChangeText = rest.onChangeText) === null || _rest$onChangeText === void 0 ? void 0 : _rest$onChangeText.call(rest, '');
    onClearIconPress === null || onClearIconPress === void 0 ? void 0 : onClearIconPress(e);
  };
  var roundness = theme.roundness,
    dark = theme.dark,
    isV3 = theme.isV3,
    fonts = theme.fonts;
  var placeholderTextColor = isV3 ? theme.colors.onSurface : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.placeholder;
  var textColor = isV3 ? theme.colors.onSurfaceVariant : theme.colors.text;
  var md2IconColor = dark ? textColor : (0, _color.default)(textColor).alpha(0.54).rgb().string();
  var iconColor = customIconColor || (isV3 ? theme.colors.onSurfaceVariant : md2IconColor);
  var rippleColor = customRippleColor || (0, _color.default)(textColor).alpha(0.32).rgb().string();
  var traileringRippleColor = customTraileringRippleColor || (0, _color.default)(textColor).alpha(0.32).rgb().string();
  var font = isV3 ? _objectSpread(_objectSpread({}, fonts.bodyLarge), {}, {
    lineHeight: _reactNative.Platform.select({
      ios: 0,
      default: fonts.bodyLarge.lineHeight
    })
  }) : theme.fonts.regular;
  var isBarMode = isV3 && mode === 'bar';
  var shouldRenderTraileringIcon = isBarMode && traileringIcon && !loading && (!value || right !== undefined);
  return React.createElement(_Surface.default, _extends({
    style: [{
      borderRadius: roundness
    }, !isV3 && styles.elevation, isV3 && {
      backgroundColor: theme.colors.elevation.level3,
      borderRadius: roundness * (isBarMode ? 7 : 0)
    }, styles.container, style],
    testID: `${testID}-container`
  }, theme.isV3 && {
    elevation: elevation
  }, {
    theme: theme
  }), React.createElement(_IconButton.default, {
    accessibilityRole: "button",
    borderless: true,
    rippleColor: rippleColor,
    onPress: onIconPress,
    iconColor: iconColor,
    icon: icon || function (_ref2) {
      var size = _ref2.size,
        color = _ref2.color;
      return React.createElement(_MaterialCommunityIcon.default, {
        name: "magnify",
        color: color,
        size: size,
        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'
      });
    },
    theme: theme,
    accessibilityLabel: searchAccessibilityLabel,
    testID: `${testID}-icon`
  }), React.createElement(_reactNative.TextInput, _extends({
    style: [styles.input, _objectSpread(_objectSpread({
      color: textColor
    }, font), _reactNative.Platform.select({
      web: {
        outline: 'none'
      }
    })), isV3 && (isBarMode ? styles.barModeInput : styles.viewModeInput), inputStyle],
    placeholder: placeholder || '',
    placeholderTextColor: placeholderTextColor,
    selectionColor: (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary,
    underlineColorAndroid: "transparent",
    returnKeyType: "search",
    keyboardAppearance: dark ? 'dark' : 'light',
    accessibilityRole: "search",
    ref: root,
    value: value,
    testID: testID
  }, rest)), loading ? React.createElement(_ActivityIndicator.default, {
    testID: "activity-indicator",
    style: isV3 ? styles.v3Loader : styles.loader
  }) : React.createElement(_reactNative.View, {
    pointerEvents: value ? 'auto' : 'none',
    testID: `${testID}-icon-wrapper`,
    style: [isV3 && !value && styles.v3ClearIcon, isV3 && right !== undefined && styles.v3ClearIconHidden]
  }, React.createElement(_IconButton.default, {
    borderless: true,
    accessibilityLabel: clearAccessibilityLabel,
    iconColor: value ? iconColor : 'rgba(255, 255, 255, 0)',
    rippleColor: rippleColor,
    onPress: handleClearPress,
    icon: clearIcon || function (_ref3) {
      var size = _ref3.size,
        color = _ref3.color;
      return React.createElement(_MaterialCommunityIcon.default, {
        name: isV3 ? 'close' : 'close-circle-outline',
        color: color,
        size: size,
        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'
      });
    },
    testID: `${testID}-clear-icon`,
    accessibilityRole: "button",
    theme: theme
  })), shouldRenderTraileringIcon ? React.createElement(_IconButton.default, {
    accessibilityRole: "button",
    borderless: true,
    onPress: onTraileringIconPress,
    iconColor: traileringIconColor || theme.colors.onSurfaceVariant,
    rippleColor: traileringRippleColor,
    icon: traileringIcon,
    accessibilityLabel: traileringIconAccessibilityLabel,
    testID: `${testID}-trailering-icon`
  }) : null, isBarMode && (right === null || right === void 0 ? void 0 : right({
    color: textColor,
    style: styles.rightStyle,
    testID: testID
  })), isV3 && !isBarMode && showDivider && React.createElement(_Divider.default, {
    bold: true,
    style: [styles.divider, {
      backgroundColor: theme.colors.outline
    }],
    testID: `${testID}-divider`
  }));
});
var styles = _reactNative.StyleSheet.create({
  container: {
    flexDirection: 'row',
    alignItems: 'center'
  },
  input: {
    flex: 1,
    fontSize: 18,
    paddingLeft: 8,
    alignSelf: 'stretch',
    textAlign: _reactNative.I18nManager.getConstants().isRTL ? 'right' : 'left',
    minWidth: 0
  },
  barModeInput: {
    paddingLeft: 0,
    minHeight: 56
  },
  viewModeInput: {
    paddingLeft: 0,
    minHeight: 72
  },
  elevation: {
    elevation: 4
  },
  loader: {
    margin: 10
  },
  v3Loader: {
    marginHorizontal: 16
  },
  rightStyle: {
    marginRight: 16
  },
  v3ClearIcon: {
    position: 'absolute',
    right: 0,
    marginLeft: 16
  },
  v3ClearIconHidden: {
    display: 'none'
  },
  divider: {
    position: 'absolute',
    bottom: 0,
    width: '100%'
  }
});
var _default = Searchbar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,