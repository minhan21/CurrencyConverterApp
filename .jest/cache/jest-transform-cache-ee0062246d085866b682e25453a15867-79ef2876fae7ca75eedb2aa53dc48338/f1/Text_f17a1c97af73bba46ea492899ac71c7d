b308ab734443bc13962fad2a998cf495
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["style", "variant", "theme"];
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.customText = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _AnimatedText = _interopRequireDefault(require("./AnimatedText"));
var _StyledText = _interopRequireDefault(require("./v2/StyledText"));
var _theming = require("../../core/theming");
var _forwardRef = require("../../utils/forwardRef");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var Text = function Text(_ref, ref) {
  var style = _ref.style,
    variant = _ref.variant,
    initialTheme = _ref.theme,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var root = React.useRef(null);
  var theme = (0, _theming.useInternalTheme)(initialTheme);
  var writingDirection = _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr';
  React.useImperativeHandle(ref, function () {
    return {
      setNativeProps: function setNativeProps(args) {
        var _root$current;
        return (_root$current = root.current) === null || _root$current === void 0 ? void 0 : _root$current.setNativeProps(args);
      }
    };
  });
  if (theme.isV3 && variant) {
    var font = theme.fonts[variant];
    var textStyle = [font, style];
    if (React.isValidElement(rest.children) && (rest.children.type === Component || rest.children.type === _AnimatedText.default || rest.children.type === _StyledText.default)) {
      var props = rest.children.props;
      if (props.variant) {
        font = theme.fonts[props.variant];
        textStyle = [style, font];
      }
      if (!props.variant) {
        textStyle = [style, props.style];
      }
    }
    if (typeof font !== 'object') {
      throw new Error(`Variant ${variant} was not provided properly. Valid variants are ${Object.keys(theme.fonts).join(', ')}.`);
    }
    return React.createElement(_reactNative.Text, _extends({
      ref: root,
      style: [styles.text, {
        writingDirection: writingDirection,
        color: theme.colors.onSurface
      }, textStyle]
    }, rest));
  } else {
    var _theme$fonts, _theme$colors;
    var _font = theme.isV3 ? theme.fonts.default : (_theme$fonts = theme.fonts) === null || _theme$fonts === void 0 ? void 0 : _theme$fonts.regular;
    var _textStyle = _objectSpread(_objectSpread({}, _font), {}, {
      color: theme.isV3 ? (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.onSurface : theme.colors.text
    });
    return React.createElement(_reactNative.Text, _extends({}, rest, {
      ref: root,
      style: [styles.text, _textStyle, {
        writingDirection: writingDirection
      }, style]
    }));
  }
};
var styles = _reactNative.StyleSheet.create({
  text: {
    textAlign: 'left'
  }
});
var Component = (0, _forwardRef.forwardRef)(Text);
var customText = function customText() {
  return Component;
};
exports.customText = customText;
var _default = Component;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9BbmltYXRlZFRleHQiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX1N0eWxlZFRleHQiLCJfdGhlbWluZyIsIl9mb3J3YXJkUmVmIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsIlRleHQiLCJfcmVmIiwicmVmIiwic3R5bGUiLCJ2YXJpYW50IiwiaW5pdGlhbFRoZW1lIiwidGhlbWUiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leGNsdWRlZCIsInJvb3QiLCJ1c2VSZWYiLCJ1c2VJbnRlcm5hbFRoZW1lIiwid3JpdGluZ0RpcmVjdGlvbiIsIkkxOG5NYW5hZ2VyIiwiZ2V0Q29uc3RhbnRzIiwiaXNSVEwiLCJ1c2VJbXBlcmF0aXZlSGFuZGxlIiwic2V0TmF0aXZlUHJvcHMiLCJhcmdzIiwiX3Jvb3QkY3VycmVudCIsImN1cnJlbnQiLCJpc1YzIiwiZm9udCIsImZvbnRzIiwidGV4dFN0eWxlIiwiaXNWYWxpZEVsZW1lbnQiLCJjaGlsZHJlbiIsInR5cGUiLCJDb21wb25lbnQiLCJwcm9wcyIsIkVycm9yIiwia2V5cyIsImpvaW4iLCJjcmVhdGVFbGVtZW50Iiwic3R5bGVzIiwidGV4dCIsImNvbG9yIiwiY29sb3JzIiwib25TdXJmYWNlIiwiX3RoZW1lJGZvbnRzIiwiX3RoZW1lJGNvbG9ycyIsInJlZ3VsYXIiLCJfb2JqZWN0U3ByZWFkIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInRleHRBbGlnbiIsImZvcndhcmRSZWYiLCJjdXN0b21UZXh0IiwiZXhwb3J0cyIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVHlwb2dyYXBoeS9UZXh0LnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBUUEsSUFBQUUsYUFBQSxHQUFBQyxzQkFBQSxDQUFBSCxPQUFBO0FBRUEsSUFBQUksV0FBQSxHQUFBRCxzQkFBQSxDQUFBSCxPQUFBO0FBQ0EsSUFBQUssUUFBQSxHQUFBTCxPQUFBO0FBRUEsSUFBQU0sV0FBQSxHQUFBTixPQUFBO0FBQW9ELFNBQUFHLHVCQUFBSSxHQUFBO0VBQUEsT0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQTtJQUFBRSxPQUFBLEVBQUFGO0VBQUE7QUFBQTtBQUFBLFNBQUFHLHlCQUFBQyxXQUFBO0VBQUEsV0FBQUMsT0FBQTtFQUFBLElBQUFDLGlCQUFBLE9BQUFELE9BQUE7RUFBQSxJQUFBRSxnQkFBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUE7SUFBQSxPQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBO0VBQUEsR0FBQUYsV0FBQTtBQUFBO0FBQUEsU0FBQVosd0JBQUFRLEdBQUEsRUFBQUksV0FBQTtFQUFBLEtBQUFBLFdBQUEsSUFBQUosR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUE7SUFBQSxPQUFBRCxHQUFBO0VB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