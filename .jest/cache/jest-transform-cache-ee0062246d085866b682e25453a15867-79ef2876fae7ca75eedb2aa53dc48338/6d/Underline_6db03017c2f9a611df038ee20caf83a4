c9c751475d222d6d15c0306440213bba
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Underline = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _theming = require("../../../core/theming");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var Underline = function Underline(_ref) {
  var parentState = _ref.parentState,
    error = _ref.error,
    colors = _ref.colors,
    activeColor = _ref.activeColor,
    underlineColorCustom = _ref.underlineColorCustom,
    hasActiveOutline = _ref.hasActiveOutline,
    style = _ref.style,
    themeOverrides = _ref.theme;
  var _ref2 = (0, _theming.useInternalTheme)(themeOverrides),
    isV3 = _ref2.isV3;
  var backgroundColor = parentState.focused ? activeColor : underlineColorCustom;
  if (error) backgroundColor = colors === null || colors === void 0 ? void 0 : colors.error;
  var activeScale = isV3 ? 2 : 1;
  return React.createElement(_reactNative.Animated.View, {
    testID: "text-input-underline",
    style: [styles.underline, isV3 && styles.md3Underline, {
      backgroundColor: backgroundColor,
      transform: [{
        scaleY: (isV3 ? hasActiveOutline : parentState.focused) ? activeScale : 0.5
      }]
    }, style]
  });
};
exports.Underline = Underline;
var styles = _reactNative.StyleSheet.create({
  underline: {
    position: 'absolute',
    left: 0,
    right: 0,
    bottom: 0,
    height: 2,
    zIndex: 1
  },
  md3Underline: {
    height: 1
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl90aGVtaW5nIiwiX2dldFJlcXVpcmVXaWxkY2FyZENhY2hlIiwibm9kZUludGVyb3AiLCJXZWFrTWFwIiwiY2FjaGVCYWJlbEludGVyb3AiLCJjYWNoZU5vZGVJbnRlcm9wIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIlVuZGVybGluZSIsIl9yZWYiLCJwYXJlbnRTdGF0ZSIsImVycm9yIiwiY29sb3JzIiwiYWN0aXZlQ29sb3IiLCJ1bmRlcmxpbmVDb2xvckN1c3RvbSIsImhhc0FjdGl2ZU91dGxpbmUiLCJzdHlsZSIsInRoZW1lT3ZlcnJpZGVzIiwidGhlbWUiLCJfcmVmMiIsInVzZUludGVybmFsVGhlbWUiLCJpc1YzIiwiYmFja2dyb3VuZENvbG9yIiwiZm9jdXNlZCIsImFjdGl2ZVNjYWxlIiwiY3JlYXRlRWxlbWVudCIsIkFuaW1hdGVkIiwiVmlldyIsInRlc3RJRCIsInN0eWxlcyIsInVuZGVybGluZSIsIm1kM1VuZGVybGluZSIsInRyYW5zZm9ybSIsInNjYWxlWSIsImV4cG9ydHMiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwicG9zaXRpb24iLCJsZWZ0IiwicmlnaHQiLCJib3R0b20iLCJoZWlnaHQiLCJ6SW5kZXgiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9UZXh0SW5wdXQvQWRkb25zL1VuZGVybGluZS50c3giXSwic291cmNlc0NvbnRlbnQiOltudWxsXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLElBQUFB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