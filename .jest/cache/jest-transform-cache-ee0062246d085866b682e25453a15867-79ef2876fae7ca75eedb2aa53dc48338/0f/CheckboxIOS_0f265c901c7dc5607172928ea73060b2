f19c2a557ab2cef29f247bcc8780feb4
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["status", "disabled", "onPress", "theme", "testID"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CheckboxIOS = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _utils = require("./utils");
var _theming = require("../../core/theming");
var _MaterialCommunityIcon = _interopRequireDefault(require("../MaterialCommunityIcon"));
var _TouchableRipple = _interopRequireDefault(require("../TouchableRipple/TouchableRipple"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var CheckboxIOS = function CheckboxIOS(_ref) {
  var status = _ref.status,
    disabled = _ref.disabled,
    onPress = _ref.onPress,
    themeOverrides = _ref.theme,
    testID = _ref.testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var checked = status === 'checked';
  var indeterminate = status === 'indeterminate';
  var _ref2 = (0, _utils.getSelectionControlIOSColor)({
      theme: theme,
      disabled: disabled,
      customColor: rest.color
    }),
    checkedColor = _ref2.checkedColor,
    rippleColor = _ref2.rippleColor;
  var icon = indeterminate ? 'minus' : 'check';
  var opacity = indeterminate || checked ? 1 : 0;
  return React.createElement(_TouchableRipple.default, _extends({}, rest, {
    borderless: true,
    rippleColor: rippleColor,
    onPress: onPress,
    disabled: disabled,
    accessibilityRole: "checkbox",
    accessibilityState: {
      disabled: disabled,
      checked: checked
    },
    accessibilityLiveRegion: "polite",
    style: styles.container,
    testID: testID,
    theme: theme
  }), React.createElement(_reactNative.View, {
    style: {
      opacity: opacity
    }
  }, React.createElement(_MaterialCommunityIcon.default, {
    allowFontScaling: false,
    name: icon,
    size: 24,
    color: checkedColor,
    direction: "ltr"
  })));
};
exports.CheckboxIOS = CheckboxIOS;
CheckboxIOS.displayName = 'Checkbox.IOS';
var styles = _reactNative.StyleSheet.create({
  container: {
    borderRadius: 18,
    padding: 6
  }
});
var _default = CheckboxIOS;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl91dGlscyIsIl90aGVtaW5nIiwiX01hdGVyaWFsQ29tbXVuaXR5SWNvbiIsIl9pbnRlcm9wUmVxdWlyZURlZmF1bHQiLCJfVG91Y2hhYmxlUmlwcGxlIiwib2JqIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJfZ2V0UmVxdWlyZVdpbGRjYXJkQ2FjaGUiLCJub2RlSW50ZXJvcCIsIldlYWtNYXAiLCJjYWNoZUJhYmVsSW50ZXJvcCIsImNhY2hlTm9kZUludGVyb3AiLCJjYWNoZSIsImhhcyIsImdldCIsIm5ld09iaiIsImhhc1Byb3BlcnR5RGVzY3JpcHRvciIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwia2V5IiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwiZGVzYyIsInNldCIsIl9leHRlbmRzIiwiYXNzaWduIiwiYmluZCIsInRhcmdldCIsImkiLCJhcmd1bWVudHMiLCJsZW5ndGgiLCJzb3VyY2UiLCJhcHBseSIsIkNoZWNrYm94SU9TIiwiX3JlZiIsInN0YXR1cyIsImRpc2FibGVkIiwib25QcmVzcyIsInRoZW1lT3ZlcnJpZGVzIiwidGhlbWUiLCJ0ZXN0SUQiLCJyZXN0IiwiX29iamVjdFdpdGhvdXRQcm9wZXJ0aWVzMiIsIl9leGNsdWRlZCIsInVzZUludGVybmFsVGhlbWUiLCJjaGVja2VkIiwiaW5kZXRlcm1pbmF0ZSIsIl9yZWYyIiwiZ2V0U2VsZWN0aW9uQ29udHJvbElPU0NvbG9yIiwiY3VzdG9tQ29sb3IiLCJjb2xvciIsImNoZWNrZWRDb2xvciIsInJpcHBsZUNvbG9yIiwiaWNvbiIsIm9wYWNpdHkiLCJjcmVhdGVFbGVtZW50IiwiYm9yZGVybGVzcyIsImFjY2Vzc2liaWxpdHlSb2xlIiwiYWNjZXNzaWJpbGl0eVN0YXRlIiwiYWNjZXNzaWJpbGl0eUxpdmVSZWdpb24iLCJzdHlsZSIsInN0eWxlcyIsImNvbnRhaW5lciIsIlZpZXciLCJhbGxvd0ZvbnRTY2FsaW5nIiwibmFtZSIsInNpemUiLCJkaXJlY3Rpb24iLCJleHBvcnRzIiwiZGlzcGxheU5hbWUiLCJTdHlsZVNoZWV0IiwiY3JlYXRlIiwiYm9yZGVyUmFkaXVzIiwicGFkZGluZyIsIl9kZWZhdWx0Il0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvQ2hlY2tib3gvQ2hlY2tib3hJT1MudHN4Il0sInNvdXJjZXNDb250ZW50IjpbbnVsbF0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQSxJQUFBQSxLQUFBLEdBQUFDLHVCQUFBLENBQUFDLE9BQUE7QUFDQSxJQUFBQyxZQUFBLEdBQUFELE9BQUE7QUFFQSxJQUFBRSxNQUFBLEdBQUFGLE9BQUE7QUFDQSxJQUFBRyxRQUFBLEdBQUFILE9BQUE7QUFFQSxJQUFBSSxzQkFBQSxHQUFBQyxzQkFBQSxDQUFBTCxPQUFBO0FBQ0EsSUFBQU0sZ0JBQUEsR0FBQUQsc0JBQUEsQ0FBQUwsT0FBQTtBQUFpRSxTQUFBSyx1QkFBQUUsR0FBQTtFQUFBLE9BQUFBLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBLEdBQUFELEdBQUE7SUFBQUUsT0FBQSxFQUFBRjtFQUFBO0FBQUE7QUFBQSxTQUFBRyx5QkFBQUMsV0FBQTtFQUFBLFdBQUFDLE9BQUE7RUFBQSxJQUFBQyxpQkFBQSxPQUFBRCxPQUFBO0VBQUEsSUFBQUUsZ0JBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBO0lBQUEsT0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQTtFQUFBLEdBQUFGLFdBQUE7QUFBQTtBQUFBLFNBQUFaLHdCQUFBUSxHQUFBLEVBQUFJLFdBQUE7RUFBQSxLQUFBQSxXQUFBLElBQUFKLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBO0lBQUEsT0FBQUQsR0FBQTtFQUFBO0VBQUEsSUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQTtJQUFBO01BQUFFLE9BQUEsRUFBQUY7SUFBQTtFQUFBO0VBQUEsSUFBQVEsS0FBQSxHQUFBTCx3QkFBQSxDQUFBQyxXQUFBO0VBQUEsSUFBQUksS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQVQsR0FBQTtJQUFBLE9BQUFRLEtBQUEsQ0FBQUUsR0FBQSxDQUFBVixHQUFBO0VBQUE7RUFBQSxJQUFBVyxNQUFBO0VBQUEsSUFBQUMscUJBQUEsR0FBQUMsTUFBQSxDQUFBQyxjQUFBLElBQUFELE1BQUEsQ0FBQUUsd0JBQUE7RUFBQSxTQUFBQyxHQUFBLElBQUFoQixHQUFBO0lBQUEsSUFBQWdCLEdBQUEsa0JBQUFILE1BQUEsQ0FBQUksU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQW5CLEdBQUEsRUFBQWdCLEdBQUE7TUFBQSxJQUFBSSxJQUFBLEdBQUFSLHFCQUFBLEdBQUFDLE1BQUEsQ0FBQUUsd0JBQUEsQ0FBQWYsR0FBQSxFQUFBZ0IsR0FBQTtNQUFBLElBQUFJLElBQUEsS0FBQUEsSUFBQSxDQUFBVixHQUFBLElBQUFVLElBQUEsQ0FBQUMsR0FBQTtRQUFBUixNQUFBLENBQUFDLGNBQUEsQ0FBQUgsTUFBQSxFQUFBSyxHQUFBLEVBQUFJLElBQUE7TUFBQTtRQUFBVCxNQUFBLENBQUFLLEdBQUEsSUFBQWhCLEdBQUEsQ0FBQWdCLEdBQUE7TUFBQTtJQUFBO0VBQUE7RUFBQUwsTUFBQSxDQUFBVCxPQUFBLEdBQUFGLEdBQUE7RUFBQSxJQUFBUSxLQUFBO0lBQUFBLEtBQUEsQ0FBQWEsR0FBQSxDQUFBckIsR0FBQSxFQUFBVyxNQUFBO0VBQUE7RUFBQSxPQUFBQSxNQUFBO0FBQUE7QUFBQSxTQUFBVyxTQUFBO0VBQUFBLFFBQUEsR0FBQVQsTUFBQSxDQUFBVSxNQUFBLEdBQUFWLE1BQUEsQ0FBQVUsTUFBQSxDQUFBQyxJQUFBLGVBQUFDLE1BQUE7SUFBQSxTQUFBQyxDQUFBLE1BQUFBLENBQUEsR0FBQUMsU0FBQSxDQUFBQyxNQUFBLEVBQUFGLENBQUE7TUFBQSxJQUFBRyxNQUFBLEdBQUFGLFNBQUEsQ0FBQUQsQ0FBQTtNQUFBLFNBQUFWLEdBQUEsSUFBQWEsTUFBQTtRQUFBLElBQUFoQixNQUFBLENBQUFJLFNBQUEsQ0FBQUMsY0FBQSxDQUFBQyxJQUFBLENBQUFVLE1BQUEsRUFBQWIsR0FBQTtVQUFBUyxNQUFBLENBQUFULEdBQUEsSUFBQWEsTUFBQSxDQUFBYixHQUFBO1FBQUE7TUFBQTtJQUFBO0lBQUEsT0FBQVMsTUFBQTtFQUFBO0VBQUEsT0FBQUgsUUFBQSxDQUFBUSxLQUFBLE9BQUFILFNBQUE7QUFBQTtBQW9DakUsSUFBTUksV0FBVyxHQUFHLFNBQWRBLFdBQVdBLENBQUdDLElBQUEsRUFPUDtFQUFBLElBTlhDLE1BQU0sR0FNQUQsSUFBQSxDQU5OQyxNQUFNO0lBQ05DLFFBQVEsR0FLRkYsSUFBQSxDQUxORSxRQUFRO0lBQ1JDLE9BQU8sR0FJREgsSUFBQSxDQUpORyxPQUFPO0lBQ0FDLGNBQWMsR0FHZkosSUFBQSxDQUhOSyxLQUFLO0lBQ0xDLE1BQU0sR0FFQU4sSUFBQSxDQUZOTSxNQUFNO0lBQ0hDLElBQUEsT0FBQUMseUJBQUEsQ0FBQXRDLE9BQUEsRUFDRzhCLElBQUEsRUFBQVMsU0FBQTtFQUNOLElBQU1KLEtBQUssR0FBRyxJQUFBekMsUUFBQSxDQUFBOEMsZ0JBQWdCLEVBQUNOLGNBQWMsQ0FBQztFQUM5QyxJQUFNTyxPQUFPLEdBQUdWLE1BQU0sS0FBSyxTQUFTO0VBQ3BDLElBQU1XLGFBQWEsR0FBR1gsTUFBTSxLQUFLLGVBQWU7RUFFaEQsSUFBQVksS0FBQSxHQUFzQyxJQUFBbEQsTUFBQSxDQUFBbUQsMkJBQTJCLEVBQUM7TUFDaEVULEtBQUssRUFBTEEsS0FBSztNQUNMSCxRQUFRLEVBQVJBLFFBQVE7TUFDUmEsV0FBVyxFQUFFUixJQUFJLENBQUNTO0lBQ3BCLENBQUMsQ0FBQztJQUpNQyxZQUFZLEdBQUFKLEtBQUEsQ0FBWkksWUFBWTtJQUFFQyxXQUFBLEdBQUFMLEtBQUEsQ0FBQUssV0FBQTtFQU10QixJQUFNQyxJQUFJLEdBQUdQLGFBQWEsR0FBRyxPQUFPLEdBQUcsT0FBTztFQUM5QyxJQUFNUSxPQUFPLEdBQUdSLGFBQWEsSUFBSUQsT0FBTyxHQUFHLENBQUMsR0FBRyxDQUFDO0VBRWhELE9BQ0VwRCxLQUFBLENBQUE4RCxhQUFBLENBQUN0RCxnQkFBQSxDQUFBRyxPQUFlLEVBQUFvQixRQUFBLEtBQ1ZpQixJQUFJO0lBQ1JlLFVBQVU7SUFDVkosV0FBVyxFQUFFQSxXQUFZO0lBQ3pCZixPQUFPLEVBQUVBLE9BQVE7SUFDakJELFFBQVEsRUFBRUEsUUFBUztJQUNuQnFCLGlCQUFpQixFQUFDLFVBQVU7SUFDNUJDLGtCQUFrQixFQUFFO01BQUV0QixRQUFRLEVBQVJBLFFBQVE7TUFBRVMsT0FBQSxFQUFBQTtJQUFRLENBQUU7SUFDMUNjLHVCQUF1QixFQUFDLFFBQVE7SUFDaENDLEtBQUssRUFBRUMsTUFBTSxDQUFDQyxTQUFVO0lBQ3hCdEIsTUFBTSxFQUFFQSxNQUFPO0lBQ2ZELEtBQUssRUFBRUE7RUFBTSxJQUViOUMsS0FBQSxDQUFBOEQsYUFBQSxDQUFDM0QsWUFBQSxDQUFBbUUsSUFBSTtJQUFDSCxLQUFLLEVBQUU7TUFBRU4sT0FBQSxFQUFBQTtJQUFRO0VBQUUsR0FDdkI3RCxLQUFBLENBQUE4RCxhQUFBLENBQUN4RCxzQkFBQSxDQUFBSyxPQUFxQjtJQUNwQjRELGdCQUFnQixFQUFFLEtBQU07SUFDeEJDLElBQUksRUFBRVosSUFBSztJQUNYYSxJQUFJLEVBQUUsRUFBRztJQUNUaEIsS0FBSyxFQUFFQyxZQUFhO0lBQ3BCZ0IsU0FBUyxFQUFDO0VBQUssQ0FDaEIsQ0FDRyxDQUNTLENBQUM7QUFFdEIsQ0FBQztBQUFDQyxPQUFBLENBQUFuQyxXQUFBLEdBQUFBLFdBQUE7QUFFRkEsV0FBVyxDQUFDb0MsV0FBVyxHQUFHLGNBQWM7QUFFeEMsSUFBTVIsTUFBTSxHQUFHakUsWUFBQSxDQUFBMEUsVUFBVSxDQUFDQyxNQUFNLENBQUM7RUFDL0JULFNBQVMsRUFBRTtJQUNUVSxZQUFZLEVBQUUsRUFBRTtJQUNoQkMsT0FBTyxFQUFFO0VBQ1g7QUFDRixDQUFDLENBQUM7QUFBQyxJQUFBQyxRQUFBLEdBRVl6QyxXQUFXO0FBRTFCbUMsT0FBQSxDQUFBaEUsT0FBQSxHQUFBc0UsUUFBQSIsImlnbm9yZUxpc3QiOltdfQ==