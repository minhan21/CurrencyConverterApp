7321fb7624563774393fd2fe4a90e92b
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Outline = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
var Outline = function Outline(_ref) {
  var isV3 = _ref.isV3,
    label = _ref.label,
    activeColor = _ref.activeColor,
    backgroundColor = _ref.backgroundColor,
    hasActiveOutline = _ref.hasActiveOutline,
    focused = _ref.focused,
    outlineColor = _ref.outlineColor,
    roundness = _ref.roundness,
    style = _ref.style;
  return React.createElement(_reactNative.View, {
    testID: "text-input-outline",
    pointerEvents: "none",
    style: [styles.outline, !label && styles.noLabelOutline, {
      backgroundColor: backgroundColor,
      borderRadius: roundness,
      borderWidth: (isV3 ? hasActiveOutline : focused) ? 2 : 1,
      borderColor: hasActiveOutline ? activeColor : outlineColor
    }, style]
  });
};
exports.Outline = Outline;
var styles = _reactNative.StyleSheet.create({
  outline: {
    position: 'absolute',
    left: 0,
    right: 0,
    top: 6,
    bottom: 0
  },
  noLabelOutline: {
    top: 0
  }
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJPdXRsaW5lIiwiX3JlZiIsImlzVjMiLCJsYWJlbCIsImFjdGl2ZUNvbG9yIiwiYmFja2dyb3VuZENvbG9yIiwiaGFzQWN0aXZlT3V0bGluZSIsImZvY3VzZWQiLCJvdXRsaW5lQ29sb3IiLCJyb3VuZG5lc3MiLCJzdHlsZSIsImNyZWF0ZUVsZW1lbnQiLCJWaWV3IiwidGVzdElEIiwicG9pbnRlckV2ZW50cyIsInN0eWxlcyIsIm91dGxpbmUiLCJub0xhYmVsT3V0bGluZSIsImJvcmRlclJhZGl1cyIsImJvcmRlcldpZHRoIiwiYm9yZGVyQ29sb3IiLCJleHBvcnRzIiwiU3R5bGVTaGVldCIsImNyZWF0ZSIsInBvc2l0aW9uIiwibGVmdCIsInJpZ2h0IiwidG9wIiwiYm90dG9tIl0sInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vc3JjL2NvbXBvbmVudHMvVGV4dElucHV0L0FkZG9ucy9PdXRsaW5lLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBTXNCLFNBQUFFLHlCQUFBQyxXQUFBO0VBQUEsV0FBQUMsT0FBQTtFQUFBLElBQUFDLGlCQUFBLE9BQUFELE9BQUE7RUFBQSxJQUFBRSxnQkFBQSxPQUFBRixPQUFBO0VBQUEsUUFBQUYsd0JBQUEsWUFBQUEseUJBQUFDLFdBQUE7SUFBQSxPQUFBQSxXQUFBLEdBQUFHLGdCQUFBLEdBQUFELGlCQUFBO0VBQUEsR0FBQUYsV0FBQTtBQUFBO0FBQUEsU0FBQUosd0JBQUFRLEdBQUEsRUFBQUosV0FBQTtFQUFBLEtBQUFBLFdBQUEsSUFBQUksR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUE7SUFBQSxPQUFBRCxHQUFBO0VBQUE7RUFBQSxJQUFBQSxHQUFBLG9CQUFBQSxHQUFBLHdCQUFBQSxHQUFBO0lBQUE7TUFBQUUsT0FBQSxFQUFBRjtJQUFBO0VBQUE7RUFBQSxJQUFBRyxLQUFBLEdBQUFSLHdCQUFBLENBQUFDLFdBQUE7RUFBQSxJQUFBTyxLQUFBLElBQUFBLEtBQUEsQ0FBQUMsR0FBQSxDQUFBSixHQUFBO0lBQUEsT0FBQUcsS0FBQSxDQUFBRSxHQUFBLENBQUFMLEdBQUE7RUFBQTtFQUFBLElBQUFNLE1BQUE7RUFBQSxJQUFBQyxxQkFBQSxHQUFBQyxNQUFBLENBQUFDLGNBQUEsSUFBQUQsTUFBQSxDQUFBRSx3QkFBQTtFQUFBLFNBQUFDLEdBQUEsSUFBQVgsR0FBQTtJQUFBLElBQUFXLEdBQUEsa0JBQUFILE1BQUEsQ0FBQUksU0FBQSxDQUFBQyxjQUFBLENBQUFDLElBQUEsQ0FBQWQsR0FBQSxFQUFBVyxHQUFBO01BQUEsSUFBQUksSUFBQSxHQUFBUixxQkFBQSxHQUFBQyxNQUFBLENBQUFFLHdCQUFBLENBQUFWLEdBQUEsRUFBQVcsR0FBQTtNQUFBLElBQUFJLElBQUEsS0FBQUEsSUFBQSxDQUFBVixHQUFBLElBQUFVLElBQUEsQ0FBQUMsR0FBQTtRQUFBUixNQUFBLENBQUFDLGNBQUEsQ0FBQUgsTUFBQSxFQUFBSyxHQUFBLEVBQUFJLElBQUE7TUFBQTtRQUFBVCxNQUFBLENBQUFLLEdBQUEsSUFBQVgsR0FBQSxDQUFBVyxHQUFBO01BQUE7SUFBQTtFQUFBO0VBQUFMLE1BQUEsQ0FBQUosT0FBQSxHQUFBRixHQUFBO0VBQUEsSUFBQUcsS0FBQTtJQUFBQSxLQUFBLENBQUFhLEdBQUEsQ0FBQWhCLEdBQUEsRUFBQU0sTUFBQTtFQUFBO0VBQUEsT0FBQUEsTUFBQTtBQUFBO0FBZ0JmLElBQU1XLE9BQU8sR0FBRyxTQUFWQSxPQUFPQSxDQUFHQyxJQUFBO0VBQUEsSUFDckJDLElBQUksR0FTU0QsSUFBQSxDQVRiQyxJQUFJO0lBQ0pDLEtBQUssR0FRUUYsSUFBQSxDQVJiRSxLQUFLO0lBQ0xDLFdBQVcsR0FPRUgsSUFBQSxDQVBiRyxXQUFXO0lBQ1hDLGVBQWUsR0FNRkosSUFBQSxDQU5iSSxlQUFlO0lBQ2ZDLGdCQUFnQixHQUtITCxJQUFBLENBTGJLLGdCQUFnQjtJQUNoQkMsT0FBTyxHQUlNTixJQUFBLENBSmJNLE9BQU87SUFDUEMsWUFBWSxHQUdDUCxJQUFBLENBSGJPLFlBQVk7SUFDWkMsU0FBUyxHQUVJUixJQUFBLENBRmJRLFNBQVM7SUFDVEMsS0FBQSxHQUNhVCxJQUFBLENBRGJTLEtBQUE7RUFDYSxPQUNicEMsS0FBQSxDQUFBcUMsYUFBQSxDQUFDbEMsWUFBQSxDQUFBbUMsSUFBSTtJQUNIQyxNQUFNLEVBQUMsb0JBQW9CO0lBQzNCQyxhQUFhLEVBQUMsTUFBTTtJQUNwQkosS0FBSyxFQUFFLENBQ0xLLE1BQU0sQ0FBQ0MsT0FBTyxFQUNkLENBQUNiLEtBQUssSUFBSVksTUFBTSxDQUFDRSxjQUFjLEVBRS9CO01BQ0VaLGVBQWUsRUFBZkEsZUFBZTtNQUNmYSxZQUFZLEVBQUVULFNBQVM7TUFDdkJVLFdBQVcsRUFBRSxDQUFDakIsSUFBSSxHQUFHSSxnQkFBZ0IsR0FBR0MsT0FBTyxJQUFJLENBQUMsR0FBRyxDQUFDO01BQ3hEYSxXQUFXLEVBQUVkLGdCQUFnQixHQUFHRixXQUFXLEdBQUdJO0lBQ2hELENBQUMsRUFDREUsS0FBSztFQUNMLENBQ0gsQ0FBQztBQUFBLENBQ0g7QUFBQ1csT0FBQSxDQUFBckIsT0FBQSxHQUFBQSxPQUFBO0FBRUYsSUFBTWUsTUFBTSxHQUFHdEMsWUFBQSxDQUFBNkMsVUFBVSxDQUFDQyxNQUFNLENBQUM7RUFDL0JQLE9BQU8sRUFBRTtJQUNQUSxRQUFRLEVBQUUsVUFBVTtJQUNwQkMsSUFBSSxFQUFFLENBQUM7SUFDUEMsS0FBSyxFQUFFLENBQUM7SUFDUkMsR0FBRyxFQUFFLENBQUM7SUFDTkMsTUFBTSxFQUFFO0VBQ1YsQ0FBQztFQUNEWCxjQUFjLEVBQUU7SUFDZFUsR0FBRyxFQUFFO0VBQ1A7QUFDRixDQUFDLENBQUMiLCJpZ25vcmVMaXN0IjpbXX0=