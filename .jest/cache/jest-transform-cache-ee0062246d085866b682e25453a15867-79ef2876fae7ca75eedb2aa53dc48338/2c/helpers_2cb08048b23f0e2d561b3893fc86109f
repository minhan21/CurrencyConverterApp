9e923ec6426d9ffd50fa0c0e9bd84619
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _defineProperty2 = _interopRequireDefault2(require("@babel/runtime/helpers/defineProperty"));
function ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }
function _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { (0, _defineProperty2.default)(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getChipColors = void 0;
var _color = _interopRequireDefault(require("color"));
var _colors = require("../../styles/themes/v2/colors");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var getBorderColor = function getBorderColor(_ref) {
  var theme = _ref.theme,
    isOutlined = _ref.isOutlined,
    disabled = _ref.disabled,
    selectedColor = _ref.selectedColor,
    backgroundColor = _ref.backgroundColor;
  var isSelectedColor = selectedColor !== undefined;
  if (theme.isV3) {
    if (disabled) {
      return (0, _color.default)(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();
    }
    if (isSelectedColor) {
      return (0, _color.default)(selectedColor).alpha(0.29).rgb().string();
    }
    return theme.colors.outline;
  }
  if (isOutlined) {
    if (isSelectedColor) {
      return (0, _color.default)(selectedColor).alpha(0.29).rgb().string();
    }
    if (theme.dark) {
      return (0, _color.default)(_colors.white).alpha(0.29).rgb().string();
    }
    return (0, _color.default)(_colors.black).alpha(0.29).rgb().string();
  }
  return backgroundColor;
};
var getTextColor = function getTextColor(_ref2) {
  var theme = _ref2.theme,
    isOutlined = _ref2.isOutlined,
    disabled = _ref2.disabled,
    selectedColor = _ref2.selectedColor;
  var isSelectedColor = selectedColor !== undefined;
  if (theme.isV3) {
    if (disabled) {
      return theme.colors.onSurfaceDisabled;
    }
    if (isSelectedColor) {
      return selectedColor;
    }
    if (isOutlined) {
      return theme.colors.onSurfaceVariant;
    }
    return theme.colors.onSecondaryContainer;
  }
  if (disabled) {
    return theme.colors.disabled;
  }
  if (isSelectedColor) {
    return (0, _color.default)(selectedColor).alpha(0.87).rgb().string();
  }
  return (0, _color.default)(theme.colors.text).alpha(0.87).rgb().string();
};
var getDefaultBackgroundColor = function getDefaultBackgroundColor(_ref3) {
  var theme = _ref3.theme,
    isOutlined = _ref3.isOutlined;
  if (theme.isV3) {
    if (isOutlined) {
      return theme.colors.surface;
    }
    return theme.colors.secondaryContainer;
  }
  if (isOutlined) {
    var _theme$colors;
    return (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : _theme$colors.surface;
  }
  if (theme.dark) {
    return '#383838';
  }
  return '#ebebeb';
};
var getBackgroundColor = function getBackgroundColor(_ref4) {
  var theme = _ref4.theme,
    isOutlined = _ref4.isOutlined,
    disabled = _ref4.disabled,
    customBackgroundColor = _ref4.customBackgroundColor;
  if (typeof customBackgroundColor === 'string') {
    return customBackgroundColor;
  }
  if (theme.isV3) {
    if (disabled) {
      if (isOutlined) {
        return 'transparent';
      }
      return (0, _color.default)(theme.colors.onSurfaceVariant).alpha(0.12).rgb().string();
    }
  }
  return getDefaultBackgroundColor({
    theme: theme,
    isOutlined: isOutlined
  });
};
var getSelectedBackgroundColor = function getSelectedBackgroundColor(_ref5) {
  var theme = _ref5.theme,
    isOutlined = _ref5.isOutlined,
    disabled = _ref5.disabled,
    customBackgroundColor = _ref5.customBackgroundColor,
    showSelectedOverlay = _ref5.showSelectedOverlay;
  var backgroundColor = getBackgroundColor({
    theme: theme,
    disabled: disabled,
    isOutlined: isOutlined,
    customBackgroundColor: customBackgroundColor
  });
  if (theme.isV3) {
    if (isOutlined) {
      if (showSelectedOverlay) {
        return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSurfaceVariant), 0.12).rgb().string();
      }
      return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSurfaceVariant), 0).rgb().string();
    }
    if (showSelectedOverlay) {
      return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSecondaryContainer), 0.12).rgb().string();
    }
    return (0, _color.default)(backgroundColor).mix((0, _color.default)(theme.colors.onSecondaryContainer), 0).rgb().string();
  }
  if (theme.dark) {
    if (isOutlined) {
      return (0, _color.default)(backgroundColor).lighten(0.2).rgb().string();
    }
    return (0, _color.default)(backgroundColor).lighten(0.4).rgb().string();
  }
  if (isOutlined) {
    return (0, _color.default)(backgroundColor).darken(0.08).rgb().string();
  }
  return (0, _color.default)(backgroundColor).darken(0.2).rgb().string();
};
var getIconColor = function getIconColor(_ref6) {
  var theme = _ref6.theme,
    isOutlined = _ref6.isOutlined,
    disabled = _ref6.disabled,
    selectedColor = _ref6.selectedColor;
  var isSelectedColor = selectedColor !== undefined;
  if (theme.isV3) {
    if (disabled) {
      return theme.colors.onSurfaceDisabled;
    }
    if (isSelectedColor) {
      return selectedColor;
    }
    if (isOutlined) {
      return theme.colors.onSurfaceVariant;
    }
    return theme.colors.onSecondaryContainer;
  }
  if (disabled) {
    return theme.colors.disabled;
  }
  if (isSelectedColor) {
    return (0, _color.default)(selectedColor).alpha(0.54).rgb().string();
  }
  return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
};
var getRippleColor = function getRippleColor(_ref7) {
  var theme = _ref7.theme,
    isOutlined = _ref7.isOutlined,
    disabled = _ref7.disabled,
    selectedColor = _ref7.selectedColor,
    selectedBackgroundColor = _ref7.selectedBackgroundColor,
    customRippleColor = _ref7.customRippleColor;
  if (customRippleColor) {
    return customRippleColor;
  }
  var isSelectedColor = selectedColor !== undefined;
  var textColor = getTextColor({
    theme: theme,
    disabled: disabled,
    selectedColor: selectedColor,
    isOutlined: isOutlined
  });
  if (theme.isV3) {
    if (isSelectedColor) {
      return (0, _color.default)(selectedColor).alpha(0.12).rgb().string();
    }
    return (0, _color.default)(textColor).alpha(0.12).rgb().string();
  }
  if (isSelectedColor) {
    return (0, _color.default)(selectedColor).fade(0.5).rgb().string();
  }
  return selectedBackgroundColor;
};
var getChipColors = function getChipColors(_ref8) {
  var isOutlined = _ref8.isOutlined,
    theme = _ref8.theme,
    selectedColor = _ref8.selectedColor,
    showSelectedOverlay = _ref8.showSelectedOverlay,
    customBackgroundColor = _ref8.customBackgroundColor,
    disabled = _ref8.disabled,
    customRippleColor = _ref8.customRippleColor;
  var baseChipColorProps = {
    theme: theme,
    isOutlined: isOutlined,
    disabled: disabled
  };
  var backgroundColor = getBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {
    customBackgroundColor: customBackgroundColor
  }));
  var selectedBackgroundColor = getSelectedBackgroundColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {
    customBackgroundColor: customBackgroundColor,
    showSelectedOverlay: showSelectedOverlay
  }));
  return {
    borderColor: getBorderColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {
      selectedColor: selectedColor,
      backgroundColor: backgroundColor
    })),
    textColor: getTextColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {
      selectedColor: selectedColor
    })),
    iconColor: getIconColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {
      selectedColor: selectedColor
    })),
    rippleColor: getRippleColor(_objectSpread(_objectSpread({}, baseChipColorProps), {}, {
      selectedColor: selectedColor,
      selectedBackgroundColor: selectedBackgroundColor,
      customRippleColor: customRippleColor
    })),
    backgroundColor: backgroundColor,
    selectedBackgroundColor: selectedBackgroundColor
  };
};
exports.getChipColors = getChipColors;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,