{"version":3,"names":["_Batchinator","_interopRequireDefault","require","_clamp","_infoLog","_CellRenderMask","_ChildListCollection","_FillRateHelper","_ListMetricsAggregator","_StateSafePureComponent","_ViewabilityHelper","_VirtualizedListCellRenderer","_VirtualizedListContext","_VirtualizedListProps","_VirtualizeUtils","_invariant","_nullthrows","React","_interopRequireWildcard","_reactNative","_jsxRuntime","_excluded","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","hasOwnProperty","call","i","set","ownKeys","keys","getOwnPropertySymbols","o","filter","enumerable","push","apply","_objectSpread","arguments","length","forEach","_defineProperty2","getOwnPropertyDescriptors","defineProperties","_callSuper","_getPrototypeOf2","_possibleConstructorReturn2","_isNativeReflectConstruct","Reflect","construct","constructor","Boolean","prototype","valueOf","ON_EDGE_REACHED_EPSILON","_usedIndexForKey","_keylessItemComponentName","getScrollingThreshold","threshold","visibleLength","VirtualizedList","_StateSafePureCompone","props","_this$props$updateCel","_this$props$maintainV","_this$props$maintainV2","_this","_classCallCheck2","_getScrollMetrics","_scrollMetrics","_getOutermostParentListRef","_isNestedWithSameOrientation","context","getOutermostParentListRef","_registerAsNestedChild","childList","_nestedChildLists","add","ref","cellKey","_hasInteracted","recordInteraction","_unregisterAsNestedChild","remove","_onUpdateSeparators","newProps","key","_cellRefs","updateSeparatorProps","_getSpacerKey","isVertical","_listMetrics","ListMetricsAggregator","_footerLength","_hasTriggeredInitialScrollToIndex","_hasMore","_hasWarned","_headerLength","_hiPriInProgress","_indicesToKeys","Map","_lastFocusedCellKey","ChildListCollection","_offsetFromParentVirtualizedList","_pendingViewabilityUpdate","_prevParentOffset","dOffset","dt","offset","timestamp","velocity","zoomScale","_scrollRef","_sentStartForContentLength","_sentEndForContentLength","_viewabilityTuples","_captureScrollRef","_defaultRenderScrollComponent","onRefresh","onContentSizeChange","otherProps","_objectWithoutProperties2","jsx","View","_props$refreshing","invariant","refreshing","JSON","stringify","ScrollView","refreshControl","RefreshControl","progressViewOffset","_onCellLayout","cellIndex","layoutHasChanged","notifyCellLayout","layout","nativeEvent","orientation","_orientation","_scheduleCellsToRenderUpdate","_triggerRemeasureForChildListsInCell","_computeBlankness","_updateViewableItems","state","cellsAroundViewport","_onCellFocusCapture","_updateCellsToRender","_onCellUnmount","notifyCellUnmounted","_onLayout","measureLayoutRelativeToContainingList","_selectLength","onLayout","_maybeCallOnEdgeReached","_onLayoutEmpty","_onLayoutFooter","_getFooterCellKey","_onLayoutHeader","_onContentSizeChange","width","height","notifyListContentLayout","_maybeScrollToInitialScrollIndex","_convertParentScrollMetrics","metrics","contentLength","getContentLength","_onScroll","onScroll","timeStamp","layoutMeasurement","contentSize","_offsetFromScrollEvent","_this$_convertParentS","Math","max","perf","infoLog","prevDt","pendingScrollUpdateCount","setState","_fillRateHelper","activate","_onScrollBeginDrag","tuple","viewabilityHelper","onScrollBeginDrag","_onScrollEndDrag","_selectOffset","onScrollEndDrag","_onMomentumScrollBegin","onMomentumScrollBegin","_onMomentumScrollEnd","onMomentumScrollEnd","_adjustCellsAroundViewport","renderMask","_createRenderMask","_getNonViewportRenderRegions","first","last","equals","_createViewToken","index","isViewable","data","getItem","item","_keyExtractor","lastFocusedCellRenderer","focusedCellIndex","itemCount","getItemCount","_getItemKey","heightOfCellsBeforeFocused","getCellMetricsApprox","heightOfCellsAfterFocused","_checkProps","FillRateHelper","_updateCellsToRenderBatcher","Batchinator","updateCellsBatchingPeriod","viewabilityConfigCallbackPairs","map","pair","ViewabilityHelper","viewabilityConfig","onViewableItemsChanged","_this$props","initialRenderRegion","_initialRenderRegion","minIndexForVisible","maintainVisibleContentPosition","firstVisibleItemKey","initialScrollIndex","_inherits2","_createClass2","value","scrollToEnd","params","animated","veryLast","frame","scrollToOffset","scrollToIndex","_this$props2","getItemLayout","onScrollToIndexFailed","viewOffset","viewPosition","getHighestMeasuredCellIndex","averageItemLength","getAverageCellLength","highestMeasuredFrameIndex","floor","getCellOffsetApprox","scrollToItem","_this$props3","scrollRef","scrollTo","console","warn","_this$_orientation","horizontal","rtl","hasContentLength","_scrollToParamsFromOffset","_this$_orientation2","cartOffset","cartesianOffset","x","y","flashScrollIndicators","getScrollResponder","getScrollableNode","findNodeHandle","getScrollRef","setNativeProps","_getCellKey","_this$context","hasMore","windowSize","__isNative","windowSizeOrDefault","__DEV__","flexWrap","flatStyles","StyleSheet","flatten","contentContainerStyle","onEndReachedThreshold","onEndReachedThresholdOrDefault","_this$_scrollMetrics","distanceFromEnd","_constrainToItemCount","newCellsAroundViewport","disableVirtualization","renderAhead","maxToRenderPerBatchOrDefault","maxToRenderPerBatch","min","computeWindowedRenderLimits","size","childIdx","_findFirstChildWithMore","ii","cellKeyForIndex","anyInCell","componentDidMount","registerAsNestedChild","componentWillUnmount","unregisterAsNestedChild","dispose","abort","deactivateAndFlush","_pushCells","cells","stickyHeaderIndices","stickyIndicesFromProps","inversionStyle","_this2","_this$props4","CellRendererComponent","ItemSeparatorComponent","ListHeaderComponent","ListItemComponent","debug","renderItem","stickyOffset","end","prevCellKey","_loop","shouldListenForLayout","enabled","undefined","onUpdateSeparators","onCellFocusCapture","onUnmount","onCellLayout","nestedContext","horizontalOrDefault","render","_this3","_this$props$scrollEve","_this$props5","ListEmptyComponent","ListFooterComponent","_this$props6","inverted","styles","horizontallyInverted","verticallyInverted","Set","element","isValidElement","VirtualizedListCellContextProvider","children","collapsable","style","compose","ListHeaderComponentStyle","cloneElement","event","spacerKey","renderRegions","enumerateRegions","lastRegion","lastSpacer","isSpacer","section","isLastSpacer","constrainToMeasured","clamp","firstMetrics","lastMetrics","spacerSize","ListFooterComponentStyle","scrollProps","scrollEventThrottle","invertStickyHeaders","isInvertedVirtualizedList","innerRet","VirtualizedListContextProvider","getScrollMetrics","renderScrollComponent","ret","Context","Consumer","scrollContext","nesting","scrollEnabled","error","jsxs","_renderDebugOverlay","componentDidUpdate","prevProps","_this$props7","extraData","resetViewableIndices","hiPriInProgress","computeBlankness","forEachInCell","_this4","measureLayout","scrollMetrics","metricsChanged","stack","normalize","framesInLayout","isMounted","windowTop","frameLast","windowLen","visTop","visLen","debugOverlayBase","debugOverlay","f","debugOverlayFrame","top","debugOverlayFrameLast","debugOverlayFrameVis","_ref3","I18nManager","isRTL","_this$props8","onStartReached","onStartReachedThreshold","onEndReached","_this$_scrollMetrics2","distanceFromStart","DEFAULT_THRESHOLD_PX","startThreshold","endThreshold","isWithinStartThreshold","isWithinEndThreshold","contentWidth","contentHeight","contentOffset","nullthrows","_e$nativeEvent","_this$_orientation3","_shouldRenderWithPriority","schedule","_this$state$cellsArou","_this$_scrollMetrics3","hiPri","onStartReachedThresholdOrDefault","distTop","distBottom","__getListMetrics","_this5","onUpdate","_findItemIndexWithKey","hint","curKey","additionalRegions","CellRenderMask","allRegions","concat","_toConsumableArray2","region","addCells","initialRegion","stickyIndicesSet","_ensureClosestStickyHeader","_props$initialScrollI","firstCellIndex","lastCellIndex","initialNumToRenderOrDefault","initialNumToRender","cellIdx","itemIdx","getDerivedStateFromProps","prevState","_newProps$maintainVis","_newProps$maintainVis2","numCells","maintainVisibleContentPositionAdjustment","prevFirstVisibleItemKey","newFirstVisibleItemKey","firstVisibleItemIndex","constrainedCells","lastPossibleCellIndex","maxFirst","keyExtractor","defaultKeyExtractor","String","type","displayName","StateSafePureComponent","contextType","VirtualizedListContext","create","Platform","OS","transform","scale","scaleY","scaleX","flex","position","right","bottom","borderColor","borderWidth","left","backgroundColor","module","exports"],"sources":["VirtualizedList.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\nimport type {CellMetricProps, ListOrientation} from './ListMetricsAggregator';\nimport type {ViewToken} from './ViewabilityHelper';\nimport type {\n  Item,\n  Props,\n  RenderItemProps,\n  RenderItemType,\n  Separators,\n} from './VirtualizedListProps';\nimport type {ScrollResponderType} from 'react-native/Libraries/Components/ScrollView/ScrollView';\nimport type {ViewStyleProp} from 'react-native/Libraries/StyleSheet/StyleSheet';\nimport type {\n  LayoutEvent,\n  ScrollEvent,\n} from 'react-native/Libraries/Types/CoreEventTypes';\n\nimport Batchinator from '../Interaction/Batchinator';\nimport clamp from '../Utilities/clamp';\nimport infoLog from '../Utilities/infoLog';\nimport {CellRenderMask} from './CellRenderMask';\nimport ChildListCollection from './ChildListCollection';\nimport FillRateHelper from './FillRateHelper';\nimport ListMetricsAggregator from './ListMetricsAggregator';\nimport StateSafePureComponent from './StateSafePureComponent';\nimport ViewabilityHelper from './ViewabilityHelper';\nimport CellRenderer from './VirtualizedListCellRenderer';\nimport {\n  VirtualizedListCellContextProvider,\n  VirtualizedListContext,\n  VirtualizedListContextProvider,\n} from './VirtualizedListContext.js';\nimport {\n  horizontalOrDefault,\n  initialNumToRenderOrDefault,\n  maxToRenderPerBatchOrDefault,\n  onEndReachedThresholdOrDefault,\n  onStartReachedThresholdOrDefault,\n  windowSizeOrDefault,\n} from './VirtualizedListProps';\nimport {\n  computeWindowedRenderLimits,\n  keyExtractor as defaultKeyExtractor,\n} from './VirtualizeUtils';\nimport invariant from 'invariant';\nimport nullthrows from 'nullthrows';\nimport * as React from 'react';\nimport {\n  I18nManager,\n  Platform,\n  RefreshControl,\n  ScrollView,\n  StyleSheet,\n  View,\n  findNodeHandle,\n} from 'react-native';\n\nexport type {RenderItemProps, RenderItemType, Separators};\n\nconst ON_EDGE_REACHED_EPSILON = 0.001;\n\nlet _usedIndexForKey = false;\nlet _keylessItemComponentName: string = '';\n\ntype ViewabilityHelperCallbackTuple = {\n  viewabilityHelper: ViewabilityHelper,\n  onViewableItemsChanged: (info: {\n    viewableItems: Array<ViewToken>,\n    changed: Array<ViewToken>,\n    ...\n  }) => void,\n  ...\n};\n\ntype State = {\n  renderMask: CellRenderMask,\n  cellsAroundViewport: {first: number, last: number},\n  // Used to track items added at the start of the list for maintainVisibleContentPosition.\n  firstVisibleItemKey: ?string,\n  // When > 0 the scroll position available in JS is considered stale and should not be used.\n  pendingScrollUpdateCount: number,\n};\n\nfunction getScrollingThreshold(threshold: number, visibleLength: number) {\n  return (threshold * visibleLength) / 2;\n}\n\n/**\n * Base implementation for the more convenient [`<FlatList>`](https://reactnative.dev/docs/flatlist)\n * and [`<SectionList>`](https://reactnative.dev/docs/sectionlist) components, which are also better\n * documented. In general, this should only really be used if you need more flexibility than\n * `FlatList` provides, e.g. for use with immutable data instead of plain arrays.\n *\n * Virtualization massively improves memory consumption and performance of large lists by\n * maintaining a finite render window of active items and replacing all items outside of the render\n * window with appropriately sized blank space. The window adapts to scrolling behavior, and items\n * are rendered incrementally with low-pri (after any running interactions) if they are far from the\n * visible area, or with hi-pri otherwise to minimize the potential of seeing blank space.\n *\n * Some caveats:\n *\n * - Internal state is not preserved when content scrolls out of the render window. Make sure all\n *   your data is captured in the item data or external stores like Flux, Redux, or Relay.\n * - This is a `PureComponent` which means that it will not re-render if `props` remain shallow-\n *   equal. Make sure that everything your `renderItem` function depends on is passed as a prop\n *   (e.g. `extraData`) that is not `===` after updates, otherwise your UI may not update on\n *   changes. This includes the `data` prop and parent component state.\n * - In order to constrain memory and enable smooth scrolling, content is rendered asynchronously\n *   offscreen. This means it's possible to scroll faster than the fill rate ands momentarily see\n *   blank content. This is a tradeoff that can be adjusted to suit the needs of each application,\n *   and we are working on improving it behind the scenes.\n * - By default, the list looks for a `key` or `id` prop on each item and uses that for the React key.\n *   Alternatively, you can provide a custom `keyExtractor` prop.\n * - As an effort to remove defaultProps, use helper functions when referencing certain props\n *\n */\nclass VirtualizedList extends StateSafePureComponent<Props, State> {\n  static contextType: typeof VirtualizedListContext = VirtualizedListContext;\n\n  // scrollToEnd may be janky without getItemLayout prop\n  scrollToEnd(params?: ?{animated?: ?boolean, ...}) {\n    const animated = params ? params.animated : true;\n    const veryLast = this.props.getItemCount(this.props.data) - 1;\n    if (veryLast < 0) {\n      return;\n    }\n    const frame = this._listMetrics.getCellMetricsApprox(veryLast, this.props);\n    const offset = Math.max(\n      0,\n      frame.offset +\n        frame.length +\n        this._footerLength -\n        this._scrollMetrics.visibleLength,\n    );\n\n    // TODO: consider using `ref.scrollToEnd` directly\n    this.scrollToOffset({animated, offset});\n  }\n\n  // scrollToIndex may be janky without getItemLayout prop\n  scrollToIndex(params: {\n    animated?: ?boolean,\n    index: number,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }): $FlowFixMe {\n    const {data, getItemCount, getItemLayout, onScrollToIndexFailed} =\n      this.props;\n    const {animated, index, viewOffset, viewPosition} = params;\n    invariant(\n      index >= 0,\n      `scrollToIndex out of range: requested index ${index} but minimum is 0`,\n    );\n    invariant(\n      getItemCount(data) >= 1,\n      `scrollToIndex out of range: item length ${getItemCount(\n        data,\n      )} but minimum is 1`,\n    );\n    invariant(\n      index < getItemCount(data),\n      `scrollToIndex out of range: requested index ${index} is out of 0 to ${\n        getItemCount(data) - 1\n      }`,\n    );\n    if (\n      !getItemLayout &&\n      index > this._listMetrics.getHighestMeasuredCellIndex()\n    ) {\n      invariant(\n        !!onScrollToIndexFailed,\n        'scrollToIndex should be used in conjunction with getItemLayout or onScrollToIndexFailed, ' +\n          'otherwise there is no way to know the location of offscreen indices or handle failures.',\n      );\n      onScrollToIndexFailed({\n        averageItemLength: this._listMetrics.getAverageCellLength(),\n        highestMeasuredFrameIndex:\n          this._listMetrics.getHighestMeasuredCellIndex(),\n        index,\n      });\n      return;\n    }\n    const frame = this._listMetrics.getCellMetricsApprox(\n      Math.floor(index),\n      this.props,\n    );\n    const offset =\n      Math.max(\n        0,\n        this._listMetrics.getCellOffsetApprox(index, this.props) -\n          (viewPosition || 0) *\n            (this._scrollMetrics.visibleLength - frame.length),\n      ) - (viewOffset || 0);\n\n    this.scrollToOffset({offset, animated});\n  }\n\n  // scrollToItem may be janky without getItemLayout prop. Required linear scan through items -\n  // use scrollToIndex instead if possible.\n  scrollToItem(params: {\n    animated?: ?boolean,\n    item: Item,\n    viewOffset?: number,\n    viewPosition?: number,\n    ...\n  }) {\n    const {item} = params;\n    const {data, getItem, getItemCount} = this.props;\n    const itemCount = getItemCount(data);\n    for (let index = 0; index < itemCount; index++) {\n      if (getItem(data, index) === item) {\n        this.scrollToIndex({...params, index});\n        break;\n      }\n    }\n  }\n\n  /**\n   * Scroll to a specific content pixel offset in the list.\n   *\n   * Param `offset` expects the offset to scroll to.\n   * In case of `horizontal` is true, the offset is the x-value,\n   * in any other case the offset is the y-value.\n   *\n   * Param `animated` (`true` by default) defines whether the list\n   * should do an animation while scrolling.\n   */\n  scrollToOffset(params: {animated?: ?boolean, offset: number, ...}) {\n    const {animated, offset} = params;\n    const scrollRef = this._scrollRef;\n\n    if (scrollRef == null) {\n      return;\n    }\n\n    if (scrollRef.scrollTo == null) {\n      console.warn(\n        'No scrollTo method provided. This may be because you have two nested ' +\n          'VirtualizedLists with the same orientation, or because you are ' +\n          'using a custom component that does not implement scrollTo.',\n      );\n      return;\n    }\n\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl && !this._listMetrics.hasContentLength()) {\n      console.warn(\n        'scrollToOffset may not be called in RTL before content is laid out',\n      );\n      return;\n    }\n\n    scrollRef.scrollTo({\n      animated,\n      ...this._scrollToParamsFromOffset(offset),\n    });\n  }\n\n  _scrollToParamsFromOffset(offset: number): {x?: number, y?: number} {\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl) {\n      // Add the visible length of the scrollview so that the offset is right-aligned\n      const cartOffset = this._listMetrics.cartesianOffset(\n        offset + this._scrollMetrics.visibleLength,\n      );\n      return horizontal ? {x: cartOffset} : {y: cartOffset};\n    } else {\n      return horizontal ? {x: offset} : {y: offset};\n    }\n  }\n\n  recordInteraction() {\n    this._nestedChildLists.forEach(childList => {\n      childList.recordInteraction();\n    });\n    this._viewabilityTuples.forEach(t => {\n      t.viewabilityHelper.recordInteraction();\n    });\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  }\n\n  flashScrollIndicators() {\n    if (this._scrollRef == null) {\n      return;\n    }\n\n    this._scrollRef.flashScrollIndicators();\n  }\n\n  /**\n   * Provides a handle to the underlying scroll responder.\n   * Note that `this._scrollRef` might not be a `ScrollView`, so we\n   * need to check that it responds to `getScrollResponder` before calling it.\n   */\n  getScrollResponder(): ?ScrollResponderType {\n    if (this._scrollRef && this._scrollRef.getScrollResponder) {\n      return this._scrollRef.getScrollResponder();\n    }\n  }\n\n  getScrollableNode(): ?number {\n    if (this._scrollRef && this._scrollRef.getScrollableNode) {\n      return this._scrollRef.getScrollableNode();\n    } else {\n      return findNodeHandle(this._scrollRef);\n    }\n  }\n\n  getScrollRef():\n    | ?React.ElementRef<typeof ScrollView>\n    | ?React.ElementRef<typeof View> {\n    if (this._scrollRef && this._scrollRef.getScrollRef) {\n      return this._scrollRef.getScrollRef();\n    } else {\n      return this._scrollRef;\n    }\n  }\n\n  setNativeProps(props: Object) {\n    if (this._scrollRef) {\n      this._scrollRef.setNativeProps(props);\n    }\n  }\n\n  _getCellKey(): string {\n    return this.context?.cellKey || 'rootList';\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getScrollMetrics = () => {\n    return this._scrollMetrics;\n  };\n\n  hasMore(): boolean {\n    return this._hasMore;\n  }\n\n  // $FlowFixMe[missing-local-annot]\n  _getOutermostParentListRef = () => {\n    if (this._isNestedWithSameOrientation()) {\n      return this.context.getOutermostParentListRef();\n    } else {\n      return this;\n    }\n  };\n\n  _registerAsNestedChild = (childList: {\n    cellKey: string,\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.add(childList.ref, childList.cellKey);\n    if (this._hasInteracted) {\n      childList.ref.recordInteraction();\n    }\n  };\n\n  _unregisterAsNestedChild = (childList: {\n    ref: React.ElementRef<typeof VirtualizedList>,\n  }): void => {\n    this._nestedChildLists.remove(childList.ref);\n  };\n\n  state: State;\n\n  constructor(props: Props) {\n    super(props);\n    this._checkProps(props);\n\n    this._fillRateHelper = new FillRateHelper(this._listMetrics);\n    this._updateCellsToRenderBatcher = new Batchinator(\n      this._updateCellsToRender,\n      this.props.updateCellsBatchingPeriod ?? 50,\n    );\n\n    if (this.props.viewabilityConfigCallbackPairs) {\n      this._viewabilityTuples = this.props.viewabilityConfigCallbackPairs.map(\n        pair => ({\n          viewabilityHelper: new ViewabilityHelper(pair.viewabilityConfig),\n          onViewableItemsChanged: pair.onViewableItemsChanged,\n        }),\n      );\n    } else {\n      const {onViewableItemsChanged, viewabilityConfig} = this.props;\n      if (onViewableItemsChanged) {\n        this._viewabilityTuples.push({\n          viewabilityHelper: new ViewabilityHelper(viewabilityConfig),\n          onViewableItemsChanged: onViewableItemsChanged,\n        });\n      }\n    }\n\n    const initialRenderRegion = VirtualizedList._initialRenderRegion(props);\n\n    const minIndexForVisible =\n      this.props.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n\n    this.state = {\n      cellsAroundViewport: initialRenderRegion,\n      renderMask: VirtualizedList._createRenderMask(props, initialRenderRegion),\n      firstVisibleItemKey:\n        this.props.getItemCount(this.props.data) > minIndexForVisible\n          ? VirtualizedList._getItemKey(this.props, minIndexForVisible)\n          : null,\n      // When we have a non-zero initialScrollIndex, we will receive a\n      // scroll event later so this will prevent the window from updating\n      // until we get a valid offset.\n      pendingScrollUpdateCount:\n        this.props.initialScrollIndex != null &&\n        this.props.initialScrollIndex > 0\n          ? 1\n          : 0,\n    };\n  }\n\n  _checkProps(props: Props) {\n    const {onScroll, windowSize, getItemCount, data, initialScrollIndex} =\n      props;\n\n    invariant(\n      // $FlowFixMe[prop-missing]\n      !onScroll || !onScroll.__isNative,\n      'Components based on VirtualizedList must be wrapped with Animated.createAnimatedComponent ' +\n        'to support native onScroll events with useNativeDriver',\n    );\n    invariant(\n      windowSizeOrDefault(windowSize) > 0,\n      'VirtualizedList: The windowSize prop must be present and set to a value greater than 0.',\n    );\n\n    invariant(\n      getItemCount,\n      'VirtualizedList: The \"getItemCount\" prop must be provided',\n    );\n\n    const itemCount = getItemCount(data);\n\n    if (\n      initialScrollIndex != null &&\n      !this._hasTriggeredInitialScrollToIndex &&\n      (initialScrollIndex < 0 ||\n        (itemCount > 0 && initialScrollIndex >= itemCount)) &&\n      !this._hasWarned.initialScrollIndex\n    ) {\n      console.warn(\n        `initialScrollIndex \"${initialScrollIndex}\" is not valid (list has ${itemCount} items)`,\n      );\n      this._hasWarned.initialScrollIndex = true;\n    }\n\n    if (__DEV__ && !this._hasWarned.flexWrap) {\n      // $FlowFixMe[underconstrained-implicit-instantiation]\n      const flatStyles = StyleSheet.flatten(this.props.contentContainerStyle);\n      if (flatStyles != null && flatStyles.flexWrap === 'wrap') {\n        console.warn(\n          '`flexWrap: `wrap`` is not supported with the `VirtualizedList` components.' +\n            'Consider using `numColumns` with `FlatList` instead.',\n        );\n        this._hasWarned.flexWrap = true;\n      }\n    }\n  }\n\n  static _findItemIndexWithKey(\n    props: Props,\n    key: string,\n    hint: ?number,\n  ): ?number {\n    const itemCount = props.getItemCount(props.data);\n    if (hint != null && hint >= 0 && hint < itemCount) {\n      const curKey = VirtualizedList._getItemKey(props, hint);\n      if (curKey === key) {\n        return hint;\n      }\n    }\n    for (let ii = 0; ii < itemCount; ii++) {\n      const curKey = VirtualizedList._getItemKey(props, ii);\n      if (curKey === key) {\n        return ii;\n      }\n    }\n    return null;\n  }\n\n  static _getItemKey(\n    props: {\n      data: Props['data'],\n      getItem: Props['getItem'],\n      keyExtractor: Props['keyExtractor'],\n      ...\n    },\n    index: number,\n  ): string {\n    const item = props.getItem(props.data, index);\n    return VirtualizedList._keyExtractor(item, index, props);\n  }\n\n  static _createRenderMask(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    additionalRegions?: ?$ReadOnlyArray<{first: number, last: number}>,\n  ): CellRenderMask {\n    const itemCount = props.getItemCount(props.data);\n\n    invariant(\n      cellsAroundViewport.first >= 0 &&\n        cellsAroundViewport.last >= cellsAroundViewport.first - 1 &&\n        cellsAroundViewport.last < itemCount,\n      `Invalid cells around viewport \"[${cellsAroundViewport.first}, ${cellsAroundViewport.last}]\" was passed to VirtualizedList._createRenderMask`,\n    );\n\n    const renderMask = new CellRenderMask(itemCount);\n\n    if (itemCount > 0) {\n      const allRegions = [cellsAroundViewport, ...(additionalRegions ?? [])];\n      for (const region of allRegions) {\n        renderMask.addCells(region);\n      }\n\n      // The initially rendered cells are retained as part of the\n      // \"scroll-to-top\" optimization\n      if (props.initialScrollIndex == null || props.initialScrollIndex <= 0) {\n        const initialRegion = VirtualizedList._initialRenderRegion(props);\n        renderMask.addCells(initialRegion);\n      }\n\n      // The layout coordinates of sticker headers may be off-screen while the\n      // actual header is on-screen. Keep the most recent before the viewport\n      // rendered, even if its layout coordinates are not in viewport.\n      const stickyIndicesSet = new Set(props.stickyHeaderIndices);\n      VirtualizedList._ensureClosestStickyHeader(\n        props,\n        stickyIndicesSet,\n        renderMask,\n        cellsAroundViewport.first,\n      );\n    }\n\n    return renderMask;\n  }\n\n  static _initialRenderRegion(props: Props): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n\n    const firstCellIndex = Math.max(\n      0,\n      Math.min(itemCount - 1, Math.floor(props.initialScrollIndex ?? 0)),\n    );\n\n    const lastCellIndex =\n      Math.min(\n        itemCount,\n        firstCellIndex + initialNumToRenderOrDefault(props.initialNumToRender),\n      ) - 1;\n\n    return {\n      first: firstCellIndex,\n      last: lastCellIndex,\n    };\n  }\n\n  static _ensureClosestStickyHeader(\n    props: Props,\n    stickyIndicesSet: Set<number>,\n    renderMask: CellRenderMask,\n    cellIdx: number,\n  ) {\n    const stickyOffset = props.ListHeaderComponent ? 1 : 0;\n\n    for (let itemIdx = cellIdx - 1; itemIdx >= 0; itemIdx--) {\n      if (stickyIndicesSet.has(itemIdx + stickyOffset)) {\n        renderMask.addCells({first: itemIdx, last: itemIdx});\n        break;\n      }\n    }\n  }\n\n  _adjustCellsAroundViewport(\n    props: Props,\n    cellsAroundViewport: {first: number, last: number},\n    pendingScrollUpdateCount: number,\n  ): {first: number, last: number} {\n    const {data, getItemCount} = props;\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      props.onEndReachedThreshold,\n    );\n    const {offset, visibleLength} = this._scrollMetrics;\n    const contentLength = this._listMetrics.getContentLength();\n    const distanceFromEnd = contentLength - visibleLength - offset;\n\n    // Wait until the scroll view metrics have been set up. And until then,\n    // we will trust the initialNumToRender suggestion\n    if (visibleLength <= 0 || contentLength <= 0) {\n      return cellsAroundViewport.last >= getItemCount(data)\n        ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n        : cellsAroundViewport;\n    }\n\n    let newCellsAroundViewport: {first: number, last: number};\n    if (props.disableVirtualization) {\n      const renderAhead =\n        distanceFromEnd < onEndReachedThreshold * visibleLength\n          ? maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch)\n          : 0;\n\n      newCellsAroundViewport = {\n        first: 0,\n        last: Math.min(\n          cellsAroundViewport.last + renderAhead,\n          getItemCount(data) - 1,\n        ),\n      };\n    } else {\n      // If we have a pending scroll update, we should not adjust the render window as it\n      // might override the correct window.\n      if (pendingScrollUpdateCount > 0) {\n        return cellsAroundViewport.last >= getItemCount(data)\n          ? VirtualizedList._constrainToItemCount(cellsAroundViewport, props)\n          : cellsAroundViewport;\n      }\n\n      newCellsAroundViewport = computeWindowedRenderLimits(\n        props,\n        maxToRenderPerBatchOrDefault(props.maxToRenderPerBatch),\n        windowSizeOrDefault(props.windowSize),\n        cellsAroundViewport,\n        this._listMetrics,\n        this._scrollMetrics,\n      );\n      invariant(\n        newCellsAroundViewport.last < getItemCount(data),\n        'computeWindowedRenderLimits() should return range in-bounds',\n      );\n    }\n\n    if (this._nestedChildLists.size() > 0) {\n      // If some cell in the new state has a child list in it, we should only render\n      // up through that item, so that we give that list a chance to render.\n      // Otherwise there's churn from multiple child lists mounting and un-mounting\n      // their items.\n\n      // Will this prevent rendering if the nested list doesn't realize the end?\n      const childIdx = this._findFirstChildWithMore(\n        newCellsAroundViewport.first,\n        newCellsAroundViewport.last,\n      );\n\n      newCellsAroundViewport.last = childIdx ?? newCellsAroundViewport.last;\n    }\n\n    return newCellsAroundViewport;\n  }\n\n  _findFirstChildWithMore(first: number, last: number): number | null {\n    for (let ii = first; ii <= last; ii++) {\n      const cellKeyForIndex = this._indicesToKeys.get(ii);\n      if (\n        cellKeyForIndex != null &&\n        this._nestedChildLists.anyInCell(cellKeyForIndex, childList =>\n          childList.hasMore(),\n        )\n      ) {\n        return ii;\n      }\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.registerAsNestedChild({\n        ref: this,\n        cellKey: this.context.cellKey,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this._isNestedWithSameOrientation()) {\n      this.context.unregisterAsNestedChild({ref: this});\n    }\n    this._updateCellsToRenderBatcher.dispose({abort: true});\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.dispose();\n    });\n    this._fillRateHelper.deactivateAndFlush();\n  }\n\n  static getDerivedStateFromProps(newProps: Props, prevState: State): State {\n    // first and last could be stale (e.g. if a new, shorter items props is passed in), so we make\n    // sure we're rendering a reasonable range here.\n    const itemCount = newProps.getItemCount(newProps.data);\n    if (itemCount === prevState.renderMask.numCells()) {\n      return prevState;\n    }\n\n    let maintainVisibleContentPositionAdjustment: ?number = null;\n    const prevFirstVisibleItemKey = prevState.firstVisibleItemKey;\n    const minIndexForVisible =\n      newProps.maintainVisibleContentPosition?.minIndexForVisible ?? 0;\n    const newFirstVisibleItemKey =\n      newProps.getItemCount(newProps.data) > minIndexForVisible\n        ? VirtualizedList._getItemKey(newProps, minIndexForVisible)\n        : null;\n    if (\n      newProps.maintainVisibleContentPosition != null &&\n      prevFirstVisibleItemKey != null &&\n      newFirstVisibleItemKey != null\n    ) {\n      if (newFirstVisibleItemKey !== prevFirstVisibleItemKey) {\n        // Fast path if items were added at the start of the list.\n        const hint =\n          itemCount - prevState.renderMask.numCells() + minIndexForVisible;\n        const firstVisibleItemIndex = VirtualizedList._findItemIndexWithKey(\n          newProps,\n          prevFirstVisibleItemKey,\n          hint,\n        );\n        maintainVisibleContentPositionAdjustment =\n          firstVisibleItemIndex != null\n            ? firstVisibleItemIndex - minIndexForVisible\n            : null;\n      } else {\n        maintainVisibleContentPositionAdjustment = null;\n      }\n    }\n\n    const constrainedCells = VirtualizedList._constrainToItemCount(\n      maintainVisibleContentPositionAdjustment != null\n        ? {\n            first:\n              prevState.cellsAroundViewport.first +\n              maintainVisibleContentPositionAdjustment,\n            last:\n              prevState.cellsAroundViewport.last +\n              maintainVisibleContentPositionAdjustment,\n          }\n        : prevState.cellsAroundViewport,\n      newProps,\n    );\n\n    return {\n      cellsAroundViewport: constrainedCells,\n      renderMask: VirtualizedList._createRenderMask(newProps, constrainedCells),\n      firstVisibleItemKey: newFirstVisibleItemKey,\n      pendingScrollUpdateCount:\n        maintainVisibleContentPositionAdjustment != null\n          ? prevState.pendingScrollUpdateCount + 1\n          : prevState.pendingScrollUpdateCount,\n    };\n  }\n\n  _pushCells(\n    cells: Array<Object>,\n    stickyHeaderIndices: Array<number>,\n    stickyIndicesFromProps: Set<number>,\n    first: number,\n    last: number,\n    inversionStyle: ViewStyleProp,\n  ) {\n    const {\n      CellRendererComponent,\n      ItemSeparatorComponent,\n      ListHeaderComponent,\n      ListItemComponent,\n      data,\n      debug,\n      getItem,\n      getItemCount,\n      getItemLayout,\n      horizontal,\n      renderItem,\n    } = this.props;\n    const stickyOffset = ListHeaderComponent ? 1 : 0;\n    const end = getItemCount(data) - 1;\n    let prevCellKey;\n    last = Math.min(end, last);\n\n    for (let ii = first; ii <= last; ii++) {\n      const item = getItem(data, ii);\n      const key = VirtualizedList._keyExtractor(item, ii, this.props);\n\n      this._indicesToKeys.set(ii, key);\n      if (stickyIndicesFromProps.has(ii + stickyOffset)) {\n        stickyHeaderIndices.push(cells.length);\n      }\n\n      const shouldListenForLayout =\n        getItemLayout == null || debug || this._fillRateHelper.enabled();\n\n      cells.push(\n        <CellRenderer\n          CellRendererComponent={CellRendererComponent}\n          ItemSeparatorComponent={ii < end ? ItemSeparatorComponent : undefined}\n          ListItemComponent={ListItemComponent}\n          cellKey={key}\n          horizontal={horizontal}\n          index={ii}\n          inversionStyle={inversionStyle}\n          item={item}\n          key={key}\n          prevCellKey={prevCellKey}\n          onUpdateSeparators={this._onUpdateSeparators}\n          onCellFocusCapture={this._onCellFocusCapture}\n          onUnmount={this._onCellUnmount}\n          ref={ref => {\n            this._cellRefs[key] = ref;\n          }}\n          renderItem={renderItem}\n          {...(shouldListenForLayout && {\n            onCellLayout: this._onCellLayout,\n          })}\n        />,\n      );\n      prevCellKey = key;\n    }\n  }\n\n  static _constrainToItemCount(\n    cells: {first: number, last: number},\n    props: Props,\n  ): {first: number, last: number} {\n    const itemCount = props.getItemCount(props.data);\n    const lastPossibleCellIndex = itemCount - 1;\n\n    // Constraining `last` may significantly shrink the window. Adjust `first`\n    // to expand the window if the new `last` results in a new window smaller\n    // than the number of cells rendered per batch.\n    const maxToRenderPerBatch = maxToRenderPerBatchOrDefault(\n      props.maxToRenderPerBatch,\n    );\n    const maxFirst = Math.max(0, lastPossibleCellIndex - maxToRenderPerBatch);\n\n    return {\n      first: clamp(0, cells.first, maxFirst),\n      last: Math.min(lastPossibleCellIndex, cells.last),\n    };\n  }\n\n  _onUpdateSeparators = (keys: Array<?string>, newProps: Object) => {\n    keys.forEach(key => {\n      const ref = key != null && this._cellRefs[key];\n      ref && ref.updateSeparatorProps(newProps);\n    });\n  };\n\n  _isNestedWithSameOrientation(): boolean {\n    const nestedContext = this.context;\n    return !!(\n      nestedContext &&\n      !!nestedContext.horizontal === horizontalOrDefault(this.props.horizontal)\n    );\n  }\n\n  _getSpacerKey = (isVertical: boolean): string =>\n    isVertical ? 'height' : 'width';\n\n  static _keyExtractor(\n    item: Item,\n    index: number,\n    props: {\n      keyExtractor?: ?(item: Item, index: number) => string,\n      ...\n    },\n  ): string {\n    if (props.keyExtractor != null) {\n      return props.keyExtractor(item, index);\n    }\n\n    const key = defaultKeyExtractor(item, index);\n    if (key === String(index)) {\n      _usedIndexForKey = true;\n      if (item.type && item.type.displayName) {\n        _keylessItemComponentName = item.type.displayName;\n      }\n    }\n    return key;\n  }\n\n  render(): React.Node {\n    this._checkProps(this.props);\n    const {ListEmptyComponent, ListFooterComponent, ListHeaderComponent} =\n      this.props;\n    const {data, horizontal} = this.props;\n    const inversionStyle = this.props.inverted\n      ? horizontalOrDefault(this.props.horizontal)\n        ? styles.horizontallyInverted\n        : styles.verticallyInverted\n      : null;\n    const cells: Array<any | React.Node> = [];\n    const stickyIndicesFromProps = new Set(this.props.stickyHeaderIndices);\n    const stickyHeaderIndices = [];\n\n    // 1. Add cell for ListHeaderComponent\n    if (ListHeaderComponent) {\n      if (stickyIndicesFromProps.has(0)) {\n        stickyHeaderIndices.push(0);\n      }\n      const element = React.isValidElement(ListHeaderComponent) ? (\n        ListHeaderComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListHeaderComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-header'}\n          key=\"$header\">\n          <View\n            // We expect that header component will be a single native view so make it\n            // not collapsable to avoid this view being flattened and make this assumption\n            // no longer true.\n            collapsable={false}\n            onLayout={this._onLayoutHeader}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListHeaderComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2a. Add a cell for ListEmptyComponent if applicable\n    const itemCount = this.props.getItemCount(data);\n    if (itemCount === 0 && ListEmptyComponent) {\n      const element: React.Element<any> = ((React.isValidElement(\n        ListEmptyComponent,\n      ) ? (\n        ListEmptyComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListEmptyComponent />\n      )): any);\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getCellKey() + '-empty'}\n          key=\"$empty\">\n          {React.cloneElement(element, {\n            onLayout: (event: LayoutEvent) => {\n              this._onLayoutEmpty(event);\n              // $FlowFixMe[prop-missing] React.Element internal inspection\n              if (element.props.onLayout) {\n                element.props.onLayout(event);\n              }\n            },\n            // $FlowFixMe[prop-missing] React.Element internal inspection\n            style: StyleSheet.compose(inversionStyle, element.props.style),\n          })}\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 2b. Add cells and spacers for each item\n    if (itemCount > 0) {\n      _usedIndexForKey = false;\n      _keylessItemComponentName = '';\n      const spacerKey = this._getSpacerKey(!horizontal);\n\n      const renderRegions = this.state.renderMask.enumerateRegions();\n      const lastRegion = renderRegions[renderRegions.length - 1];\n      const lastSpacer = lastRegion?.isSpacer ? lastRegion : null;\n\n      for (const section of renderRegions) {\n        if (section.isSpacer) {\n          // Legacy behavior is to avoid spacers when virtualization is\n          // disabled (including head spacers on initial render).\n          if (this.props.disableVirtualization) {\n            continue;\n          }\n\n          // Without getItemLayout, we limit our tail spacer to the _highestMeasuredFrameIndex to\n          // prevent the user for hyperscrolling into un-measured area because otherwise content will\n          // likely jump around as it renders in above the viewport.\n          const isLastSpacer = section === lastSpacer;\n          const constrainToMeasured = isLastSpacer && !this.props.getItemLayout;\n          const last = constrainToMeasured\n            ? clamp(\n                section.first - 1,\n                section.last,\n                this._listMetrics.getHighestMeasuredCellIndex(),\n              )\n            : section.last;\n\n          const firstMetrics = this._listMetrics.getCellMetricsApprox(\n            section.first,\n            this.props,\n          );\n          const lastMetrics = this._listMetrics.getCellMetricsApprox(\n            last,\n            this.props,\n          );\n          const spacerSize =\n            lastMetrics.offset + lastMetrics.length - firstMetrics.offset;\n          cells.push(\n            <View\n              key={`$spacer-${section.first}`}\n              style={{[spacerKey]: spacerSize}}\n            />,\n          );\n        } else {\n          this._pushCells(\n            cells,\n            stickyHeaderIndices,\n            stickyIndicesFromProps,\n            section.first,\n            section.last,\n            inversionStyle,\n          );\n        }\n      }\n\n      if (!this._hasWarned.keys && _usedIndexForKey) {\n        console.warn(\n          'VirtualizedList: missing keys for items, make sure to specify a key or id property on each ' +\n            'item or provide a custom keyExtractor.',\n          _keylessItemComponentName,\n        );\n        this._hasWarned.keys = true;\n      }\n    }\n\n    // 3. Add cell for ListFooterComponent\n    if (ListFooterComponent) {\n      const element = React.isValidElement(ListFooterComponent) ? (\n        ListFooterComponent\n      ) : (\n        // $FlowFixMe[not-a-component]\n        // $FlowFixMe[incompatible-type-arg]\n        <ListFooterComponent />\n      );\n      cells.push(\n        <VirtualizedListCellContextProvider\n          cellKey={this._getFooterCellKey()}\n          key=\"$footer\">\n          <View\n            onLayout={this._onLayoutFooter}\n            style={StyleSheet.compose(\n              inversionStyle,\n              this.props.ListFooterComponentStyle,\n            )}>\n            {\n              // $FlowFixMe[incompatible-type] - Typing ReactNativeComponent revealed errors\n              element\n            }\n          </View>\n        </VirtualizedListCellContextProvider>,\n      );\n    }\n\n    // 4. Render the ScrollView\n    const scrollProps = {\n      ...this.props,\n      onContentSizeChange: this._onContentSizeChange,\n      onLayout: this._onLayout,\n      onScroll: this._onScroll,\n      onScrollBeginDrag: this._onScrollBeginDrag,\n      onScrollEndDrag: this._onScrollEndDrag,\n      onMomentumScrollBegin: this._onMomentumScrollBegin,\n      onMomentumScrollEnd: this._onMomentumScrollEnd,\n      // iOS/macOS requires a non-zero scrollEventThrottle to fire more than a\n      // single notification while scrolling. This will otherwise no-op.\n      scrollEventThrottle: this.props.scrollEventThrottle ?? 0.0001,\n      invertStickyHeaders:\n        this.props.invertStickyHeaders !== undefined\n          ? this.props.invertStickyHeaders\n          : this.props.inverted,\n      stickyHeaderIndices,\n      style: inversionStyle\n        ? [inversionStyle, this.props.style]\n        : this.props.style,\n      isInvertedVirtualizedList: this.props.inverted,\n      maintainVisibleContentPosition:\n        this.props.maintainVisibleContentPosition != null\n          ? {\n              ...this.props.maintainVisibleContentPosition,\n              // Adjust index to account for ListHeaderComponent.\n              minIndexForVisible:\n                this.props.maintainVisibleContentPosition.minIndexForVisible +\n                (this.props.ListHeaderComponent ? 1 : 0),\n            }\n          : undefined,\n    };\n\n    this._hasMore = this.state.cellsAroundViewport.last < itemCount - 1;\n\n    const innerRet = (\n      <VirtualizedListContextProvider\n        value={{\n          cellKey: null,\n          getScrollMetrics: this._getScrollMetrics,\n          horizontal: horizontalOrDefault(this.props.horizontal),\n          getOutermostParentListRef: this._getOutermostParentListRef,\n          registerAsNestedChild: this._registerAsNestedChild,\n          unregisterAsNestedChild: this._unregisterAsNestedChild,\n        }}>\n        {React.cloneElement(\n          (\n            this.props.renderScrollComponent ||\n            this._defaultRenderScrollComponent\n          )(scrollProps),\n          {\n            ref: this._captureScrollRef,\n          },\n          cells,\n        )}\n      </VirtualizedListContextProvider>\n    );\n    let ret: React.Node = innerRet;\n    if (__DEV__) {\n      ret = (\n        <ScrollView.Context.Consumer>\n          {scrollContext => {\n            if (\n              scrollContext != null &&\n              !scrollContext.horizontal ===\n                !horizontalOrDefault(this.props.horizontal) &&\n              !this._hasWarned.nesting &&\n              this.context == null &&\n              this.props.scrollEnabled !== false\n            ) {\n              console.error(\n                'VirtualizedLists should never be nested inside plain ScrollViews with the same ' +\n                  'orientation because it can break windowing and other functionality - use another ' +\n                  'VirtualizedList-backed container instead.',\n              );\n              this._hasWarned.nesting = true;\n            }\n            return innerRet;\n          }}\n        </ScrollView.Context.Consumer>\n      );\n    }\n    if (this.props.debug) {\n      return (\n        <View style={styles.debug}>\n          {ret}\n          {this._renderDebugOverlay()}\n        </View>\n      );\n    } else {\n      return ret;\n    }\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    const {data, extraData} = this.props;\n    if (data !== prevProps.data || extraData !== prevProps.extraData) {\n      // clear the viewableIndices cache to also trigger\n      // the onViewableItemsChanged callback with the new data\n      this._viewabilityTuples.forEach(tuple => {\n        tuple.viewabilityHelper.resetViewableIndices();\n      });\n    }\n    // The `this._hiPriInProgress` is guaranteeing a hiPri cell update will only happen\n    // once per fiber update. The `_scheduleCellsToRenderUpdate` will set it to true\n    // if a hiPri update needs to perform. If `componentDidUpdate` is triggered with\n    // `this._hiPriInProgress=true`, means it's triggered by the hiPri update. The\n    // `_scheduleCellsToRenderUpdate` will check this condition and not perform\n    // another hiPri update.\n    const hiPriInProgress = this._hiPriInProgress;\n    this._scheduleCellsToRenderUpdate();\n    // Make sure setting `this._hiPriInProgress` back to false after `componentDidUpdate`\n    // is triggered with `this._hiPriInProgress = true`\n    if (hiPriInProgress) {\n      this._hiPriInProgress = false;\n    }\n  }\n\n  _cellRefs: {[string]: null | CellRenderer<any>} = {};\n  _fillRateHelper: FillRateHelper;\n  _listMetrics: ListMetricsAggregator = new ListMetricsAggregator();\n  _footerLength = 0;\n  // Used for preventing scrollToIndex from being called multiple times for initialScrollIndex\n  _hasTriggeredInitialScrollToIndex = false;\n  _hasInteracted = false;\n  _hasMore = false;\n  _hasWarned: {[string]: boolean} = {};\n  _headerLength = 0;\n  _hiPriInProgress: boolean = false; // flag to prevent infinite hiPri cell limit update\n  _indicesToKeys: Map<number, string> = new Map();\n  _lastFocusedCellKey: ?string = null;\n  _nestedChildLists: ChildListCollection<VirtualizedList> =\n    new ChildListCollection();\n  _offsetFromParentVirtualizedList: number = 0;\n  _pendingViewabilityUpdate: boolean = false;\n  _prevParentOffset: number = 0;\n  _scrollMetrics: {\n    dOffset: number,\n    dt: number,\n    offset: number,\n    timestamp: number,\n    velocity: number,\n    visibleLength: number,\n    zoomScale: number,\n  } = {\n    dOffset: 0,\n    dt: 10,\n    offset: 0,\n    timestamp: 0,\n    velocity: 0,\n    visibleLength: 0,\n    zoomScale: 1,\n  };\n  _scrollRef: ?React.ElementRef<any> = null;\n  _sentStartForContentLength = 0;\n  _sentEndForContentLength = 0;\n  _updateCellsToRenderBatcher: Batchinator;\n  _viewabilityTuples: Array<ViewabilityHelperCallbackTuple> = [];\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _captureScrollRef = ref => {\n    this._scrollRef = ref;\n  };\n\n  _computeBlankness() {\n    this._fillRateHelper.computeBlankness(\n      this.props,\n      this.state.cellsAroundViewport,\n      this._scrollMetrics,\n    );\n  }\n\n  /* $FlowFixMe[missing-local-annot] The type annotation(s) required by Flow's\n   * LTI update could not be added via codemod */\n  _defaultRenderScrollComponent = props => {\n    const onRefresh = props.onRefresh;\n    if (this._isNestedWithSameOrientation()) {\n      // Prevent VirtualizedList._onContentSizeChange from being triggered by a bubbling onContentSizeChange event.\n      // This could lead to internal inconsistencies within VirtualizedList.\n      const {onContentSizeChange, ...otherProps} = props;\n      return <View {...otherProps} />;\n    } else if (onRefresh) {\n      invariant(\n        typeof props.refreshing === 'boolean',\n        '`refreshing` prop must be set as a boolean in order to use `onRefresh`, but got `' +\n          JSON.stringify(props.refreshing ?? 'undefined') +\n          '`',\n      );\n      return (\n        // $FlowFixMe[prop-missing] Invalid prop usage\n        // $FlowFixMe[incompatible-use]\n        <ScrollView\n          {...props}\n          refreshControl={\n            props.refreshControl == null ? (\n              <RefreshControl\n                // $FlowFixMe[incompatible-type]\n                refreshing={props.refreshing}\n                onRefresh={onRefresh}\n                progressViewOffset={props.progressViewOffset}\n              />\n            ) : (\n              props.refreshControl\n            )\n          }\n        />\n      );\n    } else {\n      // $FlowFixMe[prop-missing] Invalid prop usage\n      // $FlowFixMe[incompatible-use]\n      return <ScrollView {...props} />;\n    }\n  };\n\n  _onCellLayout = (\n    e: LayoutEvent,\n    cellKey: string,\n    cellIndex: number,\n  ): void => {\n    const layoutHasChanged = this._listMetrics.notifyCellLayout({\n      cellIndex,\n      cellKey,\n      layout: e.nativeEvent.layout,\n      orientation: this._orientation(),\n    });\n\n    if (layoutHasChanged) {\n      this._scheduleCellsToRenderUpdate();\n    }\n\n    this._triggerRemeasureForChildListsInCell(cellKey);\n    this._computeBlankness();\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n  };\n\n  _onCellFocusCapture = (cellKey: string) => {\n    this._lastFocusedCellKey = cellKey;\n    this._updateCellsToRender();\n  };\n\n  _onCellUnmount = (cellKey: string) => {\n    delete this._cellRefs[cellKey];\n    this._listMetrics.notifyCellUnmounted(cellKey);\n  };\n\n  _triggerRemeasureForChildListsInCell(cellKey: string): void {\n    this._nestedChildLists.forEachInCell(cellKey, childList => {\n      childList.measureLayoutRelativeToContainingList();\n    });\n  }\n\n  measureLayoutRelativeToContainingList(): void {\n    // TODO (T35574538): findNodeHandle sometimes crashes with \"Unable to find\n    // node on an unmounted component\" during scrolling\n    try {\n      if (!this._scrollRef) {\n        return;\n      }\n      // We are assuming that getOutermostParentListRef().getScrollRef()\n      // is a non-null reference to a ScrollView\n      this._scrollRef.measureLayout(\n        this.context.getOutermostParentListRef().getScrollRef(),\n        (x, y, width, height) => {\n          this._offsetFromParentVirtualizedList = this._selectOffset({x, y});\n          this._listMetrics.notifyListContentLayout({\n            layout: {width, height},\n            orientation: this._orientation(),\n          });\n          const scrollMetrics = this._convertParentScrollMetrics(\n            this.context.getScrollMetrics(),\n          );\n\n          const metricsChanged =\n            this._scrollMetrics.visibleLength !== scrollMetrics.visibleLength ||\n            this._scrollMetrics.offset !== scrollMetrics.offset;\n\n          if (metricsChanged) {\n            this._scrollMetrics.visibleLength = scrollMetrics.visibleLength;\n            this._scrollMetrics.offset = scrollMetrics.offset;\n\n            // If metrics of the scrollView changed, then we triggered remeasure for child list\n            // to ensure VirtualizedList has the right information.\n            this._nestedChildLists.forEach(childList => {\n              childList.measureLayoutRelativeToContainingList();\n            });\n          }\n        },\n        error => {\n          console.warn(\n            \"VirtualizedList: Encountered an error while measuring a list's\" +\n              ' offset from its containing VirtualizedList.',\n          );\n        },\n      );\n    } catch (error) {\n      console.warn(\n        'measureLayoutRelativeToContainingList threw an error',\n        error.stack,\n      );\n    }\n  }\n\n  _onLayout = (e: LayoutEvent) => {\n    if (this._isNestedWithSameOrientation()) {\n      // Need to adjust our scroll metrics to be relative to our containing\n      // VirtualizedList before we can make claims about list item viewability\n      this.measureLayoutRelativeToContainingList();\n    } else {\n      this._scrollMetrics.visibleLength = this._selectLength(\n        e.nativeEvent.layout,\n      );\n    }\n    this.props.onLayout && this.props.onLayout(e);\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  _onLayoutEmpty = (e: LayoutEvent) => {\n    this.props.onLayout && this.props.onLayout(e);\n  };\n\n  _getFooterCellKey(): string {\n    return this._getCellKey() + '-footer';\n  }\n\n  _onLayoutFooter = (e: LayoutEvent) => {\n    this._triggerRemeasureForChildListsInCell(this._getFooterCellKey());\n    this._footerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  _onLayoutHeader = (e: LayoutEvent) => {\n    this._headerLength = this._selectLength(e.nativeEvent.layout);\n  };\n\n  // $FlowFixMe[missing-local-annot]\n  _renderDebugOverlay() {\n    const normalize =\n      this._scrollMetrics.visibleLength /\n      (this._listMetrics.getContentLength() || 1);\n    const framesInLayout = [];\n    const itemCount = this.props.getItemCount(this.props.data);\n    for (let ii = 0; ii < itemCount; ii++) {\n      const frame = this._listMetrics.getCellMetricsApprox(ii, this.props);\n      if (frame.isMounted) {\n        framesInLayout.push(frame);\n      }\n    }\n    const windowTop = this._listMetrics.getCellMetricsApprox(\n      this.state.cellsAroundViewport.first,\n      this.props,\n    ).offset;\n    const frameLast = this._listMetrics.getCellMetricsApprox(\n      this.state.cellsAroundViewport.last,\n      this.props,\n    );\n    const windowLen = frameLast.offset + frameLast.length - windowTop;\n    const visTop = this._scrollMetrics.offset;\n    const visLen = this._scrollMetrics.visibleLength;\n\n    return (\n      <View style={[styles.debugOverlayBase, styles.debugOverlay]}>\n        {framesInLayout.map((f, ii) => (\n          <View\n            key={'f' + ii}\n            style={[\n              styles.debugOverlayBase,\n              styles.debugOverlayFrame,\n              {\n                top: f.offset * normalize,\n                height: f.length * normalize,\n              },\n            ]}\n          />\n        ))}\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameLast,\n            {\n              top: windowTop * normalize,\n              height: windowLen * normalize,\n            },\n          ]}\n        />\n        <View\n          style={[\n            styles.debugOverlayBase,\n            styles.debugOverlayFrameVis,\n            {\n              top: visTop * normalize,\n              height: visLen * normalize,\n            },\n          ]}\n        />\n      </View>\n    );\n  }\n\n  _selectLength(\n    metrics: $ReadOnly<{\n      height: number,\n      width: number,\n      ...\n    }>,\n  ): number {\n    return !horizontalOrDefault(this.props.horizontal)\n      ? metrics.height\n      : metrics.width;\n  }\n\n  _selectOffset({x, y}: $ReadOnly<{x: number, y: number, ...}>): number {\n    return this._orientation().horizontal ? x : y;\n  }\n\n  _orientation(): ListOrientation {\n    return {\n      horizontal: horizontalOrDefault(this.props.horizontal),\n      rtl: I18nManager.isRTL,\n    };\n  }\n\n  _maybeCallOnEdgeReached() {\n    const {\n      data,\n      getItemCount,\n      onStartReached,\n      onStartReachedThreshold,\n      onEndReached,\n      onEndReachedThreshold,\n    } = this.props;\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the edge reached callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n\n    const {visibleLength, offset} = this._scrollMetrics;\n    let distanceFromStart = offset;\n    let distanceFromEnd =\n      this._listMetrics.getContentLength() - visibleLength - offset;\n\n    // Especially when oERT is zero it's necessary to 'floor' very small distance values to be 0\n    // since debouncing causes us to not fire this event for every single \"pixel\" we scroll and can thus\n    // be at the edge of the list with a distance approximating 0 but not quite there.\n    if (distanceFromStart < ON_EDGE_REACHED_EPSILON) {\n      distanceFromStart = 0;\n    }\n    if (distanceFromEnd < ON_EDGE_REACHED_EPSILON) {\n      distanceFromEnd = 0;\n    }\n\n    // TODO: T121172172 Look into why we're \"defaulting\" to a threshold of 2px\n    // when oERT is not present (different from 2 viewports used elsewhere)\n    const DEFAULT_THRESHOLD_PX = 2;\n\n    const startThreshold =\n      onStartReachedThreshold != null\n        ? onStartReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const endThreshold =\n      onEndReachedThreshold != null\n        ? onEndReachedThreshold * visibleLength\n        : DEFAULT_THRESHOLD_PX;\n    const isWithinStartThreshold = distanceFromStart <= startThreshold;\n    const isWithinEndThreshold = distanceFromEnd <= endThreshold;\n\n    // First check if the user just scrolled within the end threshold\n    // and call onEndReached only once for a given content length,\n    // and only if onStartReached is not being executed\n    if (\n      onEndReached &&\n      this.state.cellsAroundViewport.last === getItemCount(data) - 1 &&\n      isWithinEndThreshold &&\n      this._listMetrics.getContentLength() !== this._sentEndForContentLength\n    ) {\n      this._sentEndForContentLength = this._listMetrics.getContentLength();\n      onEndReached({distanceFromEnd});\n    }\n\n    // Next check if the user just scrolled within the start threshold\n    // and call onStartReached only once for a given content length,\n    // and only if onEndReached is not being executed\n    if (\n      onStartReached != null &&\n      this.state.cellsAroundViewport.first === 0 &&\n      isWithinStartThreshold &&\n      this._listMetrics.getContentLength() !== this._sentStartForContentLength\n    ) {\n      this._sentStartForContentLength = this._listMetrics.getContentLength();\n      onStartReached({distanceFromStart});\n    }\n\n    // If the user scrolls away from the start or end and back again,\n    // cause onStartReached or onEndReached to be triggered again\n    if (!isWithinStartThreshold) {\n      this._sentStartForContentLength = 0;\n    }\n    if (!isWithinEndThreshold) {\n      this._sentEndForContentLength = 0;\n    }\n  }\n\n  _onContentSizeChange = (width: number, height: number) => {\n    this._listMetrics.notifyListContentLayout({\n      layout: {width, height},\n      orientation: this._orientation(),\n    });\n\n    this._maybeScrollToInitialScrollIndex(width, height);\n\n    if (this.props.onContentSizeChange) {\n      this.props.onContentSizeChange(width, height);\n    }\n    this._scheduleCellsToRenderUpdate();\n    this._maybeCallOnEdgeReached();\n  };\n\n  /**\n   * Scroll to a specified `initialScrollIndex` prop after the ScrollView\n   * content has been laid out, if it is still valid. Only a single scroll is\n   * triggered throughout the lifetime of the list.\n   */\n  _maybeScrollToInitialScrollIndex(\n    contentWidth: number,\n    contentHeight: number,\n  ) {\n    if (\n      contentWidth > 0 &&\n      contentHeight > 0 &&\n      this.props.initialScrollIndex != null &&\n      this.props.initialScrollIndex > 0 &&\n      !this._hasTriggeredInitialScrollToIndex\n    ) {\n      if (this.props.contentOffset == null) {\n        if (\n          this.props.initialScrollIndex <\n          this.props.getItemCount(this.props.data)\n        ) {\n          this.scrollToIndex({\n            animated: false,\n            index: nullthrows(this.props.initialScrollIndex),\n          });\n        } else {\n          this.scrollToEnd({animated: false});\n        }\n      }\n      this._hasTriggeredInitialScrollToIndex = true;\n    }\n  }\n\n  /* Translates metrics from a scroll event in a parent VirtualizedList into\n   * coordinates relative to the child list.\n   */\n  _convertParentScrollMetrics = (metrics: {\n    visibleLength: number,\n    offset: number,\n    ...\n  }): $FlowFixMe => {\n    // Offset of the top of the nested list relative to the top of its parent's viewport\n    const offset = metrics.offset - this._offsetFromParentVirtualizedList;\n    // Child's visible length is the same as its parent's\n    const visibleLength = metrics.visibleLength;\n    const dOffset = offset - this._scrollMetrics.offset;\n    const contentLength = this._listMetrics.getContentLength();\n\n    return {\n      visibleLength,\n      contentLength,\n      offset,\n      dOffset,\n    };\n  };\n\n  _onScroll = (e: Object) => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScroll(e);\n    });\n    if (this.props.onScroll) {\n      this.props.onScroll(e);\n    }\n    const timestamp = e.timeStamp;\n    let visibleLength = this._selectLength(e.nativeEvent.layoutMeasurement);\n    let contentLength = this._selectLength(e.nativeEvent.contentSize);\n    let offset = this._offsetFromScrollEvent(e);\n    let dOffset = offset - this._scrollMetrics.offset;\n\n    if (this._isNestedWithSameOrientation()) {\n      if (this._listMetrics.getContentLength() === 0) {\n        // Ignore scroll events until onLayout has been called and we\n        // know our offset from our offset from our parent\n        return;\n      }\n      ({visibleLength, contentLength, offset, dOffset} =\n        this._convertParentScrollMetrics({\n          visibleLength,\n          offset,\n        }));\n    }\n\n    const dt = this._scrollMetrics.timestamp\n      ? Math.max(1, timestamp - this._scrollMetrics.timestamp)\n      : 1;\n    const velocity = dOffset / dt;\n\n    if (\n      dt > 500 &&\n      this._scrollMetrics.dt > 500 &&\n      contentLength > 5 * visibleLength &&\n      !this._hasWarned.perf\n    ) {\n      infoLog(\n        'VirtualizedList: You have a large list that is slow to update - make sure your ' +\n          'renderItem function renders components that follow React performance best practices ' +\n          'like PureComponent, shouldComponentUpdate, etc.',\n        {dt, prevDt: this._scrollMetrics.dt, contentLength},\n      );\n      this._hasWarned.perf = true;\n    }\n\n    // For invalid negative values (w/ RTL), set this to 1.\n    const zoomScale = e.nativeEvent.zoomScale < 0 ? 1 : e.nativeEvent.zoomScale;\n    this._scrollMetrics = {\n      dt,\n      dOffset,\n      offset,\n      timestamp,\n      velocity,\n      visibleLength,\n      zoomScale,\n    };\n    if (this.state.pendingScrollUpdateCount > 0) {\n      this.setState(state => ({\n        pendingScrollUpdateCount: state.pendingScrollUpdateCount - 1,\n      }));\n    }\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n    if (!this.props) {\n      return;\n    }\n    this._maybeCallOnEdgeReached();\n    if (velocity !== 0) {\n      this._fillRateHelper.activate();\n    }\n    this._computeBlankness();\n    this._scheduleCellsToRenderUpdate();\n  };\n\n  _offsetFromScrollEvent(e: ScrollEvent): number {\n    const {contentOffset, contentSize, layoutMeasurement} = e.nativeEvent;\n    const {horizontal, rtl} = this._orientation();\n    if (horizontal && rtl) {\n      return (\n        this._selectLength(contentSize) -\n        (this._selectOffset(contentOffset) +\n          this._selectLength(layoutMeasurement))\n      );\n    } else {\n      return this._selectOffset(contentOffset);\n    }\n  }\n\n  _scheduleCellsToRenderUpdate() {\n    // Only trigger high-priority updates if we've actually rendered cells,\n    // and with that size estimate, accurately compute how many cells we should render.\n    // Otherwise, it would just render as many cells as it can (of zero dimension),\n    // each time through attempting to render more (limited by maxToRenderPerBatch),\n    // starving the renderer from actually laying out the objects and computing _averageCellLength.\n    // If this is triggered in an `componentDidUpdate` followed by a hiPri cellToRenderUpdate\n    // We shouldn't do another hipri cellToRenderUpdate\n    if (\n      (this._listMetrics.getAverageCellLength() > 0 ||\n        this.props.getItemLayout != null) &&\n      this._shouldRenderWithPriority() &&\n      !this._hiPriInProgress\n    ) {\n      this._hiPriInProgress = true;\n      // Don't worry about interactions when scrolling quickly; focus on filling content as fast\n      // as possible.\n      this._updateCellsToRenderBatcher.dispose({abort: true});\n      this._updateCellsToRender();\n      return;\n    } else {\n      this._updateCellsToRenderBatcher.schedule();\n    }\n  }\n\n  _shouldRenderWithPriority(): boolean {\n    const {first, last} = this.state.cellsAroundViewport;\n    const {offset, visibleLength, velocity} = this._scrollMetrics;\n    const itemCount = this.props.getItemCount(this.props.data);\n    let hiPri = false;\n    const onStartReachedThreshold = onStartReachedThresholdOrDefault(\n      this.props.onStartReachedThreshold,\n    );\n    const onEndReachedThreshold = onEndReachedThresholdOrDefault(\n      this.props.onEndReachedThreshold,\n    );\n    // Mark as high priority if we're close to the start of the first item\n    // But only if there are items before the first rendered item\n    if (first > 0) {\n      const distTop =\n        offset -\n        this._listMetrics.getCellMetricsApprox(first, this.props).offset;\n      hiPri =\n        distTop < 0 ||\n        (velocity < -2 &&\n          distTop <\n            getScrollingThreshold(onStartReachedThreshold, visibleLength));\n    }\n    // Mark as high priority if we're close to the end of the last item\n    // But only if there are items after the last rendered item\n    if (!hiPri && last >= 0 && last < itemCount - 1) {\n      const distBottom =\n        this._listMetrics.getCellMetricsApprox(last, this.props).offset -\n        (offset + visibleLength);\n      hiPri =\n        distBottom < 0 ||\n        (velocity > 2 &&\n          distBottom <\n            getScrollingThreshold(onEndReachedThreshold, visibleLength));\n    }\n\n    return hiPri;\n  }\n\n  _onScrollBeginDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollBeginDrag(e);\n    });\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.recordInteraction();\n    });\n    this._hasInteracted = true;\n    this.props.onScrollBeginDrag && this.props.onScrollBeginDrag(e);\n  };\n\n  _onScrollEndDrag = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onScrollEndDrag(e);\n    });\n    const {velocity} = e.nativeEvent;\n    if (velocity) {\n      this._scrollMetrics.velocity = this._selectOffset(velocity);\n    }\n    this._computeBlankness();\n    this.props.onScrollEndDrag && this.props.onScrollEndDrag(e);\n  };\n\n  _onMomentumScrollBegin = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollBegin(e);\n    });\n    this.props.onMomentumScrollBegin && this.props.onMomentumScrollBegin(e);\n  };\n\n  _onMomentumScrollEnd = (e: ScrollEvent): void => {\n    this._nestedChildLists.forEach(childList => {\n      childList._onMomentumScrollEnd(e);\n    });\n    this._scrollMetrics.velocity = 0;\n    this._computeBlankness();\n    this.props.onMomentumScrollEnd && this.props.onMomentumScrollEnd(e);\n  };\n\n  _updateCellsToRender = () => {\n    this._updateViewableItems(this.props, this.state.cellsAroundViewport);\n\n    this.setState((state, props) => {\n      const cellsAroundViewport = this._adjustCellsAroundViewport(\n        props,\n        state.cellsAroundViewport,\n        state.pendingScrollUpdateCount,\n      );\n      const renderMask = VirtualizedList._createRenderMask(\n        props,\n        cellsAroundViewport,\n        this._getNonViewportRenderRegions(props),\n      );\n\n      if (\n        cellsAroundViewport.first === state.cellsAroundViewport.first &&\n        cellsAroundViewport.last === state.cellsAroundViewport.last &&\n        renderMask.equals(state.renderMask)\n      ) {\n        return null;\n      }\n\n      return {cellsAroundViewport, renderMask};\n    });\n  };\n\n  _createViewToken = (\n    index: number,\n    isViewable: boolean,\n    props: CellMetricProps,\n    // $FlowFixMe[missing-local-annot]\n  ) => {\n    const {data, getItem} = props;\n    const item = getItem(data, index);\n    return {\n      index,\n      item,\n      key: VirtualizedList._keyExtractor(item, index, props),\n      isViewable,\n    };\n  };\n\n  __getListMetrics(): ListMetricsAggregator {\n    return this._listMetrics;\n  }\n\n  _getNonViewportRenderRegions = (\n    props: CellMetricProps,\n  ): $ReadOnlyArray<{\n    first: number,\n    last: number,\n  }> => {\n    // Keep a viewport's worth of content around the last focused cell to allow\n    // random navigation around it without any blanking. E.g. tabbing from one\n    // focused item out of viewport to another.\n    if (\n      !(this._lastFocusedCellKey && this._cellRefs[this._lastFocusedCellKey])\n    ) {\n      return [];\n    }\n\n    const lastFocusedCellRenderer = this._cellRefs[this._lastFocusedCellKey];\n    const focusedCellIndex = lastFocusedCellRenderer.props.index;\n    const itemCount = props.getItemCount(props.data);\n\n    // The last cell we rendered may be at a new index. Bail if we don't know\n    // where it is.\n    if (\n      focusedCellIndex >= itemCount ||\n      VirtualizedList._getItemKey(props, focusedCellIndex) !==\n        this._lastFocusedCellKey\n    ) {\n      return [];\n    }\n\n    let first = focusedCellIndex;\n    let heightOfCellsBeforeFocused = 0;\n    for (\n      let i = first - 1;\n      i >= 0 && heightOfCellsBeforeFocused < this._scrollMetrics.visibleLength;\n      i--\n    ) {\n      first--;\n      heightOfCellsBeforeFocused += this._listMetrics.getCellMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    let last = focusedCellIndex;\n    let heightOfCellsAfterFocused = 0;\n    for (\n      let i = last + 1;\n      i < itemCount &&\n      heightOfCellsAfterFocused < this._scrollMetrics.visibleLength;\n      i++\n    ) {\n      last++;\n      heightOfCellsAfterFocused += this._listMetrics.getCellMetricsApprox(\n        i,\n        props,\n      ).length;\n    }\n\n    return [{first, last}];\n  };\n\n  _updateViewableItems(\n    props: CellMetricProps,\n    cellsAroundViewport: {first: number, last: number},\n  ) {\n    // If we have any pending scroll updates it means that the scroll metrics\n    // are out of date and we should not call any of the visibility callbacks.\n    if (this.state.pendingScrollUpdateCount > 0) {\n      return;\n    }\n    this._viewabilityTuples.forEach(tuple => {\n      tuple.viewabilityHelper.onUpdate(\n        props,\n        this._scrollMetrics.offset,\n        this._scrollMetrics.visibleLength,\n        this._listMetrics,\n        this._createViewToken,\n        tuple.onViewableItemsChanged,\n        cellsAroundViewport,\n      );\n    });\n  }\n}\n\nconst styles = StyleSheet.create({\n  verticallyInverted:\n    Platform.OS === 'android'\n      ? {transform: [{scale: -1}]}\n      : {transform: [{scaleY: -1}]},\n  horizontallyInverted: {\n    transform: [{scaleX: -1}],\n  },\n  debug: {\n    flex: 1,\n  },\n  debugOverlayBase: {\n    position: 'absolute',\n    top: 0,\n    right: 0,\n  },\n  debugOverlay: {\n    bottom: 0,\n    width: 20,\n    borderColor: 'blue',\n    borderWidth: 1,\n  },\n  debugOverlayFrame: {\n    left: 0,\n    backgroundColor: 'orange',\n  },\n  debugOverlayFrameLast: {\n    left: 0,\n    borderColor: 'green',\n    borderWidth: 2,\n  },\n  debugOverlayFrameVis: {\n    left: 0,\n    borderColor: 'red',\n    borderWidth: 2,\n  },\n});\n\nmodule.exports = VirtualizedList;\n"],"mappings":"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","ignoreList":[]}