{"file":"/Users/antran/Desktop/CurrencyConverterApp/src/__tests__/ExchangeRates.test.tsx","mappings":";;;;;AAMA,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE,CAAC,CAAC;IACzC,UAAU,EAAE,IAAI;IAChB,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;QACtB,KAAK,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,GAAG,EAAE,IAAI,EAAE;QAC5B,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,IAAI;QACX,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;KACnB,CAAC,CAAC;CACJ,CAAC,CAAC,CAAC;AAdJ,uCAAuC;AACvC,kDAA0B;AAC1B,gEAAgE;AAChE,gFAAwD;AACxD,wDAAsD;AAYtD,IAAI,CAAC,wBAAwB,EAAE,KAAK,IAAI,EAAE;IACxC,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAM,EAC1B,8BAAC,0BAAY;QACX,8BAAC,uBAAa,IAAC,YAAY,EAAC,KAAK,GAAG,CACvB,CAChB,CAAC;IACF,MAAM,IAAA,sBAAO,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;IAC3D,MAAM,IAAA,sBAAO,EAAC,GAAG,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,UAAU,EAAE,CAAC,CAAC;AAC9D,CAAC,CAAC,CAAC;AAEH,IAAI,CAAC,iCAAiC,EAAE,KAAK,IAAI,EAAE;IACjD,IAAI,CAAC,IAAI,CAAC,wBAAwB,EAAE,GAAG,EAAE,CAAC,CAAC;QACzC,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,IAAI,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,CAAC;YACtB,KAAK,EAAE,EAAE;YACT,OAAO,EAAE,KAAK;YACd,KAAK,EAAE,gCAAgC;YACvC,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE;SACnB,CAAC,CAAC;KACJ,CAAC,CAAC,CAAC;IAEJ,MAAM,EAAE,SAAS,EAAE,GAAG,IAAA,qBAAM,EAC1B,8BAAC,0BAAY;QACX,8BAAC,uBAAa,IAAC,YAAY,EAAC,KAAK,GAAG,CACvB,CAChB,CAAC;IAEF,MAAM,IAAA,sBAAO,EAAC,GAAG,EAAE,CACjB,MAAM,CAAC,SAAS,CAAC,gCAAgC,CAAC,CAAC,CAAC,UAAU,EAAE,CACjE,CAAC;AACJ,CAAC,CAAC,CAAC","names":[],"sources":["/Users/antran/Desktop/CurrencyConverterApp/src/__tests__/ExchangeRates.test.tsx"],"sourcesContent":["// src/__tests__/ExchangeRates.test.tsx\nimport React from 'react';\nimport { render, waitFor } from '@testing-library/react-native';\nimport ExchangeRates from '../components/ExchangeRates';\nimport { RateProvider } from '../context/RateContext';\n\njest.mock('../hooks/useFetchRates', () => ({\n  __esModule: true,\n  default: jest.fn(() => ({\n    rates: { USD: 1, EUR: 0.85 },\n    loading: false,\n    error: null,\n    refetch: jest.fn(),\n  })),\n}));\n\ntest('renders exchange rates', async () => {\n  const { getByText } = render(\n    <RateProvider>\n      <ExchangeRates baseCurrency=\"USD\" />\n    </RateProvider>,\n  );\n  await waitFor(() => expect(getByText('EUR')).toBeTruthy());\n  await waitFor(() => expect(getByText('0.85')).toBeTruthy());\n});\n\ntest('displays error message on error', async () => {\n  jest.mock('../hooks/useFetchRates', () => ({\n    __esModule: true,\n    default: jest.fn(() => ({\n      rates: {},\n      loading: false,\n      error: 'Failed to fetch exchange rates',\n      refetch: jest.fn(),\n    })),\n  }));\n\n  const { getByText } = render(\n    <RateProvider>\n      <ExchangeRates baseCurrency=\"USD\" />\n    </RateProvider>,\n  );\n\n  await waitFor(() =>\n    expect(getByText('Failed to fetch exchange rates')).toBeTruthy(),\n  );\n});\n"],"version":3}