cc4e687ddfbfd6fbe8206f42396b6079
"use strict";

var _interopRequireDefault2 = require("@babel/runtime/helpers/interopRequireDefault");
var _slicedToArray2 = _interopRequireDefault2(require("@babel/runtime/helpers/slicedToArray"));
var _objectWithoutProperties2 = _interopRequireDefault2(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["visible", "action", "icon", "onIconPress", "iconAccessibilityLabel", "duration", "onDismiss", "children", "elevation", "wrapperStyle", "style", "theme", "maxFontSizeMultiplier", "rippleColor", "testID"],
  _excluded2 = ["style", "label", "onPress", "rippleColor"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _reactNativeSafeAreaContext = require("react-native-safe-area-context");
var _useLatestCallback = _interopRequireDefault(require("use-latest-callback"));
var _Button = _interopRequireDefault(require("./Button/Button"));
var _IconButton = _interopRequireDefault(require("./IconButton/IconButton"));
var _MaterialCommunityIcon = _interopRequireDefault(require("./MaterialCommunityIcon"));
var _Surface = _interopRequireDefault(require("./Surface"));
var _Text = _interopRequireDefault(require("./Typography/Text"));
var _theming = require("../core/theming");
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var DURATION_SHORT = 4000;
var DURATION_MEDIUM = 7000;
var DURATION_LONG = 10000;
var Snackbar = function Snackbar(_ref) {
  var visible = _ref.visible,
    action = _ref.action,
    icon = _ref.icon,
    onIconPress = _ref.onIconPress,
    _ref$iconAccessibilit = _ref.iconAccessibilityLabel,
    iconAccessibilityLabel = _ref$iconAccessibilit === void 0 ? 'Close icon' : _ref$iconAccessibilit,
    _ref$duration = _ref.duration,
    duration = _ref$duration === void 0 ? DURATION_MEDIUM : _ref$duration,
    onDismiss = _ref.onDismiss,
    children = _ref.children,
    _ref$elevation = _ref.elevation,
    elevation = _ref$elevation === void 0 ? 2 : _ref$elevation,
    wrapperStyle = _ref.wrapperStyle,
    style = _ref.style,
    themeOverrides = _ref.theme,
    maxFontSizeMultiplier = _ref.maxFontSizeMultiplier,
    rippleColor = _ref.rippleColor,
    testID = _ref.testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var _ref5 = (0, _reactNativeSafeAreaContext.useSafeAreaInsets)(),
    bottom = _ref5.bottom,
    right = _ref5.right,
    left = _ref5.left;
  var _React$useRef = React.useRef(new _reactNative.Animated.Value(0.0)),
    opacity = _React$useRef.current;
  var hideTimeout = React.useRef(undefined);
  var _React$useState = React.useState(!visible),
    _React$useState2 = (0, _slicedToArray2.default)(_React$useState, 2),
    hidden = _React$useState2[0],
    setHidden = _React$useState2[1];
  var scale = theme.animation.scale;
  var handleOnVisible = (0, _useLatestCallback.default)(function () {
    if (hideTimeout.current) clearTimeout(hideTimeout.current);
    setHidden(false);
    _reactNative.Animated.timing(opacity, {
      toValue: 1,
      duration: 200 * scale,
      easing: _reactNative.Easing.out(_reactNative.Easing.ease),
      useNativeDriver: true
    }).start(function (_ref2) {
      var finished = _ref2.finished;
      if (finished) {
        var isInfinity = duration === Number.POSITIVE_INFINITY || duration === Number.NEGATIVE_INFINITY;
        if (!isInfinity) {
          hideTimeout.current = setTimeout(onDismiss, duration);
        }
      }
    });
  });
  var handleOnHidden = (0, _useLatestCallback.default)(function () {
    if (hideTimeout.current) {
      clearTimeout(hideTimeout.current);
    }
    _reactNative.Animated.timing(opacity, {
      toValue: 0,
      duration: 100 * scale,
      useNativeDriver: true
    }).start(function (_ref3) {
      var finished = _ref3.finished;
      if (finished) {
        setHidden(true);
      }
    });
  });
  React.useEffect(function () {
    return function () {
      if (hideTimeout.current) clearTimeout(hideTimeout.current);
    };
  }, []);
  React.useLayoutEffect(function () {
    if (visible) {
      handleOnVisible();
    } else {
      handleOnHidden();
    }
  }, [visible, handleOnVisible, handleOnHidden]);
  var colors = theme.colors,
    roundness = theme.roundness,
    isV3 = theme.isV3;
  if (hidden) {
    return null;
  }
  var _ref6 = action || {},
    actionStyle = _ref6.style,
    actionLabel = _ref6.label,
    onPressAction = _ref6.onPress,
    actionRippleColor = _ref6.rippleColor,
    actionProps = (0, _objectWithoutProperties2.default)(_ref6, _excluded2);
  var buttonTextColor = isV3 ? colors.inversePrimary : colors.accent;
  var textColor = isV3 ? colors.inverseOnSurface : colors === null || colors === void 0 ? void 0 : colors.surface;
  var backgroundColor = isV3 ? colors.inverseSurface : colors === null || colors === void 0 ? void 0 : colors.onSurface;
  var isIconButton = isV3 && onIconPress;
  var marginLeft = action ? -12 : -16;
  var wrapperPaddings = {
    paddingBottom: bottom,
    paddingHorizontal: Math.max(left, right)
  };
  var renderChildrenWithWrapper = function renderChildrenWithWrapper() {
    if (typeof children === 'string') {
      return React.createElement(_Text.default, {
        variant: "bodyMedium",
        style: [styles.content, {
          color: textColor
        }],
        maxFontSizeMultiplier: maxFontSizeMultiplier
      }, children);
    }
    return React.createElement(_reactNative.View, {
      style: styles.content
    }, React.createElement(_reactNative.View, null, children));
  };
  return React.createElement(_reactNative.View, {
    pointerEvents: "box-none",
    style: [styles.wrapper, wrapperPaddings, wrapperStyle]
  }, React.createElement(_Surface.default, _extends({
    pointerEvents: "box-none",
    accessibilityLiveRegion: "polite",
    theme: theme,
    style: [!isV3 && styles.elevation, styles.container, {
      backgroundColor: backgroundColor,
      borderRadius: roundness,
      opacity: opacity,
      transform: [{
        scale: visible ? opacity.interpolate({
          inputRange: [0, 1],
          outputRange: [0.9, 1]
        }) : 1
      }]
    }, style],
    testID: testID
  }, isV3 && {
    elevation: elevation
  }, rest), renderChildrenWithWrapper(), (action || isIconButton) && React.createElement(_reactNative.View, {
    style: [styles.actionsContainer, {
      marginLeft: marginLeft
    }]
  }, action ? React.createElement(_Button.default, _extends({
    onPress: function onPress(event) {
      onPressAction === null || onPressAction === void 0 ? void 0 : onPressAction(event);
      onDismiss();
    },
    style: [styles.button, actionStyle],
    textColor: buttonTextColor,
    compact: !isV3,
    mode: "text",
    theme: theme,
    rippleColor: actionRippleColor
  }, actionProps), actionLabel) : null, isIconButton ? React.createElement(_IconButton.default, {
    accessibilityRole: "button",
    borderless: true,
    onPress: onIconPress,
    iconColor: theme.colors.inverseOnSurface,
    rippleColor: rippleColor,
    theme: theme,
    icon: icon || function (_ref4) {
      var size = _ref4.size,
        color = _ref4.color;
      return React.createElement(_MaterialCommunityIcon.default, {
        name: "close",
        color: color,
        size: size,
        direction: _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr'
      });
    },
    accessibilityLabel: iconAccessibilityLabel,
    style: styles.icon,
    testID: `${testID}-icon`
  }) : null)));
};
Snackbar.DURATION_SHORT = DURATION_SHORT;
Snackbar.DURATION_MEDIUM = DURATION_MEDIUM;
Snackbar.DURATION_LONG = DURATION_LONG;
var styles = _reactNative.StyleSheet.create({
  wrapper: {
    position: 'absolute',
    bottom: 0,
    width: '100%'
  },
  container: {
    flexDirection: 'row',
    justifyContent: 'space-between',
    margin: 8,
    borderRadius: 4,
    minHeight: 48
  },
  content: {
    marginHorizontal: 16,
    marginVertical: 14,
    flex: 1
  },
  actionsContainer: {
    flexDirection: 'row',
    justifyContent: 'flex-end',
    alignItems: 'center',
    minHeight: 48
  },
  button: {
    marginRight: 8,
    marginLeft: 4
  },
  elevation: {
    elevation: 6
  },
  icon: {
    width: 40,
    height: 40,
    margin: 0
  }
});
var _default = Snackbar;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,