5019db796aa77e346c328459351f23ab
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
var _objectWithoutProperties2 = _interopRequireDefault(require("@babel/runtime/helpers/objectWithoutProperties"));
var _excluded = ["source", "color", "size", "theme", "testID"];
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.isValidIcon = exports.isEqualIcon = exports.default = void 0;
var React = _interopRequireWildcard(require("react"));
var _reactNative = require("react-native");
var _MaterialCommunityIcon = require("./MaterialCommunityIcon");
var _settings = require("../core/settings");
var _theming = require("../core/theming");
function _getRequireWildcardCache(nodeInterop) {
  if (typeof WeakMap !== "function") return null;
  var cacheBabelInterop = new WeakMap();
  var cacheNodeInterop = new WeakMap();
  return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) {
    return nodeInterop ? cacheNodeInterop : cacheBabelInterop;
  })(nodeInterop);
}
function _interopRequireWildcard(obj, nodeInterop) {
  if (!nodeInterop && obj && obj.__esModule) {
    return obj;
  }
  if (obj === null || typeof obj !== "object" && typeof obj !== "function") {
    return {
      default: obj
    };
  }
  var cache = _getRequireWildcardCache(nodeInterop);
  if (cache && cache.has(obj)) {
    return cache.get(obj);
  }
  var newObj = {};
  var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor;
  for (var key in obj) {
    if (key !== "default" && Object.prototype.hasOwnProperty.call(obj, key)) {
      var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null;
      if (desc && (desc.get || desc.set)) {
        Object.defineProperty(newObj, key, desc);
      } else {
        newObj[key] = obj[key];
      }
    }
  }
  newObj.default = obj;
  if (cache) {
    cache.set(obj, newObj);
  }
  return newObj;
}
function _extends() {
  _extends = Object.assign ? Object.assign.bind() : function (target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i];
      for (var key in source) {
        if (Object.prototype.hasOwnProperty.call(source, key)) {
          target[key] = source[key];
        }
      }
    }
    return target;
  };
  return _extends.apply(this, arguments);
}
var isImageSource = function isImageSource(source) {
  return typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string' || typeof source === 'number' || _reactNative.Platform.OS === 'web' && typeof source === 'string' && (source.startsWith('data:image') || /\.(bmp|jpg|jpeg|png|gif|svg)$/.test(source));
};
var getIconId = function getIconId(source) {
  if (typeof source === 'object' && source !== null && Object.prototype.hasOwnProperty.call(source, 'uri') && typeof source.uri === 'string') {
    return source.uri;
  }
  return source;
};
var isValidIcon = function isValidIcon(source) {
  return typeof source === 'string' || typeof source === 'function' || isImageSource(source);
};
exports.isValidIcon = isValidIcon;
var isEqualIcon = function isEqualIcon(a, b) {
  return a === b || getIconId(a) === getIconId(b);
};
exports.isEqualIcon = isEqualIcon;
var Icon = function Icon(_ref) {
  var source = _ref.source,
    color = _ref.color,
    size = _ref.size,
    themeOverrides = _ref.theme,
    testID = _ref.testID,
    rest = (0, _objectWithoutProperties2.default)(_ref, _excluded);
  var theme = (0, _theming.useInternalTheme)(themeOverrides);
  var direction = typeof source === 'object' && source.direction && source.source ? source.direction === 'auto' ? _reactNative.I18nManager.getConstants().isRTL ? 'rtl' : 'ltr' : source.direction : null;
  var s = typeof source === 'object' && source.direction && source.source ? source.source : source;
  var iconColor = color || (theme.isV3 ? theme.colors.onSurface : theme.colors.text);
  if (isImageSource(s)) {
    return React.createElement(_reactNative.Image, _extends({}, rest, {
      testID: testID,
      source: s,
      style: [{
        transform: [{
          scaleX: direction === 'rtl' ? -1 : 1
        }]
      }, {
        width: size,
        height: size,
        tintColor: color,
        resizeMode: `contain`
      }]
    }, _MaterialCommunityIcon.accessibilityProps, {
      accessibilityIgnoresInvertColors: true
    }));
  } else if (typeof s === 'string') {
    return React.createElement(_settings.Consumer, null, function (_ref2) {
      var icon = _ref2.icon;
      return icon === null || icon === void 0 ? void 0 : icon({
        name: s,
        color: iconColor,
        size: size,
        direction: direction,
        testID: testID
      });
    });
  } else if (typeof s === 'function') {
    return s({
      color: iconColor,
      size: size,
      direction: direction,
      testID: testID
    });
  }
  return null;
};
var _default = Icon;
exports.default = _default;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJSZWFjdCIsIl9pbnRlcm9wUmVxdWlyZVdpbGRjYXJkIiwicmVxdWlyZSIsIl9yZWFjdE5hdGl2ZSIsIl9NYXRlcmlhbENvbW11bml0eUljb24iLCJfc2V0dGluZ3MiLCJfdGhlbWluZyIsIl9nZXRSZXF1aXJlV2lsZGNhcmRDYWNoZSIsIm5vZGVJbnRlcm9wIiwiV2Vha01hcCIsImNhY2hlQmFiZWxJbnRlcm9wIiwiY2FjaGVOb2RlSW50ZXJvcCIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiY2FjaGUiLCJoYXMiLCJnZXQiLCJuZXdPYmoiLCJoYXNQcm9wZXJ0eURlc2NyaXB0b3IiLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsImtleSIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsImRlc2MiLCJzZXQiLCJfZXh0ZW5kcyIsImFzc2lnbiIsImJpbmQiLCJ0YXJnZXQiLCJpIiwiYXJndW1lbnRzIiwibGVuZ3RoIiwic291cmNlIiwiYXBwbHkiLCJpc0ltYWdlU291cmNlIiwidXJpIiwiUGxhdGZvcm0iLCJPUyIsInN0YXJ0c1dpdGgiLCJ0ZXN0IiwiZ2V0SWNvbklkIiwiaXNWYWxpZEljb24iLCJleHBvcnRzIiwiaXNFcXVhbEljb24iLCJhIiwiYiIsIkljb24iLCJfcmVmIiwiY29sb3IiLCJzaXplIiwidGhlbWVPdmVycmlkZXMiLCJ0aGVtZSIsInRlc3RJRCIsInJlc3QiLCJfb2JqZWN0V2l0aG91dFByb3BlcnRpZXMyIiwiX2V4Y2x1ZGVkIiwidXNlSW50ZXJuYWxUaGVtZSIsImRpcmVjdGlvbiIsIkkxOG5NYW5hZ2VyIiwiZ2V0Q29uc3RhbnRzIiwiaXNSVEwiLCJzIiwiaWNvbkNvbG9yIiwiaXNWMyIsImNvbG9ycyIsIm9uU3VyZmFjZSIsInRleHQiLCJjcmVhdGVFbGVtZW50IiwiSW1hZ2UiLCJzdHlsZSIsInRyYW5zZm9ybSIsInNjYWxlWCIsIndpZHRoIiwiaGVpZ2h0IiwidGludENvbG9yIiwicmVzaXplTW9kZSIsImFjY2Vzc2liaWxpdHlQcm9wcyIsImFjY2Vzc2liaWxpdHlJZ25vcmVzSW52ZXJ0Q29sb3JzIiwiQ29uc3VtZXIiLCJfcmVmMiIsImljb24iLCJuYW1lIiwiX2RlZmF1bHQiXSwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvY29tcG9uZW50cy9JY29uLnRzeCJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQUEsSUFBQUEsS0FBQSxHQUFBQyx1QkFBQSxDQUFBQyxPQUFBO0FBQ0EsSUFBQUMsWUFBQSxHQUFBRCxPQUFBO0FBT0EsSUFBQUUsc0JBQUEsR0FBQUYsT0FBQTtBQUNBLElBQUFHLFNBQUEsR0FBQUgsT0FBQTtBQUNBLElBQUFJLFFBQUEsR0FBQUosT0FBQTtBQUFtRCxTQUFBSyx5QkFBQUMsV0FBQTtFQUFBLFdBQUFDLE9BQUE7RUFBQSxJQUFBQyxpQkFBQSxPQUFBRCxPQUFBO0VBQUEsSUFBQUUsZ0JBQUEsT0FBQUYsT0FBQTtFQUFBLFFBQUFGLHdCQUFBLFlBQUFBLHlCQUFBQyxXQUFBO0lBQUEsT0FBQUEsV0FBQSxHQUFBRyxnQkFBQSxHQUFBRCxpQkFBQTtFQUFBLEdBQUFGLFdBQUE7QUFBQTtBQUFBLFNBQUFQLHdCQUFBVyxHQUFBLEVBQUFKLFdBQUE7RUFBQSxLQUFBQSxXQUFBLElBQUFJLEdBQUEsSUFBQUEsR0FBQSxDQUFBQyxVQUFBO0lBQUEsT0FBQUQsR0FBQTtFQUFBO0VBQUEsSUFBQUEsR0FBQSxvQkFBQUEsR0FBQSx3QkFBQUEsR0FBQTtJQUFBO01BQUFFLE9BQUEsRUFBQUY7SUFBQTtFQUFBO0VBQUEsSUFBQUcsS0FBQSxHQUFBUix3QkFBQSxDQUFBQyxXQUFBO0VBQUEsSUFBQU8sS0FBQSxJQUFBQSxLQUFBLENBQUFDLEdBQUEsQ0FBQUosR0FBQTtJQUFBLE9BQUFHLEtBQUEsQ0FBQUUsR0FBQSxDQUFBTCxHQUFBO0VBQUE7RUFBQSxJQUFBTSxNQUFBO0VBQUEsSUFBQUMscUJBQUEs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QUssQ0FBQ1ksSUFBSSxHQUFHWixLQUFLLENBQUNhLE1BQU0sQ0FBQ0MsU0FBUyxHQUFHZCxLQUFLLENBQUNhLE1BQU0sQ0FBQ0UsSUFBSSxDQUFDO0VBRXBFLElBQUloQyxhQUFhLENBQUMyQixDQUFDLENBQUMsRUFBRTtJQUNwQixPQUNFakUsS0FBQSxDQUFBdUUsYUFBQSxDQUFDcEUsWUFBQSxDQUFBcUUsS0FBSyxFQUFBM0MsUUFBQSxLQUNBNEIsSUFBSTtNQUNSRCxNQUFNLEVBQUVBLE1BQU87TUFDZnBCLE1BQU0sRUFBRTZCLENBQUU7TUFDVlEsS0FBSyxFQUFFLENBQ0w7UUFDRUMsU0FBUyxFQUFFLENBQUM7VUFBRUMsTUFBTSxFQUFFZCxTQUFTLEtBQUssS0FBSyxHQUFHLENBQUMsQ0FBQyxHQUFHO1FBQUUsQ0FBQztNQUN0RCxDQUFDLEVBQ0Q7UUFDRWUsS0FBSyxFQUFFdkIsSUFBSTtRQUNYd0IsTUFBTSxFQUFFeEIsSUFBSTtRQUNaeUIsU0FBUyxFQUFFMUIsS0FBSztRQUNoQjJCLFVBQVUsRUFBRztNQUNmLENBQUM7SUFDRCxHQUNFM0Usc0JBQUEsQ0FBQTRFLGtCQUFrQjtNQUN0QkMsZ0NBQWdDO0lBQUEsRUFDakMsQ0FBQztFQUVOLENBQUMsTUFBTSxJQUFJLE9BQU9oQixDQUFDLEtBQUssUUFBUSxFQUFFO0lBQ2hDLE9BQ0VqRSxLQUFBLENBQUF1RSxhQUFBLENBQUNsRSxTQUFBLENBQUE2RSxRQUFnQixRQUNkLFVBQUFDLEtBQUEsRUFBYztNQUFBLElBQVhDLElBQUEsR0FBTUQsS0FBQSxDQUFOQyxJQUFBO01BQ0YsT0FBT0EsSUFBSSxhQUFKQSxJQUFJLHVCQUFKQSxJQUFJLENBQUc7UUFDWkMsSUFBSSxFQUFFcEIsQ0FBQztRQUNQYixLQUFLLEVBQUVjLFNBQVM7UUFDaEJiLElBQUksRUFBSkEsSUFBSTtRQUNKUSxTQUFTLEVBQVRBLFNBQVM7UUFDVEwsTUFBQSxFQUFBQTtNQUNGLENBQUMsQ0FBQztJQUNKLENBQ2dCLENBQUM7RUFFdkIsQ0FBQyxNQUFNLElBQUksT0FBT1MsQ0FBQyxLQUFLLFVBQVUsRUFBRTtJQUNsQyxPQUFPQSxDQUFDLENBQUM7TUFBRWIsS0FBSyxFQUFFYyxTQUFTO01BQUViLElBQUksRUFBSkEsSUFBSTtNQUFFUSxTQUFTLEVBQVRBLFNBQVM7TUFBRUwsTUFBQSxFQUFBQTtJQUFPLENBQUMsQ0FBQztFQUN6RDtFQUVBLE9BQU8sSUFBSTtBQUNiLENBQUM7QUFBQyxJQUFBOEIsUUFBQSxHQUVhcEMsSUFBSTtBQUFBSixPQUFBLENBQUFoQyxPQUFBLEdBQUF3RSxRQUFBIiwiaWdub3JlTGlzdCI6W119