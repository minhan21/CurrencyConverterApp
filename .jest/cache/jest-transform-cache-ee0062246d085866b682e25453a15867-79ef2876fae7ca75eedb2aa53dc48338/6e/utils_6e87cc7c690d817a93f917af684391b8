40505ab6464bc82beff4442013f5955f
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getSelectionControlIOSColor = exports.getAndroidSelectionControlColor = void 0;
var _color = _interopRequireDefault(require("color"));
function _interopRequireDefault(obj) {
  return obj && obj.__esModule ? obj : {
    default: obj
  };
}
var getAndroidCheckedColor = function getAndroidCheckedColor(_ref) {
  var theme = _ref.theme,
    customColor = _ref.customColor;
  if (customColor) {
    return customColor;
  }
  if (theme.isV3) {
    return theme.colors.primary;
  }
  return theme.colors.accent;
};
var getAndroidUncheckedColor = function getAndroidUncheckedColor(_ref2) {
  var theme = _ref2.theme,
    customUncheckedColor = _ref2.customUncheckedColor;
  if (customUncheckedColor) {
    return customUncheckedColor;
  }
  if (theme.isV3) {
    return theme.colors.onSurfaceVariant;
  }
  if (theme.dark) {
    return (0, _color.default)(theme.colors.text).alpha(0.7).rgb().string();
  }
  return (0, _color.default)(theme.colors.text).alpha(0.54).rgb().string();
};
var getAndroidRippleColor = function getAndroidRippleColor(_ref3) {
  var theme = _ref3.theme,
    checkedColor = _ref3.checkedColor,
    disabled = _ref3.disabled;
  if (disabled) {
    if (theme.isV3) {
      return (0, _color.default)(theme.colors.onSurface).alpha(0.16).rgb().string();
    }
    return (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();
  }
  return (0, _color.default)(checkedColor).fade(0.32).rgb().string();
};
var getAndroidControlColor = function getAndroidControlColor(_ref4) {
  var theme = _ref4.theme,
    checked = _ref4.checked,
    disabled = _ref4.disabled,
    checkedColor = _ref4.checkedColor,
    uncheckedColor = _ref4.uncheckedColor;
  if (disabled) {
    if (theme.isV3) {
      return theme.colors.onSurfaceDisabled;
    }
    return theme.colors.disabled;
  }
  if (checked) {
    return checkedColor;
  }
  return uncheckedColor;
};
var getAndroidSelectionControlColor = function getAndroidSelectionControlColor(_ref5) {
  var theme = _ref5.theme,
    disabled = _ref5.disabled,
    checked = _ref5.checked,
    customColor = _ref5.customColor,
    customUncheckedColor = _ref5.customUncheckedColor;
  var checkedColor = getAndroidCheckedColor({
    theme: theme,
    customColor: customColor
  });
  var uncheckedColor = getAndroidUncheckedColor({
    theme: theme,
    customUncheckedColor: customUncheckedColor
  });
  return {
    rippleColor: getAndroidRippleColor({
      theme: theme,
      checkedColor: checkedColor,
      disabled: disabled
    }),
    selectionControlColor: getAndroidControlColor({
      theme: theme,
      disabled: disabled,
      checked: checked,
      checkedColor: checkedColor,
      uncheckedColor: uncheckedColor
    })
  };
};
exports.getAndroidSelectionControlColor = getAndroidSelectionControlColor;
var getIOSCheckedColor = function getIOSCheckedColor(_ref6) {
  var theme = _ref6.theme,
    disabled = _ref6.disabled,
    customColor = _ref6.customColor;
  if (disabled) {
    if (theme.isV3) {
      return theme.colors.onSurfaceDisabled;
    }
    return theme.colors.disabled;
  }
  if (customColor) {
    return customColor;
  }
  if (theme.isV3) {
    return theme.colors.primary;
  }
  return theme.colors.accent;
};
var getIOSRippleColor = function getIOSRippleColor(_ref7) {
  var theme = _ref7.theme,
    checkedColor = _ref7.checkedColor,
    disabled = _ref7.disabled;
  if (disabled) {
    if (theme.isV3) {
      return (0, _color.default)(theme.colors.onSurface).alpha(0.16).rgb().string();
    }
    return (0, _color.default)(theme.colors.text).alpha(0.16).rgb().string();
  }
  return (0, _color.default)(checkedColor).fade(0.32).rgb().string();
};
var getSelectionControlIOSColor = function getSelectionControlIOSColor(_ref8) {
  var theme = _ref8.theme,
    disabled = _ref8.disabled,
    customColor = _ref8.customColor;
  var checkedColor = getIOSCheckedColor({
    theme: theme,
    disabled: disabled,
    customColor: customColor
  });
  return {
    checkedColor: checkedColor,
    rippleColor: getIOSRippleColor({
      theme: theme,
      checkedColor: checkedColor,
      disabled: disabled
    })
  };
};
exports.getSelectionControlIOSColor = getSelectionControlIOSColor;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfY29sb3IiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIm9iaiIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwiZ2V0QW5kcm9pZENoZWNrZWRDb2xvciIsIl9yZWYiLCJ0aGVtZSIsImN1c3RvbUNvbG9yIiwiaXNWMyIsImNvbG9ycyIsInByaW1hcnkiLCJhY2NlbnQiLCJnZXRBbmRyb2lkVW5jaGVja2VkQ29sb3IiLCJfcmVmMiIsImN1c3RvbVVuY2hlY2tlZENvbG9yIiwib25TdXJmYWNlVmFyaWFudCIsImRhcmsiLCJ0ZXh0IiwiYWxwaGEiLCJyZ2IiLCJzdHJpbmciLCJnZXRBbmRyb2lkUmlwcGxlQ29sb3IiLCJfcmVmMyIsImNoZWNrZWRDb2xvciIsImRpc2FibGVkIiwib25TdXJmYWNlIiwiZmFkZSIsImdldEFuZHJvaWRDb250cm9sQ29sb3IiLCJfcmVmNCIsImNoZWNrZWQiLCJ1bmNoZWNrZWRDb2xvciIsIm9uU3VyZmFjZURpc2FibGVkIiwiZ2V0QW5kcm9pZFNlbGVjdGlvbkNvbnRyb2xDb2xvciIsIl9yZWY1IiwicmlwcGxlQ29sb3IiLCJzZWxlY3Rpb25Db250cm9sQ29sb3IiLCJleHBvcnRzIiwiZ2V0SU9TQ2hlY2tlZENvbG9yIiwiX3JlZjYiLCJnZXRJT1NSaXBwbGVDb2xvciIsIl9yZWY3IiwiZ2V0U2VsZWN0aW9uQ29udHJvbElPU0NvbG9yIiwiX3JlZjgiXSwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9zcmMvY29tcG9uZW50cy9DaGVja2JveC91dGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6W251bGxdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsSUFBQUEsTUFBQSxHQUFBQyxzQkFBQSxDQUFBQyxPQUFBO0FBQTBCLFNBQUFELHVCQUFBRSxHQUFBO0VBQUEsT0FBQUEsR0FBQSxJQUFBQSxHQUFBLENBQUFDLFVBQUEsR0FBQUQsR0FBQTtJQUFBRSxPQUFBLEVBQUFGO0VBQUE7QUFBQTtBQUkxQixJQUFNRyxzQkFBc0Is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